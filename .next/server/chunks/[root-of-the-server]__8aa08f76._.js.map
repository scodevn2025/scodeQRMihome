{"version":3,"sources":["turbopack:///[project]/src/lib/mijia/auth.ts","turbopack:///[project]/src/lib/mijia/api.ts","turbopack:///[project]/src/lib/mijia/device.ts","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js","turbopack:///[project]/src/app/api/homes/route.ts"],"sourcesContent":["// Mijia Authentication - Chuyển đổi từ Python mijiaLogin\r\n\r\nimport { MijiaSession, MijiaLoginOptions } from './types';\r\n\r\nexport class MijiaAuth {\r\n  private baseUrl = 'https://account.xiaomi.com';\r\n  private serviceUrl = 'https://api.io.mi.com/app';\r\n\r\n  /**\r\n   * Đăng nhập bằng tài khoản/mật khẩu\r\n   */\r\n  async login(username: string, password: string): Promise<MijiaSession> {\r\n    try {\r\n      // Step 1: Lấy captcha và service token\r\n      const captchaResponse = await this.getCaptcha();\r\n      if (!captchaResponse.success) {\r\n        return { success: false, error: 'Failed to get captcha' };\r\n      }\r\n\r\n      // Step 2: Đăng nhập với captcha\r\n      const loginResponse = await this.performLogin(username, password, captchaResponse.captcha);\r\n      if (!loginResponse.success) {\r\n        return { success: false, error: 'Login failed' };\r\n      }\r\n\r\n      // Step 3: Lấy service token\r\n      const serviceTokenResponse = await this.getServiceToken(loginResponse.token);\r\n      if (!serviceTokenResponse.success) {\r\n        return { success: false, error: 'Failed to get service token' };\r\n      }\r\n\r\n      return {\r\n        success: true,\r\n        token: loginResponse.token,\r\n        service_token: serviceTokenResponse.service_token,\r\n        security_token: serviceTokenResponse.security_token,\r\n        user_id: loginResponse.user_id,\r\n        user_name: loginResponse.user_name,\r\n        user_avatar: loginResponse.user_avatar\r\n      };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error instanceof Error ? error.message : 'Unknown error' \r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Đăng nhập bằng QR code\r\n   */\r\n  async QRlogin(): Promise<MijiaSession> {\r\n    try {\r\n      // Tạo QR code data\r\n      const qrData = {\r\n        qr_id: this.generateQRId(),\r\n        timestamp: Date.now(),\r\n        action: 'login'\r\n      };\r\n\r\n      // Trong thực tế, đây sẽ là URL để quét QR\r\n      const qrUrl = `mijia://login?qr_id=${qrData.qr_id}&timestamp=${qrData.timestamp}`;\r\n\r\n      // Simulate QR scan và login\r\n      // Trong thực tế, cần polling để check QR status\r\n      return {\r\n        success: true,\r\n        token: `qr_token_${qrData.qr_id}`,\r\n        service_token: `service_token_${qrData.qr_id}`,\r\n        security_token: `security_token_${qrData.qr_id}`,\r\n        user_id: 'qr_user',\r\n        user_name: 'QR User',\r\n        user_avatar: null\r\n      };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error instanceof Error ? error.message : 'QR login failed' \r\n      };\r\n    }\r\n  }\r\n\r\n  private async getCaptcha(): Promise<{ success: boolean; captcha?: any; error?: string }> {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}/pass/serviceLoginAuth2`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams({\r\n          'sid': 'xiaomiio',\r\n          'hash': 'HASH_VALUE', // Cần tính toán hash thực tế\r\n          'callback': 'https://sts.api.io.mi.com/sts',\r\n          'qs': '%3Fsid%3Dxiaomiio%26_json%3Dtrue',\r\n          'user': '',\r\n          '_json': 'true'\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n      return { success: true, captcha: data };\r\n    } catch (error) {\r\n      return { success: false, error: 'Failed to get captcha' };\r\n    }\r\n  }\r\n\r\n  private async performLogin(username: string, password: string, captcha: any): Promise<{ success: boolean; token?: string; user_id?: string; user_name?: string; user_avatar?: string; error?: string }> {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}/pass/serviceLoginAuth2`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams({\r\n          'sid': 'xiaomiio',\r\n          'hash': 'HASH_VALUE',\r\n          'callback': 'https://sts.api.io.mi.com/sts',\r\n          'qs': '%3Fsid%3Dxiaomiio%26_json%3Dtrue',\r\n          'user': username,\r\n          'hash': password,\r\n          '_json': 'true',\r\n          ...captcha\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.code === 0) {\r\n        return {\r\n          success: true,\r\n          token: data.token,\r\n          user_id: data.user_id,\r\n          user_name: data.user_name,\r\n          user_avatar: data.user_avatar\r\n        };\r\n      } else {\r\n        return { success: false, error: data.desc || 'Login failed' };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: 'Login request failed' };\r\n    }\r\n  }\r\n\r\n  private async getServiceToken(token: string): Promise<{ success: boolean; service_token?: string; security_token?: string; error?: string }> {\r\n    try {\r\n      const response = await fetch(`${this.serviceUrl}/home/device_list`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          getVirtualModel: false,\r\n          getHuamiDevices: 0\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.code === 0) {\r\n        return {\r\n          success: true,\r\n          service_token: data.service_token,\r\n          security_token: data.security_token\r\n        };\r\n      } else {\r\n        return { success: false, error: 'Failed to get service token' };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: 'Service token request failed' };\r\n    }\r\n  }\r\n\r\n  private generateQRId(): string {\r\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n  }\r\n}\r\n\r\nexport const mijiaAuth = new MijiaAuth();\r\n","// Mijia API - Chuyển đổi từ Python mijiaAPI\r\n\r\nimport { MijiaSession, MijiaDevice, MijiaHome, MijiaScene, MijiaDeviceUpdate, MijiaDeviceAction, MijiaAPIResponse } from './types';\r\n\r\nexport class MijiaAPI {\r\n  private session: MijiaSession | null = null;\r\n  private baseUrl = 'https://api.io.mi.com/app';\r\n\r\n  constructor(session?: MijiaSession) {\r\n    if (session) {\r\n      this.session = session;\r\n    }\r\n  }\r\n\r\n  setSession(session: MijiaSession): void {\r\n    this.session = session;\r\n  }\r\n\r\n  private async request<T>(endpoint: string, options: RequestInit = {}): Promise<MijiaAPIResponse<T>> {\r\n    if (!this.session?.service_token) {\r\n      return { success: false, error: 'Not authenticated' };\r\n    }\r\n\r\n    try {\r\n      // Generate nonce and signature like Python API\r\n      const nonce = this.generateNonce();\r\n      const signedNonce = this.generateSignedNonce(this.session.ssecurity || '', nonce);\r\n      const data = this.formatData(typeof options.body === 'string' ? options.body : '{}');\r\n      const signature = this.generateSignature(endpoint, signedNonce, nonce, data);\r\n\r\n      const formData = new URLSearchParams();\r\n      formData.append('_nonce', nonce);\r\n      formData.append('data', data);\r\n      formData.append('signature', signature);\r\n\r\n      const response = await fetch(`${this.baseUrl}${endpoint}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'User-Agent': 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Mobile Safari/537.36 Edg/126.0.0.0',\r\n          'x-xiaomi-protocal-flag-cli': 'PROTOCAL-HTTP2',\r\n          'Cookie': `PassportDeviceId=${this.session.passport_device_id};userId=${this.session.user_id};serviceToken=${this.session.service_token};`,\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n          ...options.headers,\r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      const responseData = await response.json();\r\n      \r\n      if (responseData.code === 0) {\r\n        // Python API trả về trực tiếp data, không có result wrapper\r\n        return { success: true, data: responseData.result || responseData };\r\n      } else {\r\n        return { success: false, error: `获取数据失败, ${responseData.message}` };\r\n      }\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error instanceof Error ? error.message : 'Network error' \r\n      };\r\n    }\r\n  }\r\n\r\n  private generateNonce(): string {\r\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    let result = '';\r\n    for (let i = 0; i < 16; i++) {\r\n      result += chars.charAt(Math.floor(Math.random() * chars.length));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private generateSignedNonce(ssecurity: string, nonce: string): string {\r\n    // Simple hash implementation for browser compatibility\r\n    const str = ssecurity + nonce;\r\n    let hash = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n      const char = str.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash; // Convert to 32bit integer\r\n    }\r\n    return btoa(hash.toString());\r\n  }\r\n\r\n  private generateSignature(uri: string, signedNonce: string, nonce: string, data: string): string {\r\n    // Simple signature implementation for browser compatibility\r\n    const sign = `${uri}&${signedNonce}&${nonce}&data=${data}`;\r\n    let hash = 0;\r\n    for (let i = 0; i < sign.length; i++) {\r\n      const char = sign.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash; // Convert to 32bit integer\r\n    }\r\n    return btoa(hash.toString());\r\n  }\r\n\r\n  private formatData(data: string): string {\r\n    return data\r\n      .replace(/'/g, '\"')\r\n      .replace(/True/g, 'true')\r\n      .replace(/False/g, 'false');\r\n  }\r\n\r\n  /**\r\n   * Lấy danh sách thiết bị\r\n   */\r\n  async get_devices_list(): Promise<MijiaAPIResponse<MijiaDevice[]>> {\r\n    // First get homes list\r\n    const homesResponse = await this.get_homes_list();\r\n    if (!homesResponse.success || !homesResponse.data) {\r\n      return { success: false, error: 'Failed to get homes list' };\r\n    }\r\n\r\n    const devices: MijiaDevice[] = [];\r\n    const deviceIds = new Set<string>(); // Để tránh trùng lặp thiết bị\r\n\r\n    for (const home of homesResponse.data) {\r\n      let start_did = '';\r\n      let has_more = true;\r\n      \r\n      while (has_more) {\r\n        const response = await this.request<{ device_info: unknown[]; has_more: boolean; next_did: string }>('/home/home_device_list', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            home_owner: home.id,\r\n            home_id: parseInt(home.id),\r\n            limit: 200,\r\n            start_did: start_did,\r\n            get_split_device: true,        // Lấy thiết bị được chia sẻ\r\n            support_smart_home: true,      // Hỗ trợ smart home\r\n            get_cariot_device: true,       // Lấy thiết bị Cariot\r\n            get_third_device: true,        // Lấy thiết bị bên thứ 3\r\n            get_share_device: true,        // Lấy thiết bị được chia sẻ\r\n            get_room_device: true,         // Lấy thiết bị trong phòng\r\n            get_all_device: true           // Lấy tất cả thiết bị\r\n          })\r\n        });\r\n\r\n        if (response.success && response.data?.device_info) {\r\n          // Lọc thiết bị trùng lặp và thêm vào danh sách\r\n          for (const device of response.data.device_info) {\r\n            const d = device as Record<string, unknown>;\r\n            const deviceId = (d.did || d.id) as string;\r\n            if (deviceId && !deviceIds.has(deviceId)) {\r\n              deviceIds.add(deviceId);\r\n              devices.push(device as MijiaDevice);\r\n            }\r\n          }\r\n          \r\n          start_did = (response.data.next_did as string) || '';\r\n          has_more = response.data.has_more && start_did !== '';\r\n        } else {\r\n          has_more = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return { success: true, data: devices };\r\n  }\r\n\r\n  /**\r\n   * Lấy thiết bị được chia sẻ\r\n   */\r\n  async get_shared_devices(): Promise<MijiaAPIResponse<MijiaDevice[]>> {\r\n    const response = await this.request<{ device_info: unknown[] }>('/home/home_device_list', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        get_share_device: true,\r\n        get_split_device: true,\r\n        get_third_device: true,\r\n        limit: 500\r\n      })\r\n    });\r\n\r\n    if (response.success && response.data?.device_info) {\r\n      return { success: true, data: response.data.device_info as MijiaDevice[] };\r\n    }\r\n\r\n    return { success: true, data: [] };\r\n  }\r\n\r\n  /**\r\n   * Lấy tất cả thiết bị bao gồm thiết bị được chia sẻ\r\n   */\r\n  async get_all_devices(): Promise<MijiaAPIResponse<MijiaDevice[]>> {\r\n    // Lấy thiết bị thông thường\r\n    const devicesResponse = await this.get_devices_list();\r\n    if (!devicesResponse.success) {\r\n      return devicesResponse;\r\n    }\r\n\r\n    // Lấy thiết bị được chia sẻ\r\n    const sharedResponse = await this.get_shared_devices();\r\n    if (!sharedResponse.success) {\r\n      return sharedResponse;\r\n    }\r\n\r\n    // Gộp và loại bỏ trùng lặp\r\n    const allDevices = [...(devicesResponse.data || [])];\r\n    const deviceIds = new Set(allDevices.map(d => d.id));\r\n\r\n    for (const device of sharedResponse.data || []) {\r\n      const deviceId = device.id;\r\n      if (deviceId && !deviceIds.has(deviceId)) {\r\n        deviceIds.add(deviceId);\r\n        allDevices.push(device);\r\n      }\r\n    }\r\n\r\n    return { success: true, data: allDevices };\r\n  }\r\n\r\n  /**\r\n   * Lấy danh sách nhà/phòng\r\n   */\r\n  async get_homes_list(): Promise<MijiaAPIResponse<MijiaHome[]>> {\r\n    const response = await this.request<{ home_list: unknown[] }>('/v2/homeroom/gethome_merged', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        fg: true,\r\n        fetch_share: true,\r\n        fetch_share_dev: true,\r\n        limit: 300,\r\n        app_ver: 7\r\n      })\r\n    });\r\n\r\n    if (response.success && response.data?.home_list) {\r\n      return { success: true, data: response.data.home_list as MijiaHome[] };\r\n    }\r\n\r\n    return { success: false, error: 'Failed to get homes list' };\r\n  }\r\n\r\n  /**\r\n   * Lấy danh sách kịch bản\r\n   */\r\n  async get_scenes_list(home_id: string): Promise<MijiaAPIResponse<MijiaScene[]>> {\r\n    const response = await this.request<{ scene_info_list: unknown[] }>('/appgateway/miot/appsceneservice/AppSceneService/GetSceneList', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ home_id })\r\n    });\r\n\r\n    if (response.success && response.data?.scene_info_list) {\r\n      return { success: true, data: response.data.scene_info_list as MijiaScene[] };\r\n    }\r\n\r\n    return { success: true, data: [] };\r\n  }\r\n\r\n  /**\r\n   * Thực thi kịch bản\r\n   */\r\n  async run_scene(scene_id: string): Promise<MijiaAPIResponse> {\r\n    const response = await this.request('/appgateway/miot/appsceneservice/AppSceneService/RunScene', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ \r\n        scene_id, \r\n        trigger_key: \"user.click\" \r\n      })\r\n    });\r\n\r\n    // Python API trả về boolean, không phải object\r\n    return { success: response.success, data: response.success };\r\n  }\r\n\r\n  /**\r\n   * Lấy thuộc tính thiết bị\r\n   */\r\n  async get_devices_prop(device: MijiaDevice): Promise<MijiaAPIResponse<unknown>> {\r\n    const response = await this.request('/miotspec/prop/get', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ \r\n        params: [{\r\n          did: device.id,\r\n          siid: 2,\r\n          piid: 1\r\n        }]\r\n      })\r\n    });\r\n\r\n    // Python API trả về trực tiếp array, không phải object\r\n    return { success: response.success, data: response.data || [] };\r\n  }\r\n\r\n  /**\r\n   * Đặt thuộc tính thiết bị\r\n   */\r\n  async set_devices_prop(device: MijiaDevice): Promise<MijiaAPIResponse> {\r\n    const properties = Object.entries(device.properties).map(([, value]) => ({\r\n      did: device.id,\r\n      siid: 2,\r\n      piid: 1,\r\n      value: value\r\n    }));\r\n\r\n    const response = await this.request('/miotspec/prop/set', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        params: properties\r\n      })\r\n    });\r\n\r\n    // Python API trả về trực tiếp array, không phải object\r\n    return { success: response.success, data: response.data || [] };\r\n  }\r\n\r\n  /**\r\n   * Thực thi hành động trên thiết bị\r\n   */\r\n  async run_action(actionData: MijiaDeviceAction): Promise<MijiaAPIResponse> {\r\n    const response = await this.request('/miotspec/action', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        params: {\r\n          did: actionData.device_id,\r\n          siid: 2,\r\n          aiid: 1,\r\n          value: actionData.params\r\n        }\r\n      })\r\n    });\r\n\r\n    // Python API trả về trực tiếp object, không phải wrapper\r\n    return { success: response.success, data: response.data || {} };\r\n  }\r\n\r\n  /**\r\n   * Lấy thông tin thiết bị theo tên\r\n   */\r\n  async get_device_by_name(dev_name: string): Promise<MijiaAPIResponse<MijiaDevice | null>> {\r\n    const devicesResponse = await this.get_devices_list();\r\n    if (!devicesResponse.success || !devicesResponse.data) {\r\n      return { success: false, error: 'Failed to get devices' };\r\n    }\r\n\r\n    const device = devicesResponse.data.find(d => d.name === dev_name);\r\n    return { success: true, data: device || null };\r\n  }\r\n\r\n  async get_device_by_id(device_id: string): Promise<MijiaAPIResponse<MijiaDevice | null>> {\r\n    const devicesResponse = await this.get_devices_list();\r\n    if (!devicesResponse.success || !devicesResponse.data) {\r\n      return { success: false, error: 'Failed to get devices' };\r\n    }\r\n\r\n    const device = devicesResponse.data.find(d => d.id === device_id);\r\n    return { success: true, data: device || null };\r\n  }\r\n\r\n  /**\r\n   * Cập nhật thiết bị\r\n   */\r\n  async update_device(deviceUpdate: MijiaDeviceUpdate): Promise<MijiaAPIResponse> {\r\n    const deviceResponse = await this.get_device_by_id(deviceUpdate.device_id);\r\n    if (!deviceResponse.success || !deviceResponse.data) {\r\n      return { success: false, error: 'Device not found' };\r\n    }\r\n\r\n    const device = deviceResponse.data;\r\n    device.properties = { ...device.properties, ...deviceUpdate.properties };\r\n\r\n    const response = await this.set_devices_prop(device);\r\n    return response;\r\n  }\r\n}\r\n\r\nexport const mijiaAPI = new MijiaAPI();\r\n","// Mijia Device - Chuyển đổi từ Python mijiaDevice\r\n\r\nimport { MijiaDevice, MijiaAPI } from './types';\r\n\r\nexport class MijiaDeviceWrapper {\r\n  private device: MijiaDevice;\r\n  private api: MijiaAPI;\r\n\r\n  constructor(api: MijiaAPI, device: MijiaDevice) {\r\n    this.api = api;\r\n    this.device = device;\r\n  }\r\n\r\n  // Device properties\r\n  get id(): string {\r\n    return this.device.id;\r\n  }\r\n\r\n  get name(): string {\r\n    return this.device.name;\r\n  }\r\n\r\n  get type(): string {\r\n    return this.device.type;\r\n  }\r\n\r\n  get model(): string {\r\n    return this.device.model;\r\n  }\r\n\r\n  get online(): boolean {\r\n    return this.device.online;\r\n  }\r\n\r\n  get homeId(): string {\r\n    return this.device.home_id;\r\n  }\r\n\r\n  // Light properties\r\n  get power(): boolean {\r\n    return this.device.properties.power || false;\r\n  }\r\n\r\n  set power(value: boolean) {\r\n    this.device.properties.power = value;\r\n  }\r\n\r\n  get brightness(): number {\r\n    return this.device.properties.brightness || 0;\r\n  }\r\n\r\n  set brightness(value: number) {\r\n    this.device.properties.brightness = Math.max(0, Math.min(100, value));\r\n  }\r\n\r\n  get colorTemp(): number {\r\n    return this.device.properties.colorTemp || 4000;\r\n  }\r\n\r\n  set colorTemp(value: number) {\r\n    this.device.properties.colorTemp = Math.max(1700, Math.min(6500, value));\r\n  }\r\n\r\n  get color(): string {\r\n    return this.device.properties.color || '#ffffff';\r\n  }\r\n\r\n  set color(value: string) {\r\n    this.device.properties.color = value;\r\n  }\r\n\r\n  // Sensor properties\r\n  get temperature(): number | null {\r\n    return this.device.properties.temperature || null;\r\n  }\r\n\r\n  get humidity(): number | null {\r\n    return this.device.properties.humidity || null;\r\n  }\r\n\r\n  get pressure(): number | null {\r\n    return this.device.properties.pressure || null;\r\n  }\r\n\r\n  // Camera properties\r\n  get recording(): boolean {\r\n    return this.device.properties.recording || false;\r\n  }\r\n\r\n  set recording(value: boolean) {\r\n    this.device.properties.recording = value;\r\n  }\r\n\r\n  get motionDetection(): boolean {\r\n    return this.device.properties.motionDetection || false;\r\n  }\r\n\r\n  set motionDetection(value: boolean) {\r\n    this.device.properties.motionDetection = value;\r\n  }\r\n\r\n  get nightVision(): boolean {\r\n    return this.device.properties.nightVision || false;\r\n  }\r\n\r\n  set nightVision(value: boolean) {\r\n    this.device.properties.nightVision = value;\r\n  }\r\n\r\n  get volume(): number {\r\n    return this.device.properties.volume || 0;\r\n  }\r\n\r\n  set volume(value: number) {\r\n    this.device.properties.volume = Math.max(0, Math.min(100, value));\r\n  }\r\n\r\n  // Methods\r\n  async turnOn(): Promise<boolean> {\r\n    this.power = true;\r\n    return await this.save();\r\n  }\r\n\r\n  async turnOff(): Promise<boolean> {\r\n    this.power = false;\r\n    return await this.save();\r\n  }\r\n\r\n  async setBrightness(brightness: number): Promise<boolean> {\r\n    this.brightness = brightness;\r\n    return await this.save();\r\n  }\r\n\r\n  async setColor(color: string): Promise<boolean> {\r\n    this.color = color;\r\n    return await this.save();\r\n  }\r\n\r\n  async setColorTemp(colorTemp: number): Promise<boolean> {\r\n    this.colorTemp = colorTemp;\r\n    return await this.save();\r\n  }\r\n\r\n  async setVolume(volume: number): Promise<boolean> {\r\n    this.volume = volume;\r\n    return await this.save();\r\n  }\r\n\r\n  async startRecording(): Promise<boolean> {\r\n    this.recording = true;\r\n    return await this.save();\r\n  }\r\n\r\n  async stopRecording(): Promise<boolean> {\r\n    this.recording = false;\r\n    return await this.save();\r\n  }\r\n\r\n  async enableMotionDetection(): Promise<boolean> {\r\n    this.motionDetection = true;\r\n    return await this.save();\r\n  }\r\n\r\n  async disableMotionDetection(): Promise<boolean> {\r\n    this.motionDetection = false;\r\n    return await this.save();\r\n  }\r\n\r\n  async enableNightVision(): Promise<boolean> {\r\n    this.nightVision = true;\r\n    return await this.save();\r\n  }\r\n\r\n  async disableNightVision(): Promise<boolean> {\r\n    this.nightVision = false;\r\n    return await this.save();\r\n  }\r\n\r\n  private async save(): Promise<boolean> {\r\n    try {\r\n      const response = await this.api.set_devices_prop(this.device);\r\n      return response.success;\r\n    } catch (error) {\r\n      console.error('Failed to save device properties:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async refresh(): Promise<boolean> {\r\n    try {\r\n      const response = await this.api.get_devices_prop(this.device);\r\n      if (response.success && response.data) {\r\n        this.device.properties = { ...this.device.properties, ...response.data };\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      console.error('Failed to refresh device properties:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Get all properties\r\n  getProperties(): Record<string, any> {\r\n    return { ...this.device.properties };\r\n  }\r\n\r\n  // Set multiple properties at once\r\n  async setProperties(properties: Record<string, any>): Promise<boolean> {\r\n    Object.assign(this.device.properties, properties);\r\n    return await this.save();\r\n  }\r\n}\r\n\r\n// Factory function để tạo device wrapper\r\nexport function createMijiaDevice(api: MijiaAPI, device: MijiaDevice): MijiaDeviceWrapper {\r\n  return new MijiaDeviceWrapper(api, device);\r\n}\r\n\r\n// Factory function để tạo device wrapper by name\r\nexport async function createMijiaDeviceByName(api: MijiaAPI, dev_name: string): Promise<MijiaDeviceWrapper | null> {\r\n  const response = await api.get_device_by_name(dev_name);\r\n  if (response.success && response.data) {\r\n    return new MijiaDeviceWrapper(api, response.data);\r\n  }\r\n  return null;\r\n}\r\n","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/homes/route\",\n        pathname: \"/api/homes\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/src/app/api/homes/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/homes/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n","import { NextRequest, NextResponse } from 'next/server';\r\nimport { mijiaAPI } from '@/lib/mijia';\r\n\r\nexport async function GET() {\r\n  try {\r\n    // Lấy danh sách nhà/phòng từ Mijia API\r\n    const response = await mijiaAPI.get_homes_list();\r\n    \r\n    if (response.success && response.data) {\r\n      return NextResponse.json({\r\n        success: true,\r\n        data: response.data\r\n      });\r\n    } else {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: response.error || 'Failed to fetch homes from Mijia API'\r\n      }, { status: 500 });\r\n    }\r\n  } catch (error) {\r\n    console.error('Get homes error:', error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to fetch homes'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"i2CAkLyB,IA9KlB,AA8KsB,MA7KnB,AADG,QACO,4BAA6B,CACvC,WAAa,2BAKrB,AALiD,OAK3C,MAAM,CAAgB,CAAE,CAAgB,CAAyB,CACrE,GAAI,CAEF,IAAM,EAAkB,MAAM,IAAI,CAAC,UAAU,GAC7C,GAAI,CAAC,EAAgB,OAAO,CAC1B,CAD4B,KACrB,CAAE,SAAS,EAAO,MAAO,uBAAwB,EAI1D,IAAM,EAAgB,MAAM,IAAI,CAAC,YAAY,CAAC,EAAU,EAAU,EAAgB,OAAO,EACzF,GAAI,CAAC,EAAc,OAAO,CACxB,CAD0B,KACnB,CAAE,SAAS,EAAO,MAAO,cAAe,EAIjD,IAAM,EAAuB,MAAM,IAAI,CAAC,eAAe,CAAC,EAAc,KAAK,EAC3E,GAAI,CAAC,EAAqB,OAAO,CAC/B,CADiC,KAC1B,CAAE,SAAS,EAAO,MAAO,6BAA8B,EAGhE,MAAO,CACL,SAAS,EACT,MAAO,EAAc,KAAK,CAC1B,cAAe,EAAqB,aAAa,CACjD,eAAgB,EAAqB,cAAc,CACnD,QAAS,EAAc,OAAO,CAC9B,UAAW,EAAc,SAAS,CAClC,YAAa,EAAc,WAAW,AACxC,CACF,CAAE,MAAO,EAAO,CACd,MAAO,CACL,QAAS,GACT,MAAO,aAAiB,MAAQ,EAAM,OAAO,CAAG,eAClD,CACF,CACF,CAKA,MAAM,SAAiC,CACrC,GAAI,CAEF,IAAM,EAAS,CACb,MAAO,IAAI,CAAC,YAAY,GACxB,UAAW,KAAK,GAAG,GACnB,OAAQ,OACV,EAOA,OAJqC,EAAO,KAAK,CAAC,AAAa,EAAO,SAAT,AAAkB,CAIxE,CAJ0E,AAK/E,SAAS,EACT,MAAO,CAAC,SAAS,EAAE,EAAO,KAAK,CAAA,CAAE,CACjC,cAAe,CAAC,cAAc,EAAE,EAAO,KAAK,CAAA,CAAE,CAC9C,eAAgB,CAAC,eAAe,EAAE,EAAO,KAAK,CAAA,CAAE,CAChD,QAAS,UACT,UAAW,UACX,YAAa,IACf,CACF,CAAE,MAAO,EAAO,CACd,MAAO,CACL,SAAS,EACT,MAAO,aAAiB,MAAQ,EAAM,OAAO,CAAG,iBAClD,CACF,CACF,CAEA,MAAc,YAA2E,CACvF,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,CAAA,EAAG,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAE,CACrE,OAAQ,OACR,QAAS,CACP,eAAgB,mCAClB,EACA,KAAM,IAAI,gBAAgB,CACxB,IAAO,WACP,KAAQ,aACR,SAAY,gCACZ,GAAM,mCACN,KAAQ,GACR,MAAS,MACX,EACF,GAEM,EAAO,MAAM,EAAS,IAAI,GAChC,MAAO,CAAE,SAAS,EAAM,QAAS,CAAK,CACxC,CAAE,MAAO,EAAO,CACd,MAAO,CAAE,SAAS,EAAO,MAAO,uBAAwB,CAC1D,CACF,CAEA,MAAc,aAAa,CAAgB,CAAE,CAAgB,CAAE,CAAY,CAA6H,CACtM,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,CAAA,EAAG,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAE,CACrE,OAAQ,OACR,QAAS,CACP,eAAgB,mCAClB,EACA,KAAM,IAAI,gBAAgB,CACxB,IAAO,WACP,KAAQ,aACR,SAAY,gCACZ,GAAM,mCACN,KAAQ,EACR,KAAQ,EACR,MAAS,OACT,GAAG,CAAO,AACZ,EACF,GAEM,EAAO,MAAM,EAAS,IAAI,GAEhC,GAAkB,GAAG,CAAjB,EAAK,IAAI,CACX,MAAO,CACL,SAAS,EACT,MAAO,EAAK,KAAK,CACjB,QAAS,EAAK,OAAO,CACrB,UAAW,EAAK,SAAS,CACzB,YAAa,EAAK,WAAW,AAC/B,EAEA,MAAO,CAAE,SAAS,EAAO,MAAO,EAAK,IAAI,EAAI,cAAe,CAEhE,CAAE,MAAO,EAAO,CACd,MAAO,CAAE,QAAS,GAAO,MAAO,sBAAuB,CACzD,CACF,CAEA,MAAc,gBAAgB,CAAa,CAAkG,CAC3I,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,CAAA,EAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAE,CAClE,OAAQ,OACR,QAAS,CACP,cAAiB,CAAC,OAAO,EAAE,EAAA,CAAO,CAClC,eAAgB,kBAClB,EACA,KAAM,KAAK,SAAS,CAAC,CACnB,iBAAiB,EACjB,gBAAiB,CACnB,EACF,GAEM,EAAO,MAAM,EAAS,IAAI,GAEhC,GAAkB,GAAG,CAAjB,EAAK,IAAI,CACX,MAAO,CACL,SAAS,EACT,cAAe,EAAK,aAAa,CACjC,eAAgB,EAAK,cAAc,AACrC,EAEA,MAAO,CAAE,QAAS,GAAO,MAAO,6BAA8B,CAElE,CAAE,MAAO,EAAO,CACd,MAAO,CAAE,SAAS,EAAO,MAAO,8BAA+B,CACjE,CACF,CAEQ,cAAuB,CAC7B,OAAO,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,EAAG,IAAM,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,EAAG,GAC/F,CACF,gCC+LO,IAAM,EAAW,IA3WjB,AA2WqB,MA3Wf,AACH,QAA+B,IAAK,CACpC,QAAU,2BAA4B,AAE9C,aAAY,CAAsB,CAAE,CAC9B,IACF,IAAI,CADO,AACN,OAAO,CAAG,CAAA,CAEnB,CAEA,WAAW,CAAqB,CAAQ,CACtC,IAAI,CAAC,OAAO,CAAG,CACjB,CAEA,MAAc,QAAW,CAAgB,CAAE,EAAuB,CAAC,CAAC,CAAgC,CAClG,GAAI,CAAC,IAAI,CAAC,OAAO,EAAE,cACjB,CADgC,KACzB,CAAE,QAAS,GAAO,MAAO,mBAAoB,EAGtD,GAAI,CAEF,IAAM,EAAQ,IAAI,CAAC,aAAa,GAC1B,EAAc,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAI,GAAI,GACrE,EAAO,IAAI,CAAC,UAAU,CAAC,AAAwB,iBAAjB,EAAQ,IAAI,CAAgB,EAAQ,IAAI,CAAG,MACzE,EAAY,IAAI,CAAC,iBAAiB,CAAC,EAAU,EAAa,EAAO,GAEjE,EAAW,IAAI,gBACrB,EAAS,MAAM,CAAC,SAAU,GAC1B,EAAS,MAAM,CAAC,OAAQ,GACxB,EAAS,MAAM,CAAC,YAAa,GAE7B,IAAM,EAAW,MAAM,MAAM,CAAA,EAAG,IAAI,CAAC,OAAO,CAAA,EAAG,EAAA,CAAU,CAAE,CACzD,OAAQ,OACR,QAAS,CACP,aAAc,oJACd,6BAA8B,iBAC9B,OAAU,CAAC,iBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAC1I,eAAgB,oCAChB,GAAG,EAAQ,OAAO,AACpB,EACA,KAAM,CACR,GAEM,EAAe,MAAM,EAAS,IAAI,GAExC,GAA0B,GAAG,CAAzB,EAAa,IAAI,CAEnB,MAAO,CAAE,QAAS,GAAM,KAAM,EAAa,MAAM,EAAI,CAAa,EAElE,MAAO,CAAE,SAAS,EAAO,MAAO,CAAC,QAAQ,EAAE,EAAa,OAAO,CAAA,CAAE,AAAC,CAEtE,CAAE,MAAO,EAAO,CACd,MAAO,CACL,SAAS,EACT,MAAO,aAAiB,MAAQ,EAAM,OAAO,CAAG,eAClD,CACF,CACF,CAEQ,eAAwB,CAC9B,IAAM,EAAQ,iEACV,EAAS,GACb,IAAK,IAAI,EAAI,EAAG,EAAI,GAAI,IAAK,AAC3B,GAAU,EAAM,MAAM,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,EAAM,MAAM,GAEhE,OAAO,CACT,CAEQ,oBAAoB,CAAiB,CAAE,CAAa,CAAU,CAEpE,IAAM,EAAM,EAAY,EACpB,EAAO,EACX,IAAK,IAAI,EAAI,EAAG,EAAI,EAAI,MAAM,CAAE,IAAK,AAEnC,EAAQ,CAAC,IAAQ,CAAC,CAAI,EADT,EAAI,GACa,OADH,CAAC,GAE5B,GAAc,EAEhB,EAFS,EAAa,GAEf,KAAK,EAAK,QAAQ,GAC3B,CAEQ,KAL2C,aAKzB,CAAW,CAAE,CAAmB,CAAE,CAAa,CAAE,CAAY,CAAU,CAE/F,IAAM,EAAO,CAAA,EAAG,EAAI,CAAC,EAAE,EAAY,CAAC,EAAE,EAAM,MAAM,EAAE,EAAA,CAAM,CACtD,EAAO,EACX,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,MAAM,CAAE,IAAK,AAEpC,EAAQ,CAAC,IAAQ,CAAC,CAAI,EADT,EAAK,GACY,OADF,CAAC,GAE7B,GAAc,EAEhB,EAFS,EAAa,GAEf,KAAK,EAAK,QAAQ,GAC3B,CAEQ,KAL2C,MAKhC,CAAY,CAAU,CACvC,OAAO,EACJ,OAAO,CAAC,KAAM,KACd,OAAO,CAAC,QAAS,QACjB,OAAO,CAAC,SAAU,QACvB,CAKA,MAAM,kBAA6D,CAEjE,IAAM,EAAgB,MAAM,IAAI,CAAC,cAAc,GAC/C,GAAI,CAAC,EAAc,OAAO,EAAI,CAAC,EAAc,IAAI,CAC/C,CADiD,KAC1C,CAAE,SAAS,EAAO,MAAO,0BAA2B,EAG7D,IAAM,EAAyB,EAAE,CAC3B,EAAY,IAAI,IAEtB,GAFqC,CAEhC,IAAM,KAAQ,EAAc,IAAI,CAAE,CACrC,IAAI,EAAY,GACZ,GAJ6D,AAIlD,EAEf,KAAO,GAAU,CACf,IAAM,EAAW,MAAM,IAAI,CAAC,OAAO,CAAkE,yBAA0B,CAC7H,OAAQ,OACR,KAAM,KAAK,SAAS,CAAC,CACnB,WAAY,EAAK,EAAE,CACnB,QAAS,SAAS,EAAK,EAAE,EACzB,MAAO,IACP,UAAW,EACX,kBAAkB,EAClB,oBAAoB,EACpB,mBAAmB,EACnB,kBAAkB,EAClB,iBAAkB,GAClB,iBAAiB,EACjB,gBAAgB,CAClB,EACF,EAFmC,CAInC,GAAI,EAAS,OAAO,EAAI,EAAS,IAAI,CAJoB,CAIlB,YAAa,CAElD,IAAK,IAAM,KAAU,EAAS,IAAI,CAAC,WAAW,CAAE,CAE9C,IAAM,EAAY,EAAE,GAAG,EADb,AACiB,EAAE,EAAE,CAC3B,GAAY,CAAC,EAAU,GAAG,CAAC,KAC7B,EAAU,GAAG,CAD2B,AAC1B,GACd,EAAQ,IAAI,CAAC,GAEjB,CAEA,EAAa,EAAS,IAAI,CAAC,QAAQ,EAAe,GAClD,EAAW,EAAS,IAAI,CAAC,QAAQ,EAAkB,KAAd,CACvC,MACE,CADK,EACM,CAEf,CACF,CAEA,MAAO,CAAE,SAAS,EAAM,KAAM,CAAQ,CACxC,CAKA,MAAM,oBAA+D,CACnE,IAAM,EAAW,MAAM,IAAI,CAAC,OAAO,CAA6B,yBAA0B,CACxF,OAAQ,OACR,KAAM,KAAK,SAAS,CAAC,CACnB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,MAAO,GACT,EACF,UAEA,AAAI,EAAS,OAAO,EAAI,EAAS,IAAI,EAAE,YAC9B,CAD2C,AACzC,SAAS,EAAM,KAAM,EAAS,IAAI,CAAC,WAAW,AAAkB,EAGpE,CAAE,QAAS,GAAM,KAAM,EAAE,AAAC,CACnC,CAKA,MAAM,iBAA4D,CAEhE,IAAM,EAAkB,MAAM,IAAI,CAAC,gBAAgB,GACnD,GAAI,CAAC,EAAgB,OAAO,CAC1B,CAD4B,MACrB,EAIT,IAAM,EAAiB,MAAM,IAAI,CAAC,kBAAkB,GACpD,GAAI,CAAC,EAAe,OAAO,CACzB,CAD2B,MACpB,EAIT,IAAM,EAAa,IAAK,EAAgB,IAAI,EAAI,EAAE,CAAE,CAC9C,EAAY,IAAI,IAAI,EAAW,GAAG,CAAC,GAAK,EAAE,EAAE,GAElD,IAAK,IAAM,KAAU,EAAe,IAAI,EAAI,EAAE,CAAE,CAC9C,IAAM,EAAW,EAAO,EAAE,CACtB,GAAY,CAAC,EAAU,GAAG,CAAC,KAC7B,EAAU,GAAG,CAAC,AAD0B,GAExC,EAAW,IAAI,CAAC,GAEpB,CAEA,MAAO,CAAE,SAAS,EAAM,KAAM,CAAW,CAC3C,CAKA,MAAM,gBAAyD,CAC7D,IAAM,EAAW,MAAM,IAAI,CAAC,OAAO,CAA2B,8BAA+B,CAC3F,OAAQ,OACR,KAAM,KAAK,SAAS,CAAC,CACnB,IAAI,EACJ,aAAa,EACb,iBAAiB,EACjB,MAAO,IACP,QAAS,CACX,EACF,UAEI,AAAJ,EAAa,OAAO,EAAI,EAAS,IAAI,EAAE,UAC9B,CADyC,AACvC,SAAS,EAAM,KAAM,EAAS,IAAI,CAAC,SAAS,AAAgB,EAGhE,CAAE,SAAS,EAAO,MAAO,0BAA2B,CAC7D,CAKA,MAAM,gBAAgB,CAAe,CAA2C,CAC9E,IAAM,EAAW,MAAM,IAAI,CAAC,OAAO,CAAiC,gEAAiE,CACnI,OAAQ,OACR,KAAM,KAAK,SAAS,CAAC,SAAE,CAAQ,EACjC,UAEA,AAAI,EAAS,OAAO,EAAI,EAAS,IAAI,EAAE,gBAC9B,CAAE,AAD6C,SACpC,EAAM,KAAM,EAAS,IAAI,CAAC,eAAe,AAAiB,EAGvE,CAAE,SAAS,EAAM,KAAM,EAAE,AAAC,CACnC,CAKA,MAAM,UAAU,CAAgB,CAA6B,CAC3D,IAAM,EAAW,MAAM,IAAI,CAAC,OAAO,CAAC,4DAA6D,CAC/F,OAAQ,OACR,KAAM,KAAK,SAAS,CAAC,UACnB,EACA,YAAa,YACf,EACF,GAGA,MAAO,CAAE,QAAS,EAAS,OAAO,CAAE,KAAM,EAAS,OAAQ,AAAD,CAC5D,CAKA,MAAM,iBAAiB,CAAmB,CAAsC,CAC9E,IAAM,EAAW,MAAM,IAAI,CAAC,OAAO,CAAC,qBAAsB,CACxD,OAAQ,OACR,KAAM,KAAK,SAAS,CAAC,CACnB,OAAQ,CAAC,CACP,IAAK,EAAO,EAAE,CACd,KAAM,EACN,KAAM,CACR,EAAE,AACJ,EACF,GAGA,MAAO,CAAE,QAAS,EAAS,OAAO,CAAE,KAAM,EAAS,IAAI,EAAI,EAAE,AAAC,CAChE,CAKA,MAAM,iBAAiB,CAAmB,CAA6B,CACrE,IAAM,EAAa,OAAO,OAAO,CAAC,EAAO,UAAU,EAAE,GAAG,CAAC,CAAC,EAAG,EAAM,GAAK,CAAC,CACvE,IAAK,EAAO,EAAE,CACd,KAAM,EACN,KAAM,EACN,MAAO,EACT,CAAC,EAEK,EAAW,MAAM,IAAI,CAAC,OAAO,CAAC,qBAAsB,CACxD,OAAQ,OACR,KAAM,KAAK,SAAS,CAAC,CACnB,OAAQ,CACV,EACF,GAGA,MAAO,CAAE,QAAS,EAAS,OAAO,CAAE,KAAM,EAAS,IAAI,EAAI,EAAE,AAAC,CAChE,CAKA,MAAM,WAAW,CAA6B,CAA6B,CACzE,IAAM,EAAW,MAAM,IAAI,CAAC,OAAO,CAAC,mBAAoB,CACtD,OAAQ,OACR,KAAM,KAAK,SAAS,CAAC,CACnB,OAAQ,CACN,IAAK,EAAW,SAAS,CACzB,KAAM,EACN,KAAM,EACN,MAAO,EAAW,MAAM,AAC1B,CACF,EACF,GAGA,MAAO,CAAE,QAAS,EAAS,OAAO,CAAE,KAAM,EAAS,IAAI,EAAI,CAAC,CAAE,CAChE,CAKA,MAAM,mBAAmB,CAAgB,CAAiD,CACxF,IAAM,EAAkB,MAAM,IAAI,CAAC,gBAAgB,UACnD,AAAI,AAAC,EAAgB,OAAO,EAAK,EAAD,AAAiB,IAAI,CAK9C,CALgD,AAK9C,QAAS,GAAM,KADT,AACe,EADC,IAAI,CAAC,IAAI,CAAC,GAAK,EAAE,IAAI,GAAK,IACjB,IAAK,EAJpC,CAAE,SAAS,EAAO,MAAO,uBAAwB,CAK5D,CAEA,MAAM,iBAAiB,CAAiB,CAAiD,CACvF,IAAM,EAAkB,MAAM,IAAI,CAAC,gBAAgB,UACnD,AAAI,AAAC,EAAgB,OAAO,EAAK,EAAD,AAAiB,IAAI,CAK9C,CALgD,AAK9C,SAAS,EAAM,KADT,AACe,EADC,IAAI,CAAC,IAAI,CAAC,GAAK,EAAE,EAAE,GAAK,IACf,IAAK,EAJpC,CAAE,SAAS,EAAO,MAAO,uBAAwB,CAK5D,CAKA,MAAM,cAAc,CAA+B,CAA6B,CAC9E,IAAM,EAAiB,MAAM,IAAI,CAAC,gBAAgB,CAAC,EAAa,SAAS,EACzE,GAAI,CAAC,EAAe,OAAO,EAAI,CAAC,EAAe,IAAI,CACjD,CADmD,KAC5C,CAAE,QAAS,GAAO,MAAO,kBAAmB,EAGrD,IAAM,EAAS,EAAe,IAAI,CAIlC,OAHA,AAGO,EAHA,UAAU,CAAG,CAAE,GAAG,EAAO,UAAU,CAAE,GAAG,EAAa,UAAU,AAAC,EAEtD,MAAM,IAAI,CAAC,gBAAgB,CAAC,EAE/C,CACF,0LE7WA,IAAA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,CAAA,CAAA,OAAA,IAAA,EAAA,EAAA,CAAA,CAAA,8BCfA,IAAA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,CAAA,CAAA,OAAA,IAAA,EAAA,EAAA,CAAA,CAAA,OAEO,eAAe,IACpB,GAAI,CAEF,IAAM,EAAW,MAAM,EAAA,QAAQ,CAAC,cAAc,GAE9C,GAAI,EAAS,OAAO,EAAI,EAAS,IAAI,CACnC,CADqC,MAC9B,EAAA,YAAY,CAAC,IAAI,CAAC,CACvB,SAAS,EACT,KAAM,EAAS,IAAI,AACrB,GAEA,OAAO,EAAA,YAAY,CAAC,IAAI,CAAC,CACvB,SAAS,EACT,MAAO,EAAS,KAAK,EAAI,sCAC3B,EAAG,CAAE,OAAQ,GAAI,EAErB,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,mBAAoB,GAC3B,EAAA,YAAY,CAAC,IAAI,CAAC,CACvB,SAAS,EACT,MAAO,uBACT,EAAG,CAAE,OAAQ,GAAI,EACnB,CACF,CDVA,IAAA,EAAA,EAAA,CAAA,CAAA,OAIA,IAAM,EAAc,IAAI,EAAA,mBAAmB,CAAC,CACxC,WAAY,CACR,KAAM,EAAA,SAAS,CAAC,SAAS,CACzB,KAAM,mBACN,SAAU,aACV,SAAU,QACV,WAAY,EAChB,EACA,QAAS,CAAA,OACT,IADiD,eACc,CAA3C,EACpB,iBAAkB,uCAClB,iBAZqB,GAarB,SAAA,CACJ,GAIM,CAAE,kBAAgB,CAAE,sBAAoB,aAAE,CAAW,CAAE,CAAG,EAChE,SAAS,IACL,MAAO,CAAA,EAAA,EAAA,UAAA,AAAW,EAAC,kBACf,uBACA,CACJ,EACJ,CAEO,eAAe,EAAQ,CAAG,CAAE,CAAG,CAAE,CAAG,EACvC,IAAI,EACJ,IAAI,EAAU,mBAKV,EAAU,EAAQ,OAAO,CAAC,WAAY,KAAO,IAMjD,IAAM,EAAgB,MAAM,EAAY,OAAO,CAAC,EAAK,EAAK,SACtD,EACA,mBAHE,CAAA,CAIN,GACA,GAAI,CAAC,EAID,OAHA,EAAI,IADY,MACF,CAAG,IACjB,EAAI,GAAG,CAAC,eACS,MAAjB,CAAwB,CAApB,IAAyB,KAAhB,EAAoB,EAAI,SAAS,CAAC,IAAI,CAAC,EAAK,QAAQ,OAAO,IACjE,KAEX,GAAM,SAAE,CAAO,QAAE,CAAM,CAAE,YAAU,aAAE,CAAW,mBAAE,CAAiB,qBAAE,CAAmB,sBAAE,CAAoB,yBAAE,CAAuB,kBAAE,CAAgB,CAAE,CAAG,EACxJ,EAAoB,CAAA,EAAA,EAAA,gBAAA,AAAgB,EAAC,GACvC,GAAQ,EAAQ,EAAkB,aAAa,CAAC,EAAkB,EAAI,EAAkB,MAAM,CAAC,EAAA,AAAiB,EACpH,GAAI,GAAS,CAAC,EAAa,CACvB,IAAM,GAAgB,CAAQ,EAAkB,MAAM,CAAC,EAAiB,CAClE,EAAgB,EAAkB,aAAa,CAAC,EAAkB,CACxE,GAAI,GACI,CAA2B,MAAb,KADH,GACW,EAAc,CAAC,EACrC,MAAM,IAAI,EAAA,CAD0C,cAIhE,AAHqC,CAIrC,IAAI,EAAW,MACX,GAAU,EAAY,IAAb,CAAkB,EAAK,EAAD,EAG/B,EAAW,AAAa,OAHqB,KAC7C,EAAW,CAAA,EAEwB,IAAM,CAAA,EAE7C,IAAM,GACgB,IAAtB,EAAY,EAAkB,GAAb,EAEjB,CAAC,EAKK,EAAe,GAAS,CAAC,EACzB,EAAS,EAAI,MAAM,EAAI,MACvB,EAAS,CAAA,EAAA,EAAA,SAAA,AAAS,IAClB,EAAa,EAAO,WAVyE,OAUvD,GACtC,EAAU,QACZ,oBACA,EACA,WAAY,CACR,aAAc,CACV,gBAAiB,EAAQ,EAAW,YAAY,CAAC,eAAe,CAChE,gBAAgB,CAAQ,EAAW,YAAY,CAAC,cAAc,AAClE,0BACA,EACA,iBAAkB,CAAA,EAAA,EAAA,cAAA,AAAc,EAAC,EAAK,oBACtC,kBAAmB,AAAwD,OAAvD,EAA2B,EAAW,YAAA,AAAY,EAAY,KAAK,EAAI,EAAyB,SAAS,cAC7H,EACA,UAAW,EAAI,SAAS,CACxB,QAAS,AAAC,IACN,EAAI,EAAE,CAAC,QAAS,EACpB,EACA,sBAAkB,EAClB,8BAA+B,CAAC,EAAO,EAAU,IAAe,EAAY,cAAc,CAAC,EAAK,EAAO,EAAc,EACzH,EACA,cAAe,SACX,CACJ,CACJ,EACM,EAAc,IAAI,EAAA,eAAe,CAAC,GAClC,EAAc,IAAI,EAAA,gBAAgB,CAAC,GACnC,EAAU,EAAA,kBAAkB,CAAC,mBAAmB,CAAC,EAAa,CAAA,EAAA,EAAA,sBAAA,AAAsB,EAAC,IAC3F,GAAI,CACA,IAAM,EAAoB,MAAO,GACtB,EAAY,MAAM,CAAC,EAAS,GAAS,OAAO,CAAC,KAChD,GAAI,CAAC,EAAM,OACX,EAAK,aAAa,CAAC,CACf,mBAAoB,EAAI,UAAU,CAClC,WAAY,EAChB,GACA,IAAM,EAAqB,EAAO,qBAAqB,GAEvD,GAAI,CAAC,EACD,OAEJ,GAAI,EAAmB,GAAG,CAAC,EAHF,kBAGwB,EAAA,cAAc,CAAC,aAAa,CAAE,YAC3E,QAAQ,IAAI,CAAC,CAAC,2BAA2B,EAAE,EAAmB,GAAG,CAAC,kBAAkB,qEAAqE,CAAC,EAG9J,IAAM,EAAQ,EAAmB,GAAG,CAAC,cACrC,GAAI,EAAO,CACP,IAAM,EAAO,CAAA,EAAG,EAAO,CAAC,EAAE,EAAA,CAAO,CACjC,EAAK,aAAa,CAAC,CACf,aAAc,EACd,aAAc,EACd,iBAAkB,CACtB,GACA,EAAK,UAAU,CAAC,EACpB,MACI,CADG,CACE,UAAU,CAAC,CAAA,EAAG,EAAO,CAAC,EAAE,EAAI,GAAG,CAAA,CAAE,CAE9C,GAEE,EAAiB,MAAO,QACtB,EA0FI,EAzFR,IAAM,EAAoB,MAAO,oBAAE,CAAkB,CAAE,IACnD,GAAI,CACA,GAAI,CAAC,CAAA,EAAA,EAAA,cAAA,AAAc,EAAC,EAAK,gBAAkB,GAAwB,GAA2B,CAAC,EAK3F,OAJA,EAAI,SAD2G,CACjG,CAAG,IAEjB,EAAI,SAAS,CAAC,iBAAkB,eAChC,EAAI,GAAG,CAAC,gCACD,KAEX,IAAM,EAAW,MAAM,EAAkB,GACzC,EAAI,YAAY,CAAG,EAAQ,UAAU,CAAC,YAAY,CAClD,IAAI,EAAmB,EAAQ,UAAU,CAAC,gBAAgB,CAGtD,GACI,EAAI,SAAS,EAAE,CACf,CAFc,CAEV,SAAS,CAAC,GACd,OAAmB,GAG3B,IAAM,EAAY,EAAQ,UAAU,CAAC,aAAa,CAGlD,IAAI,EA6BA,OADA,MAAM,CAAA,EAAA,EAAA,YAAY,AAAZ,EAAa,EAAa,EAAa,EAAU,EAAQ,UAAU,CAAC,gBAAgB,EACnF,IA7BA,EACP,IAAM,EAAO,MAAM,EAAS,IAAI,GAE1B,EAAU,CAAA,EAAA,EAAA,yBAAA,AAAyB,EAAC,EAAS,OAAO,EACtD,IACA,CAAO,CAAC,EAAA,GADG,mBACmB,CAAC,CAAG,CAAA,EAElC,CAAC,CAAO,CAAC,eAAe,EAAI,EAAK,IAAI,EAAE,CACvC,CAAO,CAAC,eAAe,CAAG,EAAK,IAAA,AAAI,EAEvC,IAAM,EAAa,KAAkD,IAA3C,EAAQ,UAAU,CAAC,mBAAmB,IAAoB,EAAQ,UAAU,CAAC,mBAAmB,EAAI,EAAA,cAAc,AAAd,GAAiB,AAAQ,EAAQ,UAAU,CAAC,mBAAmB,CACvL,EAAS,KAA8C,IAAvC,EAAQ,UAAU,CAAC,eAAe,EAAoB,EAAQ,UAAU,CAAC,eAAe,EAAI,EAAA,cAAc,MAAG,EAAY,EAAQ,UAAU,CAAC,eAAe,CAcjL,MAZmB,CAYZ,AAXH,MAAO,CACH,KAAM,EAAA,eAAe,CAAC,SAAS,CAC/B,OAAQ,EAAS,MAAM,CACvB,KAAM,OAAO,IAAI,CAAC,MAAM,EAAK,WAAW,YACxC,CACJ,EACA,aAAc,YACV,SACA,CACJ,CACJ,CAEJ,CAKJ,CAAE,KALS,CAKF,EAAK,CAcV,MAX0B,MAAtB,EAA6B,KAAK,EAAI,EAAmB,OAAA,AAAO,EAAE,CAClE,MAAM,EAAY,cAAc,CAAC,EAAK,EAAK,CACvC,WAAY,aACZ,UAAW,EACX,UAAW,QACX,iBAAkB,CAAA,EAAA,EAAA,mBAAA,AAAmB,EAAC,cAClC,uBACA,CACJ,EACJ,EAAG,GAED,CACV,CACJ,EACM,EAAa,MAAM,EAAY,cAAc,CAAC,KAChD,aACA,WACA,EACA,UAAW,EAAA,SAAS,CAAC,SAAS,CAC9B,YAAY,oBACZ,EACA,mBAAmB,uBACnB,0BACA,oBACA,EACA,UAAW,EAAI,SAAS,AAC5B,GAEA,GAAI,CAAC,EACD,KADQ,EACD,KAEX,GAAI,CAAe,MAAd,CAAqB,EAAmD,AAA1C,GAAJ,IAAK,EAAoB,EAAW,KAAA,AAAK,EAAY,KAAK,EAAI,EAAkB,IAAI,IAAM,EAAA,eAAe,CAAC,SAAS,CAE9I,CAFgJ,KAE1I,OAAO,cAAc,CAAC,AAAI,MAAM,CAAC,kDAAkD,EAAgB,MAAd,CAAqB,EAAS,AAA2C,GAA/C,IAAK,EAAqB,EAAW,KAAA,AAAK,EAAY,KAAK,EAAI,EAAmB,IAAI,CAAA,CAAE,EAAG,oBAAqB,CACjO,MAAO,OACP,YAAY,EACZ,aAAc,EAClB,EAEA,CAAC,CAAA,EAAA,EAAA,cAAA,AAAc,EAAC,EAAK,gBAAgB,AACrC,EAAI,SAAS,CAAC,iBAAkB,EAAuB,cAAgB,EAAW,MAAM,CAAG,OAAS,EAAW,OAAO,CAAG,QAAU,OAGnI,GACA,EAAI,QADS,CACA,CAAC,gBAAiB,2DAEnC,IAAM,EAAU,CAAA,EAAA,EAAA,2BAAA,AAA2B,EAAC,EAAW,KAAK,CAAC,OAAO,EAapE,MAZI,AAAE,CAAD,AAAC,EAAA,EAAA,cAAA,AAAc,EAAC,EAAK,gBAAkB,GACxC,EAD6C,AACrC,GADwC,GAClC,CAAC,EAAA,sBAAsB,GAIrC,EAAW,YAAY,EAAK,EAAI,AAAL,SAAc,CAAC,kBAAqB,EAAD,AAAS,GAAG,CAAC,kBAAkB,AAC7F,EAAQ,GAAG,CAAC,gBAAiB,CAAA,EAAA,EAAA,qBAAA,AAAqB,EAAC,EAAW,YAAY,GAE9E,MAAM,CAAA,EAAA,EAAA,YAAY,AAAZ,EAAa,EAAa,EAAa,IAAI,SAAS,EAAW,KAAK,CAAC,IAAI,CAAE,SAC7E,EACA,OAAQ,EAAW,KAAK,CAAC,MAAM,EAAI,GACvC,IACO,IACX,EAGI,EACA,MAAM,EAAe,EADT,CAGZ,MAAM,EAAO,qBAAqB,CAAC,EAAI,OAAO,CAAE,IAAI,EAAO,KAAK,CAAC,EAAA,cAAc,CAAC,aAAa,CAAE,CACvF,SAAU,CAAA,EAAG,EAAO,CAAC,EAAE,EAAI,GAAG,CAAA,CAAE,CAChC,KAAM,EAAA,QAAQ,CAAC,MAAM,CACrB,WAAY,CACR,cAAe,EACf,cAAe,EAAI,GAAG,AAC1B,CACJ,EAAG,GAEf,CAAE,MAAO,EAAK,CAeV,GAbI,AAAC,GAAgB,WAAF,CAAC,CAAgB,EAAA,eAAe,EAC/C,CADkD,KAC5C,EAAY,cAAc,CAAC,EAAK,EAAK,CACvC,WAAY,aACZ,UAAW,EACX,UAAW,QACX,iBAAkB,CAAA,EAAA,EAAA,mBAAA,AAAmB,EAAC,cAClC,uBACA,CACJ,EACJ,GAIA,EAAO,MAAM,EAKjB,OAHA,MAAM,CAAA,EAAA,EAAA,YAAA,AAAY,EAAC,EAAa,EAAa,IAAI,SAAS,KAAM,CAC5D,OAAQ,GACZ,IACO,IACX,CACJ,EAEA,qCAAqC","ignoreList":[3]}