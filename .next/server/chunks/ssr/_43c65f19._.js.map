{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/client/components/router-reducer/reducers/get-segment-value.ts","turbopack:///[project]/node_modules/next/src/shared/lib/segment.ts","turbopack:///[project]/node_modules/next/src/client/components/redirect-status-code.ts","turbopack:///[project]/node_modules/next/src/client/components/redirect-error.ts","turbopack:///[project]/node_modules/next/src/client/components/redirect.ts","turbopack:///[project]/node_modules/next/src/client/components/http-access-fallback/http-access-fallback.ts","turbopack:///[project]/node_modules/next/src/client/components/not-found.ts","turbopack:///[project]/node_modules/next/src/client/components/forbidden.ts","turbopack:///[project]/node_modules/next/src/client/components/unauthorized.ts","turbopack:///[project]/node_modules/next/src/server/dynamic-rendering-utils.ts","turbopack:///[project]/node_modules/next/src/server/lib/router-utils/is-postpone.ts","turbopack:///[project]/node_modules/next/src/shared/lib/lazy-dynamic/bailout-to-csr.ts","turbopack:///[project]/node_modules/next/src/client/components/is-next-router-error.ts","turbopack:///[project]/node_modules/next/src/client/components/hooks-server-context.ts","turbopack:///[project]/node_modules/next/src/client/components/static-generation-bailout.ts","turbopack:///[project]/node_modules/next/src/lib/framework/boundary-constants.tsx","turbopack:///[project]/node_modules/next/src/lib/scheduler.ts","turbopack:///[project]/node_modules/next/src/shared/lib/invariant-error.ts","turbopack:///[project]/node_modules/next/src/server/app-render/dynamic-rendering.ts","turbopack:///[project]/node_modules/next/src/client/components/unstable-rethrow.server.ts","turbopack:///[project]/node_modules/next/src/client/components/unstable-rethrow.ts","turbopack:///[project]/node_modules/next/src/client/components/navigation.react-server.ts","turbopack:///[project]/node_modules/next/src/client/components/unrecognized-action-error.ts","turbopack:///[project]/node_modules/next/src/client/components/bailout-to-client-rendering.ts","turbopack:///[project]/node_modules/next/src/client/components/navigation.ts","turbopack:///[project]/node_modules/next/navigation.js","turbopack:///[project]/node_modules/zustand/esm/react.mjs","turbopack:///[project]/node_modules/zustand/esm/vanilla.mjs","turbopack:///[project]/node_modules/zustand/esm/middleware.mjs","turbopack:///[project]/src/lib/mijia/auth.ts","turbopack:///[project]/src/lib/mijia/api.ts","turbopack:///[project]/src/lib/mijia/device.ts","turbopack:///[project]/src/lib/api.ts","turbopack:///[project]/src/lib/store.ts"],"sourcesContent":["import type { Segment } from '../../../../server/app-render/types'\n\nexport function getSegmentValue(segment: Segment) {\n  return Array.isArray(segment) ? segment[1] : segment\n}\n","import type { Segment } from '../../server/app-render/types'\n\nexport function isGroupSegment(segment: string) {\n  // Use array[0] for performant purpose\n  return segment[0] === '(' && segment.endsWith(')')\n}\n\nexport function isParallelRouteSegment(segment: string) {\n  return segment.startsWith('@') && segment !== '@children'\n}\n\nexport function addSearchParamsIfPageSegment(\n  segment: Segment,\n  searchParams: Record<string, string | string[] | undefined>\n) {\n  const isPageSegment = segment.includes(PAGE_SEGMENT_KEY)\n\n  if (isPageSegment) {\n    const stringifiedQuery = JSON.stringify(searchParams)\n    return stringifiedQuery !== '{}'\n      ? PAGE_SEGMENT_KEY + '?' + stringifiedQuery\n      : PAGE_SEGMENT_KEY\n  }\n\n  return segment\n}\n\nexport const PAGE_SEGMENT_KEY = '__PAGE__'\nexport const DEFAULT_SEGMENT_KEY = '__DEFAULT__'\n","export enum RedirectStatusCode {\n  SeeOther = 303,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n}\n","import { RedirectStatusCode } from './redirect-status-code'\n\nexport const REDIRECT_ERROR_CODE = 'NEXT_REDIRECT'\n\nexport enum RedirectType {\n  push = 'push',\n  replace = 'replace',\n}\n\nexport type RedirectError = Error & {\n  digest: `${typeof REDIRECT_ERROR_CODE};${RedirectType};${string};${RedirectStatusCode};`\n}\n\n/**\n * Checks an error to determine if it's an error generated by the\n * `redirect(url)` helper.\n *\n * @param error the error that may reference a redirect error\n * @returns true if the error is a redirect error\n */\nexport function isRedirectError(error: unknown): error is RedirectError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n\n  const digest = error.digest.split(';')\n  const [errorCode, type] = digest\n  const destination = digest.slice(2, -2).join(';')\n  const status = digest.at(-2)\n\n  const statusCode = Number(status)\n\n  return (\n    errorCode === REDIRECT_ERROR_CODE &&\n    (type === 'replace' || type === 'push') &&\n    typeof destination === 'string' &&\n    !isNaN(statusCode) &&\n    statusCode in RedirectStatusCode\n  )\n}\n","import { RedirectStatusCode } from './redirect-status-code'\nimport {\n  RedirectType,\n  type RedirectError,\n  isRedirectError,\n  REDIRECT_ERROR_CODE,\n} from './redirect-error'\n\nconst actionAsyncStorage =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/action-async-storage.external') as typeof import('../../server/app-render/action-async-storage.external')\n      ).actionAsyncStorage\n    : undefined\n\nexport function getRedirectError(\n  url: string,\n  type: RedirectType,\n  statusCode: RedirectStatusCode = RedirectStatusCode.TemporaryRedirect\n): RedirectError {\n  const error = new Error(REDIRECT_ERROR_CODE) as RedirectError\n  error.digest = `${REDIRECT_ERROR_CODE};${type};${url};${statusCode};`\n  return error\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 307/303 to the caller.\n * - In a Server Action, type defaults to 'push' and 'replace' elsewhere.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function redirect(\n  /** The URL to redirect to */\n  url: string,\n  type?: RedirectType\n): never {\n  type ??= actionAsyncStorage?.getStore()?.isAction\n    ? RedirectType.push\n    : RedirectType.replace\n\n  throw getRedirectError(url, type, RedirectStatusCode.TemporaryRedirect)\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 308/303 to the caller.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function permanentRedirect(\n  /** The URL to redirect to */\n  url: string,\n  type: RedirectType = RedirectType.replace\n): never {\n  throw getRedirectError(url, type, RedirectStatusCode.PermanentRedirect)\n}\n\n/**\n * Returns the encoded URL from the error if it's a RedirectError, null\n * otherwise. Note that this does not validate the URL returned.\n *\n * @param error the error that may be a redirect error\n * @return the url if the error was a redirect error\n */\nexport function getURLFromRedirectError(error: RedirectError): string\nexport function getURLFromRedirectError(error: unknown): string | null {\n  if (!isRedirectError(error)) return null\n\n  // Slices off the beginning of the digest that contains the code and the\n  // separating ';'.\n  return error.digest.split(';').slice(2, -2).join(';')\n}\n\nexport function getRedirectTypeFromError(error: RedirectError): RedirectType {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return error.digest.split(';', 2)[1] as RedirectType\n}\n\nexport function getRedirectStatusCodeFromError(error: RedirectError): number {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return Number(error.digest.split(';').at(-2))\n}\n","export const HTTPAccessErrorStatus = {\n  NOT_FOUND: 404,\n  FORBIDDEN: 403,\n  UNAUTHORIZED: 401,\n}\n\nconst ALLOWED_CODES = new Set(Object.values(HTTPAccessErrorStatus))\n\nexport const HTTP_ERROR_FALLBACK_ERROR_CODE = 'NEXT_HTTP_ERROR_FALLBACK'\n\nexport type HTTPAccessFallbackError = Error & {\n  digest: `${typeof HTTP_ERROR_FALLBACK_ERROR_CODE};${string}`\n}\n\n/**\n * Checks an error to determine if it's an error generated by\n * the HTTP navigation APIs `notFound()`, `forbidden()` or `unauthorized()`.\n *\n * @param error the error that may reference a HTTP access error\n * @returns true if the error is a HTTP access error\n */\nexport function isHTTPAccessFallbackError(\n  error: unknown\n): error is HTTPAccessFallbackError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n  const [prefix, httpStatus] = error.digest.split(';')\n\n  return (\n    prefix === HTTP_ERROR_FALLBACK_ERROR_CODE &&\n    ALLOWED_CODES.has(Number(httpStatus))\n  )\n}\n\nexport function getAccessFallbackHTTPStatus(\n  error: HTTPAccessFallbackError\n): number {\n  const httpStatus = error.digest.split(';')[1]\n  return Number(httpStatus)\n}\n\nexport function getAccessFallbackErrorTypeByStatus(\n  status: number\n): 'not-found' | 'forbidden' | 'unauthorized' | undefined {\n  switch (status) {\n    case 401:\n      return 'unauthorized'\n    case 403:\n      return 'forbidden'\n    case 404:\n      return 'not-found'\n    default:\n      return\n  }\n}\n","import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n/**\n * This function allows you to render the [not-found.js file](https://nextjs.org/docs/app/api-reference/file-conventions/not-found)\n * within a route segment as well as inject a tag.\n *\n * `notFound()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a `<meta name=\"robots\" content=\"noindex\" />` meta tag and set the status code to 404.\n * - In a Route Handler or Server Action, it will serve a 404 to the caller.\n *\n * Read more: [Next.js Docs: `notFound`](https://nextjs.org/docs/app/api-reference/functions/not-found)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};404`\n\nexport function notFound(): never {\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n\n  throw error\n}\n","import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n// TODO: Add `forbidden` docs\n/**\n * @experimental\n * This function allows you to render the [forbidden.js file](https://nextjs.org/docs/app/api-reference/file-conventions/forbidden)\n * within a route segment as well as inject a tag.\n *\n * `forbidden()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * Read more: [Next.js Docs: `forbidden`](https://nextjs.org/docs/app/api-reference/functions/forbidden)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};403`\n\nexport function forbidden(): never {\n  if (!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS) {\n    throw new Error(\n      `\\`forbidden()\\` is experimental and only allowed to be enabled when \\`experimental.authInterrupts\\` is enabled.`\n    )\n  }\n\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n  throw error\n}\n","import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n// TODO: Add `unauthorized` docs\n/**\n * @experimental\n * This function allows you to render the [unauthorized.js file](https://nextjs.org/docs/app/api-reference/file-conventions/unauthorized)\n * within a route segment as well as inject a tag.\n *\n * `unauthorized()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n *\n * Read more: [Next.js Docs: `unauthorized`](https://nextjs.org/docs/app/api-reference/functions/unauthorized)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};401`\n\nexport function unauthorized(): never {\n  if (!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS) {\n    throw new Error(\n      `\\`unauthorized()\\` is experimental and only allowed to be used when \\`experimental.authInterrupts\\` is enabled.`\n    )\n  }\n\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n  throw error\n}\n","export function isHangingPromiseRejectionError(\n  err: unknown\n): err is HangingPromiseRejectionError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === HANGING_PROMISE_REJECTION\n}\n\nconst HANGING_PROMISE_REJECTION = 'HANGING_PROMISE_REJECTION'\n\nclass HangingPromiseRejectionError extends Error {\n  public readonly digest = HANGING_PROMISE_REJECTION\n\n  constructor(\n    public readonly route: string,\n    public readonly expression: string\n  ) {\n    super(\n      `During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context. This occurred at route \"${route}\".`\n    )\n  }\n}\n\ntype AbortListeners = Array<(err: unknown) => void>\nconst abortListenersBySignal = new WeakMap<AbortSignal, AbortListeners>()\n\n/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for cacheComponents where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */\nexport function makeHangingPromise<T>(\n  signal: AbortSignal,\n  route: string,\n  expression: string\n): Promise<T> {\n  if (signal.aborted) {\n    return Promise.reject(new HangingPromiseRejectionError(route, expression))\n  } else {\n    const hangingPromise = new Promise<T>((_, reject) => {\n      const boundRejection = reject.bind(\n        null,\n        new HangingPromiseRejectionError(route, expression)\n      )\n      let currentListeners = abortListenersBySignal.get(signal)\n      if (currentListeners) {\n        currentListeners.push(boundRejection)\n      } else {\n        const listeners = [boundRejection]\n        abortListenersBySignal.set(signal, listeners)\n        signal.addEventListener(\n          'abort',\n          () => {\n            for (let i = 0; i < listeners.length; i++) {\n              listeners[i]()\n            }\n          },\n          { once: true }\n        )\n      }\n    })\n    // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n    // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n    // your own promise out of it you'll need to ensure you handle the error when it rejects.\n    hangingPromise.catch(ignoreReject)\n    return hangingPromise\n  }\n}\n\nfunction ignoreReject() {}\n\nexport function makeDevtoolsIOAwarePromise<T>(underlying: T): Promise<T> {\n  // in React DevTools if we resolve in a setTimeout we will observe\n  // the promise resolution as something that can suspend a boundary or root.\n  return new Promise<T>((resolve) => {\n    // Must use setTimeout to be considered IO React DevTools. setImmediate will not work.\n    setTimeout(() => {\n      resolve(underlying)\n    }, 0)\n  })\n}\n","const REACT_POSTPONE_TYPE: symbol = Symbol.for('react.postpone')\n\nexport function isPostpone(error: any): boolean {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    error.$$typeof === REACT_POSTPONE_TYPE\n  )\n}\n","// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst BAILOUT_TO_CSR = 'BAILOUT_TO_CLIENT_SIDE_RENDERING'\n\n/** An error that should be thrown when we want to bail out to client-side rendering. */\nexport class BailoutToCSRError extends Error {\n  public readonly digest = BAILOUT_TO_CSR\n\n  constructor(public readonly reason: string) {\n    super(`Bail out to client-side rendering: ${reason}`)\n  }\n}\n\n/** Checks if a passed argument is an error that is thrown if we want to bail out to client-side rendering. */\nexport function isBailoutToCSRError(err: unknown): err is BailoutToCSRError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === BAILOUT_TO_CSR\n}\n","import {\n  isHTTPAccessFallbackError,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\nimport { isRedirectError, type RedirectError } from './redirect-error'\n\n/**\n * Returns true if the error is a navigation signal error. These errors are\n * thrown by user code to perform navigation operations and interrupt the React\n * render.\n */\nexport function isNextRouterError(\n  error: unknown\n): error is RedirectError | HTTPAccessFallbackError {\n  return isRedirectError(error) || isHTTPAccessFallbackError(error)\n}\n","const DYNAMIC_ERROR_CODE = 'DYNAMIC_SERVER_USAGE'\n\nexport class DynamicServerError extends Error {\n  digest: typeof DYNAMIC_ERROR_CODE = DYNAMIC_ERROR_CODE\n\n  constructor(public readonly description: string) {\n    super(`Dynamic server usage: ${description}`)\n  }\n}\n\nexport function isDynamicServerError(err: unknown): err is DynamicServerError {\n  if (\n    typeof err !== 'object' ||\n    err === null ||\n    !('digest' in err) ||\n    typeof err.digest !== 'string'\n  ) {\n    return false\n  }\n\n  return err.digest === DYNAMIC_ERROR_CODE\n}\n","const NEXT_STATIC_GEN_BAILOUT = 'NEXT_STATIC_GEN_BAILOUT'\n\nexport class StaticGenBailoutError extends Error {\n  public readonly code = NEXT_STATIC_GEN_BAILOUT\n}\n\nexport function isStaticGenBailoutError(\n  error: unknown\n): error is StaticGenBailoutError {\n  if (typeof error !== 'object' || error === null || !('code' in error)) {\n    return false\n  }\n\n  return error.code === NEXT_STATIC_GEN_BAILOUT\n}\n","export const METADATA_BOUNDARY_NAME = '__next_metadata_boundary__'\nexport const VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__'\nexport const OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__'\nexport const ROOT_LAYOUT_BOUNDARY_NAME = '__next_root_layout_boundary__'\n","export type ScheduledFn<T = void> = () => T | PromiseLike<T>\nexport type SchedulerFn<T = void> = (cb: ScheduledFn<T>) => void\n\n/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */\nexport const scheduleOnNextTick = (cb: ScheduledFn<void>) => {\n  // We use Promise.resolve().then() here so that the operation is scheduled at\n  // the end of the promise job queue, we then add it to the next process tick\n  // to ensure it's evaluated afterwards.\n  //\n  // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n  //\n  Promise.resolve().then(() => {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      setTimeout(cb, 0)\n    } else {\n      process.nextTick(cb)\n    }\n  })\n}\n\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */\nexport const scheduleImmediate = (cb: ScheduledFn<void>): void => {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    setTimeout(cb, 0)\n  } else {\n    setImmediate(cb)\n  }\n}\n\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */\nexport function atLeastOneTask() {\n  return new Promise<void>((resolve) => scheduleImmediate(resolve))\n}\n\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */\nexport function waitAtLeastOneReactRenderTask(): Promise<void> {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    return new Promise((r) => setTimeout(r, 0))\n  } else {\n    return new Promise((r) => setImmediate(r))\n  }\n}\n","export class InvariantError extends Error {\n  constructor(message: string, options?: ErrorOptions) {\n    super(\n      `Invariant: ${message.endsWith('.') ? message : message + '.'} This is a bug in Next.js.`,\n      options\n    )\n    this.name = 'InvariantError'\n  }\n}\n","/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */\n\nimport type { WorkStore } from '../app-render/work-async-storage.external'\nimport type {\n  WorkUnitStore,\n  RequestStore,\n  PrerenderStoreLegacy,\n  PrerenderStoreModern,\n  PrerenderStoreModernRuntime,\n} from '../app-render/work-unit-async-storage.external'\n\n// Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react'\n\nimport { DynamicServerError } from '../../client/components/hooks-server-context'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport {\n  getRuntimeStagePromise,\n  workUnitAsyncStorage,\n} from './work-unit-async-storage.external'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n  OUTLET_BOUNDARY_NAME,\n  ROOT_LAYOUT_BOUNDARY_NAME,\n} from '../../lib/framework/boundary-constants'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\nimport { BailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\nconst hasPostpone = typeof React.unstable_postpone === 'function'\n\nexport type DynamicAccess = {\n  /**\n   * If debugging, this will contain the stack trace of where the dynamic access\n   * occurred. This is used to provide more information to the user about why\n   * their page is being rendered dynamically.\n   */\n  stack?: string\n\n  /**\n   * The expression that was accessed dynamically.\n   */\n  expression: string\n}\n\n// Stores dynamic reasons used during an RSC render.\nexport type DynamicTrackingState = {\n  /**\n   * When true, stack information will also be tracked during dynamic access.\n   */\n  readonly isDebugDynamicAccesses: boolean | undefined\n\n  /**\n   * The dynamic accesses that occurred during the render.\n   */\n  readonly dynamicAccesses: Array<DynamicAccess>\n\n  syncDynamicErrorWithStack: null | Error\n}\n\n// Stores dynamic reasons used during an SSR render.\nexport type DynamicValidationState = {\n  hasSuspenseAboveBody: boolean\n  hasDynamicMetadata: boolean\n  hasDynamicViewport: boolean\n  hasAllowedDynamic: boolean\n  dynamicErrors: Array<Error>\n}\n\nexport function createDynamicTrackingState(\n  isDebugDynamicAccesses: boolean | undefined\n): DynamicTrackingState {\n  return {\n    isDebugDynamicAccesses,\n    dynamicAccesses: [],\n    syncDynamicErrorWithStack: null,\n  }\n}\n\nexport function createDynamicValidationState(): DynamicValidationState {\n  return {\n    hasSuspenseAboveBody: false,\n    hasDynamicMetadata: false,\n    hasDynamicViewport: false,\n    hasAllowedDynamic: false,\n    dynamicErrors: [],\n  }\n}\n\nexport function getFirstDynamicReason(\n  trackingState: DynamicTrackingState\n): undefined | string {\n  return trackingState.dynamicAccesses[0]?.expression\n}\n\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */\nexport function markCurrentScopeAsDynamic(\n  store: WorkStore,\n  workUnitStore: undefined | Exclude<WorkUnitStore, PrerenderStoreModern>,\n  expression: string\n): void {\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'cache':\n      case 'unstable-cache':\n        // Inside cache scopes, marking a scope as dynamic has no effect,\n        // because the outer cache scope creates a cache boundary. This is\n        // subtly different from reading a dynamic data source, which is\n        // forbidden inside a cache scope.\n        return\n      case 'private-cache':\n        // A private cache scope is already dynamic by definition.\n        return\n      case 'prerender-legacy':\n      case 'prerender-ppr':\n      case 'request':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n\n  // If we're forcing dynamic rendering or we're forcing static rendering, we\n  // don't need to do anything here because the entire page is already dynamic\n  // or it's static and it should not throw or postpone here.\n  if (store.forceDynamic || store.forceStatic) return\n\n  if (store.dynamicShouldError) {\n    throw new StaticGenBailoutError(\n      `Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n    )\n  }\n\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender-ppr':\n        return postponeWithTracking(\n          store.route,\n          expression,\n          workUnitStore.dynamicTracking\n        )\n      case 'prerender-legacy':\n        workUnitStore.revalidate = 0\n\n        // We aren't prerendering, but we are generating a static page. We need\n        // to bail out of static generation.\n        const err = new DynamicServerError(\n          `Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n        )\n        store.dynamicUsageDescription = expression\n        store.dynamicUsageStack = err.stack\n\n        throw err\n      case 'request':\n        if (process.env.NODE_ENV !== 'production') {\n          workUnitStore.usedDynamic = true\n        }\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n}\n\n/**\n * This function is meant to be used when prerendering without cacheComponents or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */\nexport function throwToInterruptStaticGeneration(\n  expression: string,\n  store: WorkStore,\n  prerenderStore: PrerenderStoreLegacy\n): never {\n  // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n  const err = new DynamicServerError(\n    `Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n  )\n\n  prerenderStore.revalidate = 0\n\n  store.dynamicUsageDescription = expression\n  store.dynamicUsageStack = err.stack\n\n  throw err\n}\n\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */\nexport function trackDynamicDataInDynamicRender(workUnitStore: WorkUnitStore) {\n  switch (workUnitStore.type) {\n    case 'cache':\n    case 'unstable-cache':\n      // Inside cache scopes, marking a scope as dynamic has no effect,\n      // because the outer cache scope creates a cache boundary. This is\n      // subtly different from reading a dynamic data source, which is\n      // forbidden inside a cache scope.\n      return\n    case 'private-cache':\n      // A private cache scope is already dynamic by definition.\n      return\n    case 'prerender':\n    case 'prerender-runtime':\n    case 'prerender-legacy':\n    case 'prerender-ppr':\n    case 'prerender-client':\n      break\n    case 'request':\n      if (process.env.NODE_ENV !== 'production') {\n        workUnitStore.usedDynamic = true\n      }\n      break\n    default:\n      workUnitStore satisfies never\n  }\n}\n\nfunction abortOnSynchronousDynamicDataAccess(\n  route: string,\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n\n  const error = createPrerenderInterruptedError(reason)\n\n  prerenderStore.controller.abort(error)\n\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function abortOnSynchronousPlatformIOAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n  // It is important that we set this tracking value after aborting. Aborts are executed\n  // synchronously except for the case where you abort during render itself. By setting this\n  // value late we can use it to determine if any of the aborted tasks are the task that\n  // called the sync IO expression in the first place.\n  if (dynamicTracking) {\n    if (dynamicTracking.syncDynamicErrorWithStack === null) {\n      dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n    }\n  }\n}\n\nexport function trackSynchronousPlatformIOAccessInDev(\n  requestStore: RequestStore\n): void {\n  // We don't actually have a controller to abort but we do the semantic equivalent by\n  // advancing the request store out of prerender mode\n  requestStore.prerenderPhase = false\n}\n\n/**\n * use this function when prerendering with cacheComponents. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in cacheComponents mode.\n *\n * @internal\n */\nexport function abortAndThrowOnSynchronousRequestDataAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): never {\n  const prerenderSignal = prerenderStore.controller.signal\n  if (prerenderSignal.aborted === false) {\n    // TODO it would be better to move this aborted check into the callsite so we can avoid making\n    // the error object when it isn't relevant to the aborting of the prerender however\n    // since we need the throw semantics regardless of whether we abort it is easier to land\n    // this way. See how this was handled with `abortOnSynchronousPlatformIOAccess` for a closer\n    // to ideal implementation\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n    // It is important that we set this tracking value after aborting. Aborts are executed\n    // synchronously except for the case where you abort during render itself. By setting this\n    // value late we can use it to determine if any of the aborted tasks are the task that\n    // called the sync IO expression in the first place.\n    const dynamicTracking = prerenderStore.dynamicTracking\n    if (dynamicTracking) {\n      if (dynamicTracking.syncDynamicErrorWithStack === null) {\n        dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n      }\n    }\n  }\n  throw createPrerenderInterruptedError(\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n  )\n}\n\n/**\n * Use this function when dynamically prerendering with dynamicIO.\n * We don't want to error, because it's better to return something\n * (and we've already aborted the render at the point where the sync dynamic error occured),\n * but we should log an error server-side.\n * @internal\n */\nexport function warnOnSyncDynamicError(dynamicTracking: DynamicTrackingState) {\n  if (dynamicTracking.syncDynamicErrorWithStack) {\n    // the server did something sync dynamic, likely\n    // leading to an early termination of the prerender.\n    console.error(dynamicTracking.syncDynamicErrorWithStack)\n  }\n}\n\n// For now these implementations are the same so we just reexport\nexport const trackSynchronousRequestDataAccessInDev =\n  trackSynchronousPlatformIOAccessInDev\n\n/**\n * This component will call `React.postpone` that throws the postponed error.\n */\ntype PostponeProps = {\n  reason: string\n  route: string\n}\nexport function Postpone({ reason, route }: PostponeProps): never {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  const dynamicTracking =\n    prerenderStore && prerenderStore.type === 'prerender-ppr'\n      ? prerenderStore.dynamicTracking\n      : null\n  postponeWithTracking(route, reason, dynamicTracking)\n}\n\nexport function postponeWithTracking(\n  route: string,\n  expression: string,\n  dynamicTracking: null | DynamicTrackingState\n): never {\n  assertPostpone()\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n\n  React.unstable_postpone(createPostponeReason(route, expression))\n}\n\nfunction createPostponeReason(route: string, expression: string) {\n  return (\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` +\n    `React throws this special object to indicate where. It should not be caught by ` +\n    `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`\n  )\n}\n\nexport function isDynamicPostpone(err: unknown) {\n  if (\n    typeof err === 'object' &&\n    err !== null &&\n    typeof (err as any).message === 'string'\n  ) {\n    return isDynamicPostponeReason((err as any).message)\n  }\n  return false\n}\n\nfunction isDynamicPostponeReason(reason: string) {\n  return (\n    reason.includes(\n      'needs to bail out of prerendering at this point because it used'\n    ) &&\n    reason.includes(\n      'Learn more: https://nextjs.org/docs/messages/ppr-caught-error'\n    )\n  )\n}\n\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n  throw new Error(\n    'Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'\n  )\n}\n\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED'\n\nfunction createPrerenderInterruptedError(message: string): Error {\n  const error = new Error(message)\n  ;(error as any).digest = NEXT_PRERENDER_INTERRUPTED\n  return error\n}\n\ntype DigestError = Error & {\n  digest: string\n}\n\nexport function isPrerenderInterruptedError(\n  error: unknown\n): error is DigestError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    (error as any).digest === NEXT_PRERENDER_INTERRUPTED &&\n    'name' in error &&\n    'message' in error &&\n    error instanceof Error\n  )\n}\n\nexport function accessedDynamicData(\n  dynamicAccesses: Array<DynamicAccess>\n): boolean {\n  return dynamicAccesses.length > 0\n}\n\nexport function consumeDynamicAccess(\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n): DynamicTrackingState['dynamicAccesses'] {\n  // We mutate because we only call this once we are no longer writing\n  // to the dynamicTrackingState and it's more efficient than creating a new\n  // array.\n  serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses)\n  return serverDynamic.dynamicAccesses\n}\n\nexport function formatDynamicAPIAccesses(\n  dynamicAccesses: Array<DynamicAccess>\n): string[] {\n  return dynamicAccesses\n    .filter(\n      (access): access is Required<DynamicAccess> =>\n        typeof access.stack === 'string' && access.stack.length > 0\n    )\n    .map(({ expression, stack }) => {\n      stack = stack\n        .split('\\n')\n        // Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4)\n        .filter((line) => {\n          // Exclude Next.js internals from the stack trace.\n          if (line.includes('node_modules/next/')) {\n            return false\n          }\n\n          // Exclude anonymous functions from the stack trace.\n          if (line.includes(' (<anonymous>)')) {\n            return false\n          }\n\n          // Exclude Node.js internals from the stack trace.\n          if (line.includes(' (node:')) {\n            return false\n          }\n\n          return true\n        })\n        .join('\\n')\n      return `Dynamic API Usage Debug - ${expression}:\\n${stack}`\n    })\n}\n\nfunction assertPostpone() {\n  if (!hasPostpone) {\n    throw new Error(\n      `Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`\n    )\n  }\n}\n\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */\nexport function createRenderInBrowserAbortSignal(): AbortSignal {\n  const controller = new AbortController()\n  controller.abort(new BailoutToCSRError('Render in Browser'))\n  return controller.signal\n}\n\n/**\n * In a prerender, we may end up with hanging Promises as inputs due them\n * stalling on connection() or because they're loading dynamic data. In that\n * case we need to abort the encoding of arguments since they'll never complete.\n */\nexport function createHangingInputAbortSignal(\n  workUnitStore: WorkUnitStore\n): AbortSignal | undefined {\n  switch (workUnitStore.type) {\n    case 'prerender':\n    case 'prerender-runtime':\n      const controller = new AbortController()\n\n      if (workUnitStore.cacheSignal) {\n        // If we have a cacheSignal it means we're in a prospective render. If\n        // the input we're waiting on is coming from another cache, we do want\n        // to wait for it so that we can resolve this cache entry too.\n        workUnitStore.cacheSignal.inputReady().then(() => {\n          controller.abort()\n        })\n      } else {\n        // Otherwise we're in the final render and we should already have all\n        // our caches filled.\n        // If the prerender uses stages, we have wait until the runtime stage,\n        // at which point all runtime inputs will be resolved.\n        // (otherwise, a runtime prerender might consider `cookies()` hanging\n        //  even though they'd resolve in the next task.)\n        //\n        // We might still be waiting on some microtasks so we\n        // wait one tick before giving up. When we give up, we still want to\n        // render the content of this cache as deeply as we can so that we can\n        // suspend as deeply as possible in the tree or not at all if we don't\n        // end up waiting for the input.\n        const runtimeStagePromise = getRuntimeStagePromise(workUnitStore)\n        if (runtimeStagePromise) {\n          runtimeStagePromise.then(() =>\n            scheduleOnNextTick(() => controller.abort())\n          )\n        } else {\n          scheduleOnNextTick(() => controller.abort())\n        }\n      }\n\n      return controller.signal\n    case 'prerender-client':\n    case 'prerender-ppr':\n    case 'prerender-legacy':\n    case 'request':\n    case 'cache':\n    case 'private-cache':\n    case 'unstable-cache':\n      return undefined\n    default:\n      workUnitStore satisfies never\n  }\n}\n\nexport function annotateDynamicAccess(\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n) {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function useDynamicRouteParams(expression: string) {\n  const workStore = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workStore && workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender-client':\n      case 'prerender': {\n        const fallbackParams = workUnitStore.fallbackRouteParams\n        if (fallbackParams && fallbackParams.size > 0) {\n          // We are in a prerender with cacheComponents semantics. We are going to\n          // hang here and never resolve. This will cause the currently\n          // rendering component to effectively be a dynamic hole.\n          React.use(\n            makeHangingPromise(\n              workUnitStore.renderSignal,\n              workStore.route,\n              expression\n            )\n          )\n        }\n        break\n      }\n      case 'prerender-ppr': {\n        const fallbackParams = workUnitStore.fallbackRouteParams\n        if (fallbackParams && fallbackParams.size > 0) {\n          return postponeWithTracking(\n            workStore.route,\n            expression,\n            workUnitStore.dynamicTracking\n          )\n        }\n        break\n      }\n      case 'prerender-runtime':\n        throw new InvariantError(\n          `\\`${expression}\\` was called during a runtime prerender. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`\n        )\n      case 'cache':\n      case 'private-cache':\n        throw new InvariantError(\n          `\\`${expression}\\` was called inside a cache scope. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`\n        )\n      case 'prerender-legacy':\n      case 'request':\n      case 'unstable-cache':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n}\n\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/\n\n// Common implicit body tags that React will treat as body when placed directly in html\nconst bodyAndImplicitTags =\n  'body|div|main|section|article|aside|header|footer|nav|form|p|span|h1|h2|h3|h4|h5|h6'\n\n// Detects when RootLayoutBoundary (our framework marker component) appears\n// after Suspense in the component stack, indicating the root layout is wrapped\n// within a Suspense boundary. Ensures no body/html/implicit-body components are in between.\n//\n// Example matches:\n//   at Suspense (<anonymous>)\n//   at __next_root_layout_boundary__ (<anonymous>)\n//\n// Or with other components in between (but not body/html/implicit-body):\n//   at Suspense (<anonymous>)\n//   at SomeComponent (<anonymous>)\n//   at __next_root_layout_boundary__ (<anonymous>)\nconst hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex = new RegExp(\n  `\\\\n\\\\s+at Suspense \\\\(<anonymous>\\\\)(?:(?!\\\\n\\\\s+at (?:${bodyAndImplicitTags}) \\\\(<anonymous>\\\\))[\\\\s\\\\S])*?\\\\n\\\\s+at ${ROOT_LAYOUT_BOUNDARY_NAME} \\\\([^\\\\n]*\\\\)`\n)\n\nconst hasMetadataRegex = new RegExp(\n  `\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasViewportRegex = new RegExp(\n  `\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`)\n\nexport function trackAllowedDynamicAccess(\n  workStore: WorkStore,\n  componentStack: string,\n  dynamicValidation: DynamicValidationState,\n  clientDynamic: DynamicTrackingState\n) {\n  if (hasOutletRegex.test(componentStack)) {\n    // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n    return\n  } else if (hasMetadataRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicMetadata = true\n    return\n  } else if (hasViewportRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicViewport = true\n    return\n  } else if (\n    hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex.test(\n      componentStack\n    )\n  ) {\n    // For Suspense within body, the prelude wouldn't be empty so it wouldn't violate the empty static shells rule.\n    // But if you have Suspense above body, the prelude is empty but we allow that because having Suspense\n    // is an explicit signal from the user that they acknowledge the empty shell and want dynamic rendering.\n    dynamicValidation.hasAllowedDynamic = true\n    dynamicValidation.hasSuspenseAboveBody = true\n    return\n  } else if (hasSuspenseRegex.test(componentStack)) {\n    // this error had a Suspense boundary above it so we don't need to report it as a source\n    // of disallowed\n    dynamicValidation.hasAllowedDynamic = true\n    return\n  } else if (clientDynamic.syncDynamicErrorWithStack) {\n    // This task was the task that called the sync error.\n    dynamicValidation.dynamicErrors.push(\n      clientDynamic.syncDynamicErrorWithStack\n    )\n    return\n  } else {\n    const message = `Route \"${workStore.route}\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense`\n    const error = createErrorWithComponentOrOwnerStack(message, componentStack)\n    dynamicValidation.dynamicErrors.push(error)\n    return\n  }\n}\n\n/**\n * In dev mode, we prefer using the owner stack, otherwise the provided\n * component stack is used.\n */\nfunction createErrorWithComponentOrOwnerStack(\n  message: string,\n  componentStack: string\n) {\n  const ownerStack =\n    process.env.NODE_ENV !== 'production' && React.captureOwnerStack\n      ? React.captureOwnerStack()\n      : null\n\n  const error = new Error(message)\n  error.stack = error.name + ': ' + message + (ownerStack ?? componentStack)\n  return error\n}\n\nexport enum PreludeState {\n  Full = 0,\n  Empty = 1,\n  Errored = 2,\n}\n\nexport function logDisallowedDynamicError(\n  workStore: WorkStore,\n  error: Error\n): void {\n  console.error(error)\n\n  if (!workStore.dev) {\n    if (workStore.hasReadableErrorStacks) {\n      console.error(\n        `To get a more detailed stack trace and pinpoint the issue, start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.`\n      )\n    } else {\n      console.error(`To get a more detailed stack trace and pinpoint the issue, try one of the following:\n  - Start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.\n  - Rerun the production build with \\`next build --debug-prerender\\` to generate better stack traces.`)\n    }\n  }\n}\n\nexport function throwIfDisallowedDynamic(\n  workStore: WorkStore,\n  prelude: PreludeState,\n  dynamicValidation: DynamicValidationState,\n  serverDynamic: DynamicTrackingState\n): void {\n  if (prelude !== PreludeState.Full) {\n    if (dynamicValidation.hasSuspenseAboveBody) {\n      // This route has opted into allowing fully dynamic rendering\n      // by including a Suspense boundary above the body. In this case\n      // a lack of a shell is not considered disallowed so we simply return\n      return\n    }\n\n    if (serverDynamic.syncDynamicErrorWithStack) {\n      // There is no shell and the server did something sync dynamic likely\n      // leading to an early termination of the prerender before the shell\n      // could be completed. We terminate the build/validating render.\n      logDisallowedDynamicError(\n        workStore,\n        serverDynamic.syncDynamicErrorWithStack\n      )\n      throw new StaticGenBailoutError()\n    }\n\n    // We didn't have any sync bailouts but there may be user code which\n    // blocked the root. We would have captured these during the prerender\n    // and can log them here and then terminate the build/validating render\n    const dynamicErrors = dynamicValidation.dynamicErrors\n    if (dynamicErrors.length > 0) {\n      for (let i = 0; i < dynamicErrors.length; i++) {\n        logDisallowedDynamicError(workStore, dynamicErrors[i])\n      }\n\n      throw new StaticGenBailoutError()\n    }\n\n    // If we got this far then the only other thing that could be blocking\n    // the root is dynamic Viewport. If this is dynamic then\n    // you need to opt into that by adding a Suspense boundary above the body\n    // to indicate your are ok with fully dynamic rendering.\n    if (dynamicValidation.hasDynamicViewport) {\n      console.error(\n        `Route \"${workStore.route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) without explicitly allowing fully dynamic rendering. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-viewport`\n      )\n      throw new StaticGenBailoutError()\n    }\n\n    if (prelude === PreludeState.Empty) {\n      // If we ever get this far then we messed up the tracking of invalid dynamic.\n      // We still adhere to the constraint that you must produce a shell but invite the\n      // user to report this as a bug in Next.js.\n      console.error(\n        `Route \"${workStore.route}\" did not produce a static shell and Next.js was unable to determine a reason. This is a bug in Next.js.`\n      )\n      throw new StaticGenBailoutError()\n    }\n  } else {\n    if (\n      dynamicValidation.hasAllowedDynamic === false &&\n      dynamicValidation.hasDynamicMetadata\n    ) {\n      console.error(\n        `Route \"${workStore.route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) when the rest of the route does not. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-metadata`\n      )\n      throw new StaticGenBailoutError()\n    }\n  }\n}\n\nexport function delayUntilRuntimeStage<T>(\n  prerenderStore: PrerenderStoreModernRuntime,\n  result: Promise<T>\n): Promise<T> {\n  if (prerenderStore.runtimeStagePromise) {\n    return prerenderStore.runtimeStagePromise.then(() => result)\n  }\n  return result\n}\n","import { isHangingPromiseRejectionError } from '../../server/dynamic-rendering-utils'\nimport { isPostpone } from '../../server/lib/router-utils/is-postpone'\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { isNextRouterError } from './is-next-router-error'\nimport { isDynamicPostpone } from '../../server/app-render/dynamic-rendering'\nimport { isDynamicServerError } from './hooks-server-context'\n\nexport function unstable_rethrow(error: unknown): void {\n  if (\n    isNextRouterError(error) ||\n    isBailoutToCSRError(error) ||\n    isDynamicServerError(error) ||\n    isDynamicPostpone(error) ||\n    isPostpone(error) ||\n    isHangingPromiseRejectionError(error)\n  ) {\n    throw error\n  }\n\n  if (error instanceof Error && 'cause' in error) {\n    unstable_rethrow(error.cause)\n  }\n}\n","/**\n * This function should be used to rethrow internal Next.js errors so that they can be handled by the framework.\n * When wrapping an API that uses errors to interrupt control flow, you should use this function before you do any error handling.\n * This function will rethrow the error if it is a Next.js error so it can be handled, otherwise it will do nothing.\n *\n * Read more: [Next.js Docs: `unstable_rethrow`](https://nextjs.org/docs/app/api-reference/functions/unstable_rethrow)\n */\nexport const unstable_rethrow =\n  typeof window === 'undefined'\n    ? (\n        require('./unstable-rethrow.server') as typeof import('./unstable-rethrow.server')\n      ).unstable_rethrow\n    : (\n        require('./unstable-rethrow.browser') as typeof import('./unstable-rethrow.browser')\n      ).unstable_rethrow\n","/** @internal */\nclass ReadonlyURLSearchParamsError extends Error {\n  constructor() {\n    super(\n      'Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams'\n    )\n  }\n}\n\nclass ReadonlyURLSearchParams extends URLSearchParams {\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  append() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  delete() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  set() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  sort() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n}\n\nexport function unstable_isUnrecognizedActionError(): boolean {\n  throw new Error(\n    '`unstable_isUnrecognizedActionError` can only be used on the client.'\n  )\n}\n\nexport { redirect, permanentRedirect } from './redirect'\nexport { RedirectType } from './redirect-error'\nexport { notFound } from './not-found'\nexport { forbidden } from './forbidden'\nexport { unauthorized } from './unauthorized'\nexport { unstable_rethrow } from './unstable-rethrow'\nexport { ReadonlyURLSearchParams }\n","export class UnrecognizedActionError extends Error {\n  constructor(...args: ConstructorParameters<typeof Error>) {\n    super(...args)\n    this.name = 'UnrecognizedActionError'\n  }\n}\n\n/**\n * Check whether a server action call failed because the server action was not recognized by the server.\n * This can happen if the client and the server are not from the same deployment.\n *\n * Example usage:\n * ```ts\n * try {\n *   await myServerAction();\n * } catch (err) {\n *   if (unstable_isUnrecognizedActionError(err)) {\n *     // The client is from a different deployment than the server.\n *     // Reloading the page will fix this mismatch.\n *     window.alert(\"Please refresh the page and try again\");\n *     return;\n *   }\n * }\n * ```\n * */\nexport function unstable_isUnrecognizedActionError(\n  error: unknown\n): error is UnrecognizedActionError {\n  return !!(\n    error &&\n    typeof error === 'object' &&\n    error instanceof UnrecognizedActionError\n  )\n}\n","import { BailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { workAsyncStorage } from '../../server/app-render/work-async-storage.external'\nimport { workUnitAsyncStorage } from '../../server/app-render/work-unit-async-storage.external'\n\nexport function bailoutToClientRendering(reason: string): void | never {\n  const workStore = workAsyncStorage.getStore()\n\n  if (workStore?.forceStatic) return\n\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender':\n      case 'prerender-runtime':\n      case 'prerender-client':\n      case 'prerender-ppr':\n      case 'prerender-legacy':\n        throw new BailoutToCSRError(reason)\n      case 'request':\n      case 'cache':\n      case 'private-cache':\n      case 'unstable-cache':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n}\n","import type { FlightRouterState } from '../../server/app-render/types'\nimport type { Params } from '../../server/request/params'\n\nimport { useContext, useMemo } from 'react'\nimport {\n  AppRouterContext,\n  LayoutRouterContext,\n  type AppRouterInstance,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport {\n  SearchParamsContext,\n  PathnameContext,\n  PathParamsContext,\n} from '../../shared/lib/hooks-client-context.shared-runtime'\nimport { getSegmentValue } from './router-reducer/reducers/get-segment-value'\nimport { PAGE_SEGMENT_KEY, DEFAULT_SEGMENT_KEY } from '../../shared/lib/segment'\nimport { ReadonlyURLSearchParams } from './navigation.react-server'\n\nconst useDynamicRouteParams =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/dynamic-rendering') as typeof import('../../server/app-render/dynamic-rendering')\n      ).useDynamicRouteParams\n    : undefined\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you *read* the current URL's search parameters.\n *\n * Learn more about [`URLSearchParams` on MDN](https://developer.mozilla.org/docs/Web/API/URLSearchParams)\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useSearchParams } from 'next/navigation'\n *\n * export default function Page() {\n *   const searchParams = useSearchParams()\n *   searchParams.get('foo') // returns 'bar' when ?foo=bar\n *   // ...\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSearchParams`](https://nextjs.org/docs/app/api-reference/functions/use-search-params)\n */\n// Client components API\nexport function useSearchParams(): ReadonlyURLSearchParams {\n  const searchParams = useContext(SearchParamsContext)\n\n  // In the case where this is `null`, the compat types added in\n  // `next-env.d.ts` will add a new overload that changes the return type to\n  // include `null`.\n  const readonlySearchParams = useMemo(() => {\n    if (!searchParams) {\n      // When the router is not ready in pages, we won't have the search params\n      // available.\n      return null\n    }\n\n    return new ReadonlyURLSearchParams(searchParams)\n  }, [searchParams]) as ReadonlyURLSearchParams\n\n  if (typeof window === 'undefined') {\n    // AsyncLocalStorage should not be included in the client bundle.\n    const { bailoutToClientRendering } =\n      require('./bailout-to-client-rendering') as typeof import('./bailout-to-client-rendering')\n    // TODO-APP: handle dynamic = 'force-static' here and on the client\n    bailoutToClientRendering('useSearchParams()')\n  }\n\n  return readonlySearchParams\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the current URL's pathname.\n *\n * @example\n * ```ts\n * \"use client\"\n * import { usePathname } from 'next/navigation'\n *\n * export default function Page() {\n *  const pathname = usePathname() // returns \"/dashboard\" on /dashboard?foo=bar\n *  // ...\n * }\n * ```\n *\n * Read more: [Next.js Docs: `usePathname`](https://nextjs.org/docs/app/api-reference/functions/use-pathname)\n */\n// Client components API\nexport function usePathname(): string {\n  useDynamicRouteParams?.('usePathname()')\n\n  // In the case where this is `null`, the compat types added in `next-env.d.ts`\n  // will add a new overload that changes the return type to include `null`.\n  return useContext(PathnameContext) as string\n}\n\n// Client components API\nexport {\n  ServerInsertedHTMLContext,\n  useServerInsertedHTML,\n} from '../../shared/lib/server-inserted-html.shared-runtime'\n\n/**\n *\n * This hook allows you to programmatically change routes inside [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components).\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useRouter } from 'next/navigation'\n *\n * export default function Page() {\n *  const router = useRouter()\n *  // ...\n *  router.push('/dashboard') // Navigate to /dashboard\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useRouter`](https://nextjs.org/docs/app/api-reference/functions/use-router)\n */\n// Client components API\nexport function useRouter(): AppRouterInstance {\n  const router = useContext(AppRouterContext)\n  if (router === null) {\n    throw new Error('invariant expected app router to be mounted')\n  }\n\n  return router\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read a route's dynamic params filled in by the current URL.\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useParams } from 'next/navigation'\n *\n * export default function Page() {\n *   // on /dashboard/[team] where pathname is /dashboard/nextjs\n *   const { team } = useParams() // team === \"nextjs\"\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useParams`](https://nextjs.org/docs/app/api-reference/functions/use-params)\n */\n// Client components API\nexport function useParams<T extends Params = Params>(): T {\n  useDynamicRouteParams?.('useParams()')\n\n  return useContext(PathParamsContext) as T\n}\n\n/** Get the canonical parameters from the current level to the leaf node. */\n// Client components API\nfunction getSelectedLayoutSegmentPath(\n  tree: FlightRouterState,\n  parallelRouteKey: string,\n  first = true,\n  segmentPath: string[] = []\n): string[] {\n  let node: FlightRouterState\n  if (first) {\n    // Use the provided parallel route key on the first parallel route\n    node = tree[1][parallelRouteKey]\n  } else {\n    // After first parallel route prefer children, if there's no children pick the first parallel route.\n    const parallelRoutes = tree[1]\n    node = parallelRoutes.children ?? Object.values(parallelRoutes)[0]\n  }\n\n  if (!node) return segmentPath\n  const segment = node[0]\n\n  let segmentValue = getSegmentValue(segment)\n\n  if (!segmentValue || segmentValue.startsWith(PAGE_SEGMENT_KEY)) {\n    return segmentPath\n  }\n\n  segmentPath.push(segmentValue)\n\n  return getSelectedLayoutSegmentPath(\n    node,\n    parallelRouteKey,\n    false,\n    segmentPath\n  )\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the active route segments **below** the Layout it is called from.\n *\n * @example\n * ```ts\n * 'use client'\n *\n * import { useSelectedLayoutSegments } from 'next/navigation'\n *\n * export default function ExampleClientComponent() {\n *   const segments = useSelectedLayoutSegments()\n *\n *   return (\n *     <ul>\n *       {segments.map((segment, index) => (\n *         <li key={index}>{segment}</li>\n *       ))}\n *     </ul>\n *   )\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSelectedLayoutSegments`](https://nextjs.org/docs/app/api-reference/functions/use-selected-layout-segments)\n */\n// Client components API\nexport function useSelectedLayoutSegments(\n  parallelRouteKey: string = 'children'\n): string[] {\n  useDynamicRouteParams?.('useSelectedLayoutSegments()')\n\n  const context = useContext(LayoutRouterContext)\n  // @ts-expect-error This only happens in `pages`. Type is overwritten in navigation.d.ts\n  if (!context) return null\n\n  return getSelectedLayoutSegmentPath(context.parentTree, parallelRouteKey)\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the active route segment **one level below** the Layout it is called from.\n *\n * @example\n * ```ts\n * 'use client'\n * import { useSelectedLayoutSegment } from 'next/navigation'\n *\n * export default function ExampleClientComponent() {\n *   const segment = useSelectedLayoutSegment()\n *\n *   return <p>Active segment: {segment}</p>\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSelectedLayoutSegment`](https://nextjs.org/docs/app/api-reference/functions/use-selected-layout-segment)\n */\n// Client components API\nexport function useSelectedLayoutSegment(\n  parallelRouteKey: string = 'children'\n): string | null {\n  useDynamicRouteParams?.('useSelectedLayoutSegment()')\n\n  const selectedLayoutSegments = useSelectedLayoutSegments(parallelRouteKey)\n\n  if (!selectedLayoutSegments || selectedLayoutSegments.length === 0) {\n    return null\n  }\n\n  const selectedLayoutSegment =\n    parallelRouteKey === 'children'\n      ? selectedLayoutSegments[0]\n      : selectedLayoutSegments[selectedLayoutSegments.length - 1]\n\n  // if the default slot is showing, we return null since it's not technically \"selected\" (it's a fallback)\n  // and returning an internal value like `__DEFAULT__` would be confusing.\n  return selectedLayoutSegment === DEFAULT_SEGMENT_KEY\n    ? null\n    : selectedLayoutSegment\n}\n\nexport { unstable_isUnrecognizedActionError } from './unrecognized-action-error'\n\n// Shared components APIs\nexport {\n  notFound,\n  forbidden,\n  unauthorized,\n  redirect,\n  permanentRedirect,\n  RedirectType,\n  ReadonlyURLSearchParams,\n  unstable_rethrow,\n} from './navigation.react-server'\n","module.exports = require('./dist/client/components/navigation')\n","import React from 'react';\nimport { createStore } from 'zustand/vanilla';\n\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity) {\n  const slice = React.useSyncExternalStore(\n    api.subscribe,\n    React.useCallback(() => selector(api.getState()), [api, selector]),\n    React.useCallback(() => selector(api.getInitialState()), [api, selector])\n  );\n  React.useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  const api = createStore(createState);\n  const useBoundStore = (selector) => useStore(api, selector);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = ((createState) => createState ? createImpl(createState) : createImpl);\n\nexport { create, useStore };\n","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const api = { setState, getState, getInitialState, subscribe };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = ((createState) => createState ? createStoreImpl(createState) : createStoreImpl);\n\nexport { createStore };\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...args) => api.dispatch(...args), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst removeStoreFromTrackedConnections = (name, store) => {\n  if (store === void 0) return;\n  const connectionInfo = trackedConnections.get(name);\n  if (!connectionInfo) return;\n  delete connectionInfo.stores[store];\n  if (Object.keys(connectionInfo.stores).length === 0) {\n    trackedConnections.delete(name);\n  }\n};\nconst findCallerName = (stack) => {\n  var _a, _b;\n  if (!stack) return void 0;\n  const traceLines = stack.split(\"\\n\");\n  const apiSetStateLineIndex = traceLines.findIndex(\n    (traceLine) => traceLine.includes(\"api.setState\")\n  );\n  if (apiSetStateLineIndex < 0) return void 0;\n  const callerLine = ((_a = traceLines[apiSetStateLineIndex + 1]) == null ? void 0 : _a.trim()) || \"\";\n  return (_b = /.+ (.+) .+/.exec(callerLine)) == null ? void 0 : _b[1];\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = ((state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === void 0 ? {\n      type: anonymousActionType || findCallerName(new Error().stack) || \"anonymous\"\n    } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  });\n  api.devtools = {\n    cleanup: () => {\n      if (connection && typeof connection.unsubscribe === \"function\") {\n        connection.unsubscribe();\n      }\n      removeStoreFromTrackedConnections(options.name, store);\n    }\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...args) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && args[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...args);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format.\n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState) return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, fn) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0) fn(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = ((selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  });\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nfunction combine(initialState, create) {\n  return (...args) => Object.assign({}, initialState, create(...args));\n}\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(name, JSON.stringify(newValue, options == null ? void 0 : options.replacer)),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst persistImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    return setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      return setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            const migration = options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n            if (migration instanceof Promise) {\n              return migration.then((result) => [true, result]);\n            }\n            return [true, migration];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, void 0];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","// Mijia Authentication - Chuyển đổi từ Python mijiaLogin\r\n\r\nimport { MijiaSession, MijiaLoginOptions } from './types';\r\n\r\nexport class MijiaAuth {\r\n  private baseUrl = 'https://account.xiaomi.com';\r\n  private serviceUrl = 'https://api.io.mi.com/app';\r\n\r\n  /**\r\n   * Đăng nhập bằng tài khoản/mật khẩu\r\n   */\r\n  async login(username: string, password: string): Promise<MijiaSession> {\r\n    try {\r\n      // Step 1: Lấy captcha và service token\r\n      const captchaResponse = await this.getCaptcha();\r\n      if (!captchaResponse.success) {\r\n        return { success: false, error: 'Failed to get captcha' };\r\n      }\r\n\r\n      // Step 2: Đăng nhập với captcha\r\n      const loginResponse = await this.performLogin(username, password, captchaResponse.captcha);\r\n      if (!loginResponse.success) {\r\n        return { success: false, error: 'Login failed' };\r\n      }\r\n\r\n      // Step 3: Lấy service token\r\n      const serviceTokenResponse = await this.getServiceToken(loginResponse.token);\r\n      if (!serviceTokenResponse.success) {\r\n        return { success: false, error: 'Failed to get service token' };\r\n      }\r\n\r\n      return {\r\n        success: true,\r\n        token: loginResponse.token,\r\n        service_token: serviceTokenResponse.service_token,\r\n        security_token: serviceTokenResponse.security_token,\r\n        user_id: loginResponse.user_id,\r\n        user_name: loginResponse.user_name,\r\n        user_avatar: loginResponse.user_avatar\r\n      };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error instanceof Error ? error.message : 'Unknown error' \r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Đăng nhập bằng QR code\r\n   */\r\n  async QRlogin(): Promise<MijiaSession> {\r\n    try {\r\n      // Tạo QR code data\r\n      const qrData = {\r\n        qr_id: this.generateQRId(),\r\n        timestamp: Date.now(),\r\n        action: 'login'\r\n      };\r\n\r\n      // Trong thực tế, đây sẽ là URL để quét QR\r\n      const qrUrl = `mijia://login?qr_id=${qrData.qr_id}&timestamp=${qrData.timestamp}`;\r\n\r\n      // Simulate QR scan và login\r\n      // Trong thực tế, cần polling để check QR status\r\n      return {\r\n        success: true,\r\n        token: `qr_token_${qrData.qr_id}`,\r\n        service_token: `service_token_${qrData.qr_id}`,\r\n        security_token: `security_token_${qrData.qr_id}`,\r\n        user_id: 'qr_user',\r\n        user_name: 'QR User',\r\n        user_avatar: null\r\n      };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error instanceof Error ? error.message : 'QR login failed' \r\n      };\r\n    }\r\n  }\r\n\r\n  private async getCaptcha(): Promise<{ success: boolean; captcha?: any; error?: string }> {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}/pass/serviceLoginAuth2`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams({\r\n          'sid': 'xiaomiio',\r\n          'hash': 'HASH_VALUE', // Cần tính toán hash thực tế\r\n          'callback': 'https://sts.api.io.mi.com/sts',\r\n          'qs': '%3Fsid%3Dxiaomiio%26_json%3Dtrue',\r\n          'user': '',\r\n          '_json': 'true'\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n      return { success: true, captcha: data };\r\n    } catch (error) {\r\n      return { success: false, error: 'Failed to get captcha' };\r\n    }\r\n  }\r\n\r\n  private async performLogin(username: string, password: string, captcha: any): Promise<{ success: boolean; token?: string; user_id?: string; user_name?: string; user_avatar?: string; error?: string }> {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}/pass/serviceLoginAuth2`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams({\r\n          'sid': 'xiaomiio',\r\n          'hash': 'HASH_VALUE',\r\n          'callback': 'https://sts.api.io.mi.com/sts',\r\n          'qs': '%3Fsid%3Dxiaomiio%26_json%3Dtrue',\r\n          'user': username,\r\n          'hash': password,\r\n          '_json': 'true',\r\n          ...captcha\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.code === 0) {\r\n        return {\r\n          success: true,\r\n          token: data.token,\r\n          user_id: data.user_id,\r\n          user_name: data.user_name,\r\n          user_avatar: data.user_avatar\r\n        };\r\n      } else {\r\n        return { success: false, error: data.desc || 'Login failed' };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: 'Login request failed' };\r\n    }\r\n  }\r\n\r\n  private async getServiceToken(token: string): Promise<{ success: boolean; service_token?: string; security_token?: string; error?: string }> {\r\n    try {\r\n      const response = await fetch(`${this.serviceUrl}/home/device_list`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          getVirtualModel: false,\r\n          getHuamiDevices: 0\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.code === 0) {\r\n        return {\r\n          success: true,\r\n          service_token: data.service_token,\r\n          security_token: data.security_token\r\n        };\r\n      } else {\r\n        return { success: false, error: 'Failed to get service token' };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: 'Service token request failed' };\r\n    }\r\n  }\r\n\r\n  private generateQRId(): string {\r\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n  }\r\n}\r\n\r\nexport const mijiaAuth = new MijiaAuth();\r\n","// Mijia API - Chuyển đổi từ Python mijiaAPI\r\n\r\nimport { MijiaSession, MijiaDevice, MijiaHome, MijiaScene, MijiaDeviceUpdate, MijiaDeviceAction, MijiaAPIResponse } from './types';\r\n\r\nexport class MijiaAPI {\r\n  private session: MijiaSession | null = null;\r\n  private baseUrl = 'https://api.io.mi.com/app';\r\n\r\n  constructor(session?: MijiaSession) {\r\n    if (session) {\r\n      this.session = session;\r\n    }\r\n  }\r\n\r\n  setSession(session: MijiaSession): void {\r\n    this.session = session;\r\n  }\r\n\r\n  private async request<T>(endpoint: string, options: RequestInit = {}): Promise<MijiaAPIResponse<T>> {\r\n    if (!this.session?.service_token) {\r\n      return { success: false, error: 'Not authenticated' };\r\n    }\r\n\r\n    try {\r\n      // Generate nonce and signature like Python API\r\n      const nonce = this.generateNonce();\r\n      const signedNonce = this.generateSignedNonce(this.session.ssecurity || '', nonce);\r\n      const data = this.formatData(typeof options.body === 'string' ? options.body : '{}');\r\n      const signature = this.generateSignature(endpoint, signedNonce, nonce, data);\r\n\r\n      const formData = new URLSearchParams();\r\n      formData.append('_nonce', nonce);\r\n      formData.append('data', data);\r\n      formData.append('signature', signature);\r\n\r\n      const response = await fetch(`${this.baseUrl}${endpoint}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'User-Agent': 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Mobile Safari/537.36 Edg/126.0.0.0',\r\n          'x-xiaomi-protocal-flag-cli': 'PROTOCAL-HTTP2',\r\n          'Cookie': `PassportDeviceId=${this.session.passport_device_id};userId=${this.session.user_id};serviceToken=${this.session.service_token};`,\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n          ...options.headers,\r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      const responseData = await response.json();\r\n      \r\n      if (responseData.code === 0) {\r\n        // Python API trả về trực tiếp data, không có result wrapper\r\n        return { success: true, data: responseData.result || responseData };\r\n      } else {\r\n        return { success: false, error: `获取数据失败, ${responseData.message}` };\r\n      }\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error instanceof Error ? error.message : 'Network error' \r\n      };\r\n    }\r\n  }\r\n\r\n  private generateNonce(): string {\r\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    let result = '';\r\n    for (let i = 0; i < 16; i++) {\r\n      result += chars.charAt(Math.floor(Math.random() * chars.length));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private generateSignedNonce(ssecurity: string, nonce: string): string {\r\n    // Simple hash implementation for browser compatibility\r\n    const str = ssecurity + nonce;\r\n    let hash = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n      const char = str.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash; // Convert to 32bit integer\r\n    }\r\n    return btoa(hash.toString());\r\n  }\r\n\r\n  private generateSignature(uri: string, signedNonce: string, nonce: string, data: string): string {\r\n    // Simple signature implementation for browser compatibility\r\n    const sign = `${uri}&${signedNonce}&${nonce}&data=${data}`;\r\n    let hash = 0;\r\n    for (let i = 0; i < sign.length; i++) {\r\n      const char = sign.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash; // Convert to 32bit integer\r\n    }\r\n    return btoa(hash.toString());\r\n  }\r\n\r\n  private formatData(data: string): string {\r\n    return data\r\n      .replace(/'/g, '\"')\r\n      .replace(/True/g, 'true')\r\n      .replace(/False/g, 'false');\r\n  }\r\n\r\n  /**\r\n   * Lấy danh sách thiết bị\r\n   */\r\n  async get_devices_list(): Promise<MijiaAPIResponse<MijiaDevice[]>> {\r\n    // First get homes list\r\n    const homesResponse = await this.get_homes_list();\r\n    if (!homesResponse.success || !homesResponse.data) {\r\n      return { success: false, error: 'Failed to get homes list' };\r\n    }\r\n\r\n    const devices: MijiaDevice[] = [];\r\n    const deviceIds = new Set<string>(); // Để tránh trùng lặp thiết bị\r\n\r\n    for (const home of homesResponse.data) {\r\n      let start_did = '';\r\n      let has_more = true;\r\n      \r\n      while (has_more) {\r\n        const response = await this.request<{ device_info: unknown[]; has_more: boolean; next_did: string }>('/home/home_device_list', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            home_owner: home.id,\r\n            home_id: parseInt(home.id),\r\n            limit: 200,\r\n            start_did: start_did,\r\n            get_split_device: true,        // Lấy thiết bị được chia sẻ\r\n            support_smart_home: true,      // Hỗ trợ smart home\r\n            get_cariot_device: true,       // Lấy thiết bị Cariot\r\n            get_third_device: true,        // Lấy thiết bị bên thứ 3\r\n            get_share_device: true,        // Lấy thiết bị được chia sẻ\r\n            get_room_device: true,         // Lấy thiết bị trong phòng\r\n            get_all_device: true           // Lấy tất cả thiết bị\r\n          })\r\n        });\r\n\r\n        if (response.success && response.data?.device_info) {\r\n          // Lọc thiết bị trùng lặp và thêm vào danh sách\r\n          for (const device of response.data.device_info) {\r\n            const d = device as Record<string, unknown>;\r\n            const deviceId = (d.did || d.id) as string;\r\n            if (deviceId && !deviceIds.has(deviceId)) {\r\n              deviceIds.add(deviceId);\r\n              devices.push(device as MijiaDevice);\r\n            }\r\n          }\r\n          \r\n          start_did = (response.data.next_did as string) || '';\r\n          has_more = response.data.has_more && start_did !== '';\r\n        } else {\r\n          has_more = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return { success: true, data: devices };\r\n  }\r\n\r\n  /**\r\n   * Lấy thiết bị được chia sẻ\r\n   */\r\n  async get_shared_devices(): Promise<MijiaAPIResponse<MijiaDevice[]>> {\r\n    const response = await this.request<{ device_info: unknown[] }>('/home/home_device_list', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        get_share_device: true,\r\n        get_split_device: true,\r\n        get_third_device: true,\r\n        limit: 500\r\n      })\r\n    });\r\n\r\n    if (response.success && response.data?.device_info) {\r\n      return { success: true, data: response.data.device_info as MijiaDevice[] };\r\n    }\r\n\r\n    return { success: true, data: [] };\r\n  }\r\n\r\n  /**\r\n   * Lấy tất cả thiết bị bao gồm thiết bị được chia sẻ\r\n   */\r\n  async get_all_devices(): Promise<MijiaAPIResponse<MijiaDevice[]>> {\r\n    // Lấy thiết bị thông thường\r\n    const devicesResponse = await this.get_devices_list();\r\n    if (!devicesResponse.success) {\r\n      return devicesResponse;\r\n    }\r\n\r\n    // Lấy thiết bị được chia sẻ\r\n    const sharedResponse = await this.get_shared_devices();\r\n    if (!sharedResponse.success) {\r\n      return sharedResponse;\r\n    }\r\n\r\n    // Gộp và loại bỏ trùng lặp\r\n    const allDevices = [...(devicesResponse.data || [])];\r\n    const deviceIds = new Set(allDevices.map(d => d.id));\r\n\r\n    for (const device of sharedResponse.data || []) {\r\n      const deviceId = device.id;\r\n      if (deviceId && !deviceIds.has(deviceId)) {\r\n        deviceIds.add(deviceId);\r\n        allDevices.push(device);\r\n      }\r\n    }\r\n\r\n    return { success: true, data: allDevices };\r\n  }\r\n\r\n  /**\r\n   * Lấy danh sách nhà/phòng\r\n   */\r\n  async get_homes_list(): Promise<MijiaAPIResponse<MijiaHome[]>> {\r\n    const response = await this.request<{ home_list: unknown[] }>('/v2/homeroom/gethome_merged', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        fg: true,\r\n        fetch_share: true,\r\n        fetch_share_dev: true,\r\n        limit: 300,\r\n        app_ver: 7\r\n      })\r\n    });\r\n\r\n    if (response.success && response.data?.home_list) {\r\n      return { success: true, data: response.data.home_list as MijiaHome[] };\r\n    }\r\n\r\n    return { success: false, error: 'Failed to get homes list' };\r\n  }\r\n\r\n  /**\r\n   * Lấy danh sách kịch bản\r\n   */\r\n  async get_scenes_list(home_id: string): Promise<MijiaAPIResponse<MijiaScene[]>> {\r\n    const response = await this.request<{ scene_info_list: unknown[] }>('/appgateway/miot/appsceneservice/AppSceneService/GetSceneList', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ home_id })\r\n    });\r\n\r\n    if (response.success && response.data?.scene_info_list) {\r\n      return { success: true, data: response.data.scene_info_list as MijiaScene[] };\r\n    }\r\n\r\n    return { success: true, data: [] };\r\n  }\r\n\r\n  /**\r\n   * Thực thi kịch bản\r\n   */\r\n  async run_scene(scene_id: string): Promise<MijiaAPIResponse> {\r\n    const response = await this.request('/appgateway/miot/appsceneservice/AppSceneService/RunScene', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ \r\n        scene_id, \r\n        trigger_key: \"user.click\" \r\n      })\r\n    });\r\n\r\n    // Python API trả về boolean, không phải object\r\n    return { success: response.success, data: response.success };\r\n  }\r\n\r\n  /**\r\n   * Lấy thuộc tính thiết bị\r\n   */\r\n  async get_devices_prop(device: MijiaDevice): Promise<MijiaAPIResponse<unknown>> {\r\n    const response = await this.request('/miotspec/prop/get', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ \r\n        params: [{\r\n          did: device.id,\r\n          siid: 2,\r\n          piid: 1\r\n        }]\r\n      })\r\n    });\r\n\r\n    // Python API trả về trực tiếp array, không phải object\r\n    return { success: response.success, data: response.data || [] };\r\n  }\r\n\r\n  /**\r\n   * Đặt thuộc tính thiết bị\r\n   */\r\n  async set_devices_prop(device: MijiaDevice): Promise<MijiaAPIResponse> {\r\n    const properties = Object.entries(device.properties).map(([, value]) => ({\r\n      did: device.id,\r\n      siid: 2,\r\n      piid: 1,\r\n      value: value\r\n    }));\r\n\r\n    const response = await this.request('/miotspec/prop/set', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        params: properties\r\n      })\r\n    });\r\n\r\n    // Python API trả về trực tiếp array, không phải object\r\n    return { success: response.success, data: response.data || [] };\r\n  }\r\n\r\n  /**\r\n   * Thực thi hành động trên thiết bị\r\n   */\r\n  async run_action(actionData: MijiaDeviceAction): Promise<MijiaAPIResponse> {\r\n    const response = await this.request('/miotspec/action', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        params: {\r\n          did: actionData.device_id,\r\n          siid: 2,\r\n          aiid: 1,\r\n          value: actionData.params\r\n        }\r\n      })\r\n    });\r\n\r\n    // Python API trả về trực tiếp object, không phải wrapper\r\n    return { success: response.success, data: response.data || {} };\r\n  }\r\n\r\n  /**\r\n   * Lấy thông tin thiết bị theo tên\r\n   */\r\n  async get_device_by_name(dev_name: string): Promise<MijiaAPIResponse<MijiaDevice | null>> {\r\n    const devicesResponse = await this.get_devices_list();\r\n    if (!devicesResponse.success || !devicesResponse.data) {\r\n      return { success: false, error: 'Failed to get devices' };\r\n    }\r\n\r\n    const device = devicesResponse.data.find(d => d.name === dev_name);\r\n    return { success: true, data: device || null };\r\n  }\r\n\r\n  async get_device_by_id(device_id: string): Promise<MijiaAPIResponse<MijiaDevice | null>> {\r\n    const devicesResponse = await this.get_devices_list();\r\n    if (!devicesResponse.success || !devicesResponse.data) {\r\n      return { success: false, error: 'Failed to get devices' };\r\n    }\r\n\r\n    const device = devicesResponse.data.find(d => d.id === device_id);\r\n    return { success: true, data: device || null };\r\n  }\r\n\r\n  /**\r\n   * Cập nhật thiết bị\r\n   */\r\n  async update_device(deviceUpdate: MijiaDeviceUpdate): Promise<MijiaAPIResponse> {\r\n    const deviceResponse = await this.get_device_by_id(deviceUpdate.device_id);\r\n    if (!deviceResponse.success || !deviceResponse.data) {\r\n      return { success: false, error: 'Device not found' };\r\n    }\r\n\r\n    const device = deviceResponse.data;\r\n    device.properties = { ...device.properties, ...deviceUpdate.properties };\r\n\r\n    const response = await this.set_devices_prop(device);\r\n    return response;\r\n  }\r\n}\r\n\r\nexport const mijiaAPI = new MijiaAPI();\r\n","// Mijia Device - Chuyển đổi từ Python mijiaDevice\r\n\r\nimport { MijiaDevice, MijiaAPI } from './types';\r\n\r\nexport class MijiaDeviceWrapper {\r\n  private device: MijiaDevice;\r\n  private api: MijiaAPI;\r\n\r\n  constructor(api: MijiaAPI, device: MijiaDevice) {\r\n    this.api = api;\r\n    this.device = device;\r\n  }\r\n\r\n  // Device properties\r\n  get id(): string {\r\n    return this.device.id;\r\n  }\r\n\r\n  get name(): string {\r\n    return this.device.name;\r\n  }\r\n\r\n  get type(): string {\r\n    return this.device.type;\r\n  }\r\n\r\n  get model(): string {\r\n    return this.device.model;\r\n  }\r\n\r\n  get online(): boolean {\r\n    return this.device.online;\r\n  }\r\n\r\n  get homeId(): string {\r\n    return this.device.home_id;\r\n  }\r\n\r\n  // Light properties\r\n  get power(): boolean {\r\n    return this.device.properties.power || false;\r\n  }\r\n\r\n  set power(value: boolean) {\r\n    this.device.properties.power = value;\r\n  }\r\n\r\n  get brightness(): number {\r\n    return this.device.properties.brightness || 0;\r\n  }\r\n\r\n  set brightness(value: number) {\r\n    this.device.properties.brightness = Math.max(0, Math.min(100, value));\r\n  }\r\n\r\n  get colorTemp(): number {\r\n    return this.device.properties.colorTemp || 4000;\r\n  }\r\n\r\n  set colorTemp(value: number) {\r\n    this.device.properties.colorTemp = Math.max(1700, Math.min(6500, value));\r\n  }\r\n\r\n  get color(): string {\r\n    return this.device.properties.color || '#ffffff';\r\n  }\r\n\r\n  set color(value: string) {\r\n    this.device.properties.color = value;\r\n  }\r\n\r\n  // Sensor properties\r\n  get temperature(): number | null {\r\n    return this.device.properties.temperature || null;\r\n  }\r\n\r\n  get humidity(): number | null {\r\n    return this.device.properties.humidity || null;\r\n  }\r\n\r\n  get pressure(): number | null {\r\n    return this.device.properties.pressure || null;\r\n  }\r\n\r\n  // Camera properties\r\n  get recording(): boolean {\r\n    return this.device.properties.recording || false;\r\n  }\r\n\r\n  set recording(value: boolean) {\r\n    this.device.properties.recording = value;\r\n  }\r\n\r\n  get motionDetection(): boolean {\r\n    return this.device.properties.motionDetection || false;\r\n  }\r\n\r\n  set motionDetection(value: boolean) {\r\n    this.device.properties.motionDetection = value;\r\n  }\r\n\r\n  get nightVision(): boolean {\r\n    return this.device.properties.nightVision || false;\r\n  }\r\n\r\n  set nightVision(value: boolean) {\r\n    this.device.properties.nightVision = value;\r\n  }\r\n\r\n  get volume(): number {\r\n    return this.device.properties.volume || 0;\r\n  }\r\n\r\n  set volume(value: number) {\r\n    this.device.properties.volume = Math.max(0, Math.min(100, value));\r\n  }\r\n\r\n  // Methods\r\n  async turnOn(): Promise<boolean> {\r\n    this.power = true;\r\n    return await this.save();\r\n  }\r\n\r\n  async turnOff(): Promise<boolean> {\r\n    this.power = false;\r\n    return await this.save();\r\n  }\r\n\r\n  async setBrightness(brightness: number): Promise<boolean> {\r\n    this.brightness = brightness;\r\n    return await this.save();\r\n  }\r\n\r\n  async setColor(color: string): Promise<boolean> {\r\n    this.color = color;\r\n    return await this.save();\r\n  }\r\n\r\n  async setColorTemp(colorTemp: number): Promise<boolean> {\r\n    this.colorTemp = colorTemp;\r\n    return await this.save();\r\n  }\r\n\r\n  async setVolume(volume: number): Promise<boolean> {\r\n    this.volume = volume;\r\n    return await this.save();\r\n  }\r\n\r\n  async startRecording(): Promise<boolean> {\r\n    this.recording = true;\r\n    return await this.save();\r\n  }\r\n\r\n  async stopRecording(): Promise<boolean> {\r\n    this.recording = false;\r\n    return await this.save();\r\n  }\r\n\r\n  async enableMotionDetection(): Promise<boolean> {\r\n    this.motionDetection = true;\r\n    return await this.save();\r\n  }\r\n\r\n  async disableMotionDetection(): Promise<boolean> {\r\n    this.motionDetection = false;\r\n    return await this.save();\r\n  }\r\n\r\n  async enableNightVision(): Promise<boolean> {\r\n    this.nightVision = true;\r\n    return await this.save();\r\n  }\r\n\r\n  async disableNightVision(): Promise<boolean> {\r\n    this.nightVision = false;\r\n    return await this.save();\r\n  }\r\n\r\n  private async save(): Promise<boolean> {\r\n    try {\r\n      const response = await this.api.set_devices_prop(this.device);\r\n      return response.success;\r\n    } catch (error) {\r\n      console.error('Failed to save device properties:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async refresh(): Promise<boolean> {\r\n    try {\r\n      const response = await this.api.get_devices_prop(this.device);\r\n      if (response.success && response.data) {\r\n        this.device.properties = { ...this.device.properties, ...response.data };\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      console.error('Failed to refresh device properties:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Get all properties\r\n  getProperties(): Record<string, any> {\r\n    return { ...this.device.properties };\r\n  }\r\n\r\n  // Set multiple properties at once\r\n  async setProperties(properties: Record<string, any>): Promise<boolean> {\r\n    Object.assign(this.device.properties, properties);\r\n    return await this.save();\r\n  }\r\n}\r\n\r\n// Factory function để tạo device wrapper\r\nexport function createMijiaDevice(api: MijiaAPI, device: MijiaDevice): MijiaDeviceWrapper {\r\n  return new MijiaDeviceWrapper(api, device);\r\n}\r\n\r\n// Factory function để tạo device wrapper by name\r\nexport async function createMijiaDeviceByName(api: MijiaAPI, dev_name: string): Promise<MijiaDeviceWrapper | null> {\r\n  const response = await api.get_device_by_name(dev_name);\r\n  if (response.success && response.data) {\r\n    return new MijiaDeviceWrapper(api, response.data);\r\n  }\r\n  return null;\r\n}\r\n","import { ApiResponse, QRLoginResponse, QRStatusResponse, Device, DeviceAction } from '@/types';\nimport { mijiaAPI, mijiaAuth } from '@/lib/mijia';\n\nconst API_BASE = process.env.NODE_ENV === 'production' ? '' : '';\n\nclass ApiClient {\n  private async request<T>(\n    endpoint: string,\n    options: RequestInit = {}\n  ): Promise<ApiResponse<T>> {\n    try {\n      console.log('🌐 API Client: Making request to:', `${API_BASE}/api${endpoint}`);\n      console.log('📤 API Client: Request options:', {\n        method: options.method || 'GET',\n        headers: options.headers\n      });\n      \n      const response = await fetch(`${API_BASE}/api${endpoint}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...options.headers,\n        },\n        ...options,\n      });\n\n      console.log('📥 API Client: Response received:', {\n        status: response.status,\n        ok: response.ok,\n        statusText: response.statusText\n      });\n\n      const data = await response.json();\n      console.log('📊 API Client: Response data:', {\n        success: data.success,\n        hasData: !!data.data,\n        error: data.error\n      });\n      \n      return data;\n    } catch (error) {\n      console.error('❌ API Client: Request error:', error);\n      console.error('🔍 Error details:', {\n        message: error instanceof Error ? error.message : 'Unknown error',\n        stack: error instanceof Error ? error.stack : undefined\n      });\n      return {\n        success: false,\n        error: 'Network error occurred'\n      };\n    }\n  }\n\n\n  // Auth methods\n  async generateQR(): Promise<ApiResponse<QRLoginResponse>> {\n    console.log('🌐 API Client: Generating QR code...');\n    try {\n      const result = await this.request<QRLoginResponse>('/auth/qr', {\n      method: 'POST',\n    });\n      console.log('✅ API Client: QR generation result:', {\n        success: result.success,\n        hasData: !!result.data,\n        error: result.error\n      });\n      return result;\n    } catch (error) {\n      console.error('❌ API Client: QR generation error:', error);\n      return {\n        success: false,\n        error: 'Failed to generate QR code'\n      };\n    }\n  }\n\n  async checkQRStatus(qrId: string): Promise<ApiResponse<QRStatusResponse>> {\n    console.log('🔍 API Client: Checking QR status for ID:', qrId);\n    try {\n      const result = await this.request<QRStatusResponse>(`/auth/qr?qr_id=${qrId}`);\n      console.log('📥 API Client: QR status result:', {\n        success: result.success,\n        status: result.data?.status,\n        hasToken: !!result.data?.token,\n        hasUser: !!result.data?.user,\n        error: result.error\n      });\n      return result;\n    } catch (error) {\n      console.error('❌ API Client: QR status check error:', error);\n      return {\n        success: false,\n        error: 'Failed to check QR status'\n      };\n    }\n  }\n\n  // Device methods - sử dụng Mijia TypeScript API\n  async getDevices(): Promise<ApiResponse<Device[]>> {\n    try {\n      // Gọi Mijia API để lấy tất cả thiết bị bao gồm thiết bị được chia sẻ\n      const response = await mijiaAPI.get_all_devices();\n      \n      if (response.success && response.data) {\n        // Chuyển đổi dữ liệu từ Mijia API sang format của ứng dụng\n        const devices: Device[] = response.data.map((device: any) => ({\n          id: device.did || device.id,\n          name: device.name || 'Unknown Device',\n          type: this.mapDeviceType(device.model),\n          model: device.model || 'unknown',\n          online: device.is_online || false,\n          properties: device.properties || {},\n          room: device.room_name || 'Unknown Room'\n        }));\n        \n        return {\n          success: true,\n          data: devices\n        };\n      } else {\n        // Fallback to mock data if Mijia API fails\n        const mockDevices: Device[] = [\n          {\n            id: 'mock-device-1',\n            name: 'Mock Light',\n            type: 'light',\n            model: 'yeelink.light.lamp4',\n            online: true,\n            properties: {\n              on: true,\n              brightness: 80,\n              colorTemperature: 4000\n            },\n            room: 'Living Room'\n          },\n          {\n            id: 'mock-device-2', \n            name: 'Mock Sensor',\n            type: 'sensor',\n            model: 'miaomiaoce.sensor_ht.t1',\n            online: true,\n            properties: {\n              temperature: 25.5,\n              humidity: 60\n            },\n            room: 'Bedroom'\n          }\n        ];\n        \n        return {\n          success: true,\n          data: mockDevices\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Failed to get devices'\n      };\n    }\n  }\n\n  private mapDeviceType(model: string): string {\n    if (!model) return 'unknown';\n    \n    const modelLower = model.toLowerCase();\n    if (modelLower.includes('light') || modelLower.includes('lamp')) return 'light';\n    if (modelLower.includes('sensor') || modelLower.includes('ht')) return 'sensor';\n    if (modelLower.includes('camera')) return 'camera';\n    if (modelLower.includes('speaker')) return 'speaker';\n    if (modelLower.includes('switch')) return 'switch';\n    if (modelLower.includes('plug')) return 'plug';\n    \n    return 'unknown';\n  }\n\n  async getHomes(): Promise<ApiResponse<any[]>> {\n    console.log('🔍 API Client: Getting homes from Mijia API...');\n    try {\n      const response = await mijiaAPI.get_homes_list();\n      console.log('📥 Mijia API homes response:', response);\n      \n      if (response.success && response.data) {\n        return {\n          success: true,\n          data: response.data\n        };\n      } else {\n        console.log('⚠️ Mijia API failed, using mock data');\n        const mockHomes = [\n          {\n            id: 'mock-home-1',\n            name: 'My Home',\n            address: '123 Main St',\n            roomlist: [\n              { id: 'room-1', name: 'Living Room', dids: ['mock-device-1'] },\n              { id: 'room-2', name: 'Bedroom', dids: ['mock-device-2'] }\n            ]\n          }\n        ];\n        \n        return {\n          success: true,\n          data: mockHomes\n        };\n      }\n    } catch (error) {\n      console.error('❌ API Client: Get homes error:', error);\n      return {\n        success: false,\n        error: 'Failed to get homes'\n      };\n    }\n  }\n\n  async getScenes(homeId: string): Promise<ApiResponse<any[]>> {\n    console.log('🔍 API Client: Getting scenes for home:', homeId);\n    try {\n      const response = await mijiaAPI.get_scenes_list(homeId);\n      console.log('📥 Mijia API scenes response:', response);\n      \n      if (response.success && response.data) {\n        return {\n          success: true,\n          data: response.data\n        };\n      } else {\n        console.log('⚠️ Mijia API failed, using mock data');\n        const mockScenes = [\n          {\n            id: 'scene-1',\n            name: 'Good Morning',\n            description: 'Turn on lights and open curtains',\n            enabled: true,\n            homeId: homeId\n          },\n          {\n            id: 'scene-2', \n            name: 'Good Night',\n            description: 'Turn off all lights',\n            enabled: true,\n            homeId: homeId\n          }\n        ];\n        \n        return {\n          success: true,\n          data: mockScenes\n        };\n      }\n    } catch (error) {\n      console.error('❌ API Client: Get scenes error:', error);\n      return {\n        success: false,\n        error: 'Failed to get scenes'\n      };\n    }\n  }\n\n  async runScene(sceneId: string): Promise<ApiResponse> {\n    console.log('🔍 API Client: Running scene:', sceneId);\n    try {\n      const response = await mijiaAPI.run_scene(sceneId);\n      console.log('📥 Mijia API run scene response:', response);\n      \n      if (response.success) {\n        return {\n          success: true,\n          data: { message: `Scene ${sceneId} executed successfully` }\n        };\n      } else {\n        return {\n          success: false,\n          error: response.error || 'Failed to run scene'\n        };\n      }\n    } catch (error) {\n      console.error('❌ API Client: Run scene error:', error);\n      return {\n        success: false,\n        error: 'Failed to run scene'\n      };\n    }\n  }\n\n  async getDeviceProperties(deviceId: string): Promise<ApiResponse<any>> {\n    console.log('🔍 API Client: Getting device properties for:', deviceId);\n    try {\n      const response = await mijiaAPI.get_devices_prop({ did: deviceId });\n      console.log('📥 Mijia API device properties response:', response);\n      \n      if (response.success && response.data) {\n        return {\n          success: true,\n          data: response.data\n        };\n      } else {\n        console.log('⚠️ Mijia API failed, using mock data');\n        const mockProperties = {\n          on: true,\n          brightness: 80,\n          colorTemperature: 4000,\n          temperature: 25.5,\n          humidity: 60\n        };\n        \n        return {\n          success: true,\n          data: mockProperties\n        };\n      }\n    } catch (error) {\n      console.error('❌ API Client: Get device properties error:', error);\n      return {\n        success: false,\n        error: 'Failed to get device properties'\n      };\n    }\n  }\n\n  async updateDevice(deviceId: string, properties: Record<string, any>): Promise<ApiResponse> {\n    console.log('🔍 API Client: Updating device:', deviceId, properties);\n    try {\n      const response = await mijiaAPI.update_device({\n        device_id: deviceId,\n        properties: properties\n      });\n      console.log('📥 Mijia API update device response:', response);\n      \n      if (response.success) {\n        return {\n          success: true,\n          data: { message: `Device ${deviceId} updated successfully` }\n        };\n      } else {\n        return {\n          success: false,\n          error: response.error || 'Failed to update device'\n        };\n      }\n    } catch (error) {\n      console.error('❌ API Client: Update device error:', error);\n      return {\n        success: false,\n        error: 'Failed to update device'\n      };\n    }\n  }\n\n  async executeDeviceAction(deviceId: string, action: DeviceAction): Promise<ApiResponse> {\n    console.log('🔍 API Client: Executing device action:', deviceId, action);\n    try {\n      const response = await mijiaAPI.run_action({\n        device_id: deviceId,\n        action: action.action || 'set_property',\n        params: action.params || []\n      });\n      console.log('📥 Mijia API execute action response:', response);\n      \n      if (response.success) {\n        return {\n          success: true,\n          data: { message: `Action ${action.action} executed successfully on device ${deviceId}` }\n        };\n      } else {\n        return {\n          success: false,\n          error: response.error || 'Failed to execute device action'\n        };\n      }\n    } catch (error) {\n      console.error('❌ API Client: Execute device action error:', error);\n      return {\n        success: false,\n        error: 'Failed to execute device action'\n      };\n    }\n  }\n\n  // Mijia login methods\n  async loginWithCredentials(username: string, password: string): Promise<ApiResponse> {\n    console.log('🔍 API Client: Login with credentials:', username);\n    try {\n      const response = await mijiaAuth.login(username, password);\n      console.log('📥 Mijia Auth login response:', response);\n      \n      if (response.success) {\n        // Set session for mijiaAPI\n        mijiaAPI.setSession(response.data);\n        return {\n          success: true,\n          data: response.data\n        };\n      } else {\n        return {\n          success: false,\n          error: response.error || 'Login failed'\n        };\n      }\n    } catch (error) {\n      console.error('❌ API Client: Login with credentials error:', error);\n      return {\n        success: false,\n        error: 'Login failed'\n      };\n    }\n  }\n\n  async loginWithQR(): Promise<ApiResponse> {\n    console.log('🔍 API Client: Login with QR');\n    try {\n      const response = await mijiaAuth.QRlogin();\n      console.log('📥 Mijia Auth QR login response:', response);\n      \n      if (response.success) {\n        // Set session for mijiaAPI\n        mijiaAPI.setSession(response.data);\n        return {\n          success: true,\n          data: response.data\n        };\n      } else {\n        return {\n          success: false,\n          error: response.error || 'QR Login failed'\n        };\n      }\n    } catch (error) {\n      console.error('❌ API Client: Login with QR error:', error);\n      return {\n        success: false,\n        error: 'QR Login failed'\n      };\n    }\n  }\n}\n\nexport const apiClient = new ApiClient();\n\n","import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { User, Device } from '@/types';\nimport { apiClient } from './api';\nimport { mijiaAPI } from './mijia';\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  mijiaSession: any | null;\n  login: (token: string, user: User, mijiaSession?: any) => void;\n  logout: () => void;\n}\n\ninterface DeviceState {\n  devices: Device[];\n  loading: boolean;\n  error: string | null;\n  fetchDevices: () => Promise<void>;\n  updateDevice: (deviceId: string, properties: Record<string, any>) => Promise<void>;\n  setError: (error: string | null) => void;\n}\n\nexport const useAuthStore = create<AuthState>()(\n  persist(\n    (set) => ({\n      user: null,\n      token: null,\n      isAuthenticated: false,\n      mijiaSession: null,\n      login: (token: string, user: User, mijiaSession?: any) => {\n        const userWithSession = { ...user, mijiaSession };\n        set({ token, user: userWithSession, isAuthenticated: true, mijiaSession });\n        // Set session for Mijia API\n        if (mijiaSession) {\n          mijiaAPI.setSession(mijiaSession);\n        }\n      },\n      logout: () => {\n        set({ token: null, user: null, isAuthenticated: false, mijiaSession: null });\n        // Clear Mijia API session\n        mijiaAPI.setSession(null);\n      },\n    }),\n    {\n      name: 'auth-storage',\n    }\n  )\n);\n\nexport const useDeviceStore = create<DeviceState>()((set, get) => ({\n  devices: [],\n  loading: false,\n  error: null,\n  \n  fetchDevices: async () => {\n    set({ loading: true, error: null });\n    try {\n      const response = await apiClient.getDevices();\n      if (response.success && response.data) {\n        set({ devices: response.data, loading: false });\n      } else {\n        set({ error: response.error || 'Failed to fetch devices', loading: false });\n      }\n    } catch (error) {\n      set({ error: 'Network error', loading: false });\n    }\n  },\n  \n  updateDevice: async (deviceId: string, properties: Record<string, any>) => {\n    try {\n      const response = await apiClient.updateDevice(deviceId, properties);\n      if (response.success) {\n        // Update local state\n        const devices = get().devices.map(device => \n          device.id === deviceId \n            ? { ...device, properties: { ...device.properties, ...properties } }\n            : device\n        );\n        set({ devices });\n      } else {\n        set({ error: response.error || 'Failed to update device' });\n      }\n    } catch (error) {\n      set({ error: 'Network error' });\n    }\n  },\n  \n  setError: (error: string | null) => {\n    set({ error });\n  },\n}));\n\n"],"names":["getSegmentValue","segment","Array","isArray","DEFAULT_SEGMENT_KEY","PAGE_SEGMENT_KEY","addSearchParamsIfPageSegment","isGroupSegment","isParallelRouteSegment","endsWith","startsWith","searchParams","isPageSegment","includes","stringifiedQuery","JSON","stringify","RedirectStatusCode","REDIRECT_ERROR_CODE","RedirectType","isRedirectError","error","digest","split","errorCode","type","destination","slice","join","status","at","statusCode","Number","isNaN","getRedirectError","getRedirectStatusCodeFromError","getRedirectTypeFromError","getURLFromRedirectError","permanentRedirect","redirect","actionAsyncStorage","window","require","undefined","url","TemporaryRedirect","Error","getStore","isAction","push","replace","PermanentRedirect","HTTPAccessErrorStatus","HTTP_ERROR_FALLBACK_ERROR_CODE","getAccessFallbackErrorTypeByStatus","getAccessFallbackHTTPStatus","isHTTPAccessFallbackError","NOT_FOUND","FORBIDDEN","UNAUTHORIZED","ALLOWED_CODES","Set","Object","values","prefix","httpStatus","has","notFound","DIGEST","forbidden","process","env","__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS","unauthorized","isHangingPromiseRejectionError","makeDevtoolsIOAwarePromise","makeHangingPromise","err","HANGING_PROMISE_REJECTION","HangingPromiseRejectionError","constructor","route","expression","abortListenersBySignal","WeakMap","signal","aborted","Promise","reject","hangingPromise","_","boundRejection","bind","currentListeners","get","listeners","set","addEventListener","i","length","once","catch","ignoreReject","underlying","resolve","setTimeout","isPostpone","REACT_POSTPONE_TYPE","Symbol","for","$$typeof","BailoutToCSRError","isBailoutToCSRError","BAILOUT_TO_CSR","reason","isNextRouterError","DynamicServerError","isDynamicServerError","DYNAMIC_ERROR_CODE","description","StaticGenBailoutError","isStaticGenBailoutError","NEXT_STATIC_GEN_BAILOUT","code","METADATA_BOUNDARY_NAME","OUTLET_BOUNDARY_NAME","ROOT_LAYOUT_BOUNDARY_NAME","VIEWPORT_BOUNDARY_NAME","atLeastOneTask","scheduleImmediate","scheduleOnNextTick","waitAtLeastOneReactRenderTask","cb","then","NEXT_RUNTIME","nextTick","setImmediate","r","InvariantError","message","options","name","Postpone","PreludeState","abortAndThrowOnSynchronousRequestDataAccess","abortOnSynchronousPlatformIOAccess","accessedDynamicData","annotateDynamicAccess","consumeDynamicAccess","createDynamicTrackingState","createDynamicValidationState","createHangingInputAbortSignal","createRenderInBrowserAbortSignal","delayUntilRuntimeStage","formatDynamicAPIAccesses","getFirstDynamicReason","isDynamicPostpone","isPrerenderInterruptedError","logDisallowedDynamicError","markCurrentScopeAsDynamic","postponeWithTracking","throwIfDisallowedDynamic","throwToInterruptStaticGeneration","trackAllowedDynamicAccess","trackDynamicDataInDynamicRender","trackSynchronousPlatformIOAccessInDev","trackSynchronousRequestDataAccessInDev","useDynamicRouteParams","warnOnSyncDynamicError","hasPostpone","React","unstable_postpone","isDebugDynamicAccesses","dynamicAccesses","syncDynamicErrorWithStack","hasSuspenseAboveBody","hasDynamicMetadata","hasDynamicViewport","hasAllowedDynamic","dynamicErrors","trackingState","store","workUnitStore","forceDynamic","forceStatic","dynamicShouldError","dynamicTracking","revalidate","dynamicUsageDescription","dynamicUsageStack","stack","NODE_ENV","usedDynamic","prerenderStore","abortOnSynchronousDynamicDataAccess","createPrerenderInterruptedError","controller","abort","errorWithStack","requestStore","prerenderPhase","prerenderSignal","console","workUnitAsyncStorage","assertPostpone","createPostponeReason","isDynamicPostponeReason","NEXT_PRERENDER_INTERRUPTED","serverDynamic","clientDynamic","filter","access","map","line","AbortController","cacheSignal","inputReady","runtimeStagePromise","getRuntimeStagePromise","workStore","workAsyncStorage","fallbackParams","fallbackRouteParams","size","use","renderSignal","hasSuspenseRegex","bodyAndImplicitTags","hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex","RegExp","hasMetadataRegex","hasViewportRegex","hasOutletRegex","componentStack","dynamicValidation","test","createErrorWithComponentOrOwnerStack","ownerStack","captureOwnerStack","dev","hasReadableErrorStacks","prelude","result","unstable_rethrow","cause","ReadonlyURLSearchParams","unstable_isUnrecognizedActionError","ReadonlyURLSearchParamsError","URLSearchParams","append","delete","sort","UnrecognizedActionError","args","bailoutToClientRendering","ServerInsertedHTMLContext","useParams","usePathname","useRouter","useSearchParams","useSelectedLayoutSegment","useSelectedLayoutSegments","useServerInsertedHTML","useContext","SearchParamsContext","readonlySearchParams","useMemo","PathnameContext","router","AppRouterContext","PathParamsContext","getSelectedLayoutSegmentPath","tree","parallelRouteKey","first","segmentPath","node","parallelRoutes","children","segmentValue","context","LayoutRouterContext","parentTree","selectedLayoutSegments","selectedLayoutSegment"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]}