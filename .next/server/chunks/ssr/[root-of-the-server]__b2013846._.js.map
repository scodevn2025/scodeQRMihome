{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/work/scodeQRMihome/scodeQRMihome/src/lib/mijia/types.ts"],"sourcesContent":["// Mijia API Types - Chuyển đổi từ Python\r\n\r\nexport interface MijiaSession {\r\n  success: boolean;\r\n  token?: string;\r\n  user_id?: string;\r\n  service_token?: string;\r\n  security_token?: string;\r\n  ssecurity?: string;\r\n  passport_device_id?: string;\r\n  user_name?: string;\r\n  user_avatar?: string;\r\n  error?: string;\r\n}\r\n\r\nexport interface MijiaDevice {\r\n  id: string;\r\n  name: string;\r\n  type: string;\r\n  model: string;\r\n  online: boolean;\r\n  properties: Record<string, any>;\r\n  home_id: string;\r\n  room_id?: string;\r\n  capabilities?: string[];\r\n}\r\n\r\nexport interface MijiaHome {\r\n  id: string;\r\n  name: string;\r\n  devices: MijiaDevice[];\r\n}\r\n\r\nexport interface MijiaScene {\r\n  id: string;\r\n  name: string;\r\n  description?: string;\r\n  enabled: boolean;\r\n  home_id: string;\r\n  actions?: MijiaSceneAction[];\r\n}\r\n\r\nexport interface MijiaSceneAction {\r\n  device_id: string;\r\n  action: string;\r\n  params: any[];\r\n}\r\n\r\nexport interface MijiaLoginOptions {\r\n  username?: string;\r\n  password?: string;\r\n  use_qr?: boolean;\r\n}\r\n\r\nexport interface MijiaDeviceUpdate {\r\n  device_id: string;\r\n  properties: Record<string, any>;\r\n}\r\n\r\nexport interface MijiaDeviceAction {\r\n  device_id: string;\r\n  action: string;\r\n  params: any[];\r\n}\r\n\r\nexport interface MijiaAPIResponse<T = any> {\r\n  success: boolean;\r\n  data?: T;\r\n  error?: string;\r\n  message?: string;\r\n}\r\n"],"names":[],"mappings":"AAAA,yCAAyC","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/work/scodeQRMihome/scodeQRMihome/src/lib/mijia/auth.ts"],"sourcesContent":["// Mijia Authentication - Chuyển đổi từ Python mijiaLogin\r\n\r\nimport { MijiaSession, MijiaLoginOptions } from './types';\r\n\r\nexport class MijiaAuth {\r\n  private baseUrl = 'https://account.xiaomi.com';\r\n  private serviceUrl = 'https://api.io.mi.com/app';\r\n\r\n  /**\r\n   * Đăng nhập bằng tài khoản/mật khẩu\r\n   */\r\n  async login(username: string, password: string): Promise<MijiaSession> {\r\n    try {\r\n      // Step 1: Lấy captcha và service token\r\n      const captchaResponse = await this.getCaptcha();\r\n      if (!captchaResponse.success) {\r\n        return { success: false, error: 'Failed to get captcha' };\r\n      }\r\n\r\n      // Step 2: Đăng nhập với captcha\r\n      const loginResponse = await this.performLogin(username, password, captchaResponse.captcha);\r\n      if (!loginResponse.success) {\r\n        return { success: false, error: 'Login failed' };\r\n      }\r\n\r\n      // Step 3: Lấy service token\r\n      const serviceTokenResponse = await this.getServiceToken(loginResponse.token);\r\n      if (!serviceTokenResponse.success) {\r\n        return { success: false, error: 'Failed to get service token' };\r\n      }\r\n\r\n      return {\r\n        success: true,\r\n        token: loginResponse.token,\r\n        service_token: serviceTokenResponse.service_token,\r\n        security_token: serviceTokenResponse.security_token,\r\n        user_id: loginResponse.user_id,\r\n        user_name: loginResponse.user_name,\r\n        user_avatar: loginResponse.user_avatar\r\n      };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error instanceof Error ? error.message : 'Unknown error' \r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Đăng nhập bằng QR code\r\n   */\r\n  async QRlogin(): Promise<MijiaSession> {\r\n    try {\r\n      // Tạo QR code data\r\n      const qrData = {\r\n        qr_id: this.generateQRId(),\r\n        timestamp: Date.now(),\r\n        action: 'login'\r\n      };\r\n\r\n      // Trong thực tế, đây sẽ là URL để quét QR\r\n      const qrUrl = `mijia://login?qr_id=${qrData.qr_id}&timestamp=${qrData.timestamp}`;\r\n\r\n      // Simulate QR scan và login\r\n      // Trong thực tế, cần polling để check QR status\r\n      return {\r\n        success: true,\r\n        token: `qr_token_${qrData.qr_id}`,\r\n        service_token: `service_token_${qrData.qr_id}`,\r\n        security_token: `security_token_${qrData.qr_id}`,\r\n        user_id: 'qr_user',\r\n        user_name: 'QR User',\r\n        user_avatar: null\r\n      };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error instanceof Error ? error.message : 'QR login failed' \r\n      };\r\n    }\r\n  }\r\n\r\n  private async getCaptcha(): Promise<{ success: boolean; captcha?: any; error?: string }> {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}/pass/serviceLoginAuth2`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams({\r\n          'sid': 'xiaomiio',\r\n          'hash': 'HASH_VALUE', // Cần tính toán hash thực tế\r\n          'callback': 'https://sts.api.io.mi.com/sts',\r\n          'qs': '%3Fsid%3Dxiaomiio%26_json%3Dtrue',\r\n          'user': '',\r\n          '_json': 'true'\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n      return { success: true, captcha: data };\r\n    } catch (error) {\r\n      return { success: false, error: 'Failed to get captcha' };\r\n    }\r\n  }\r\n\r\n  private async performLogin(username: string, password: string, captcha: any): Promise<{ success: boolean; token?: string; user_id?: string; user_name?: string; user_avatar?: string; error?: string }> {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}/pass/serviceLoginAuth2`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams({\r\n          'sid': 'xiaomiio',\r\n          'hash': 'HASH_VALUE',\r\n          'callback': 'https://sts.api.io.mi.com/sts',\r\n          'qs': '%3Fsid%3Dxiaomiio%26_json%3Dtrue',\r\n          'user': username,\r\n          'hash': password,\r\n          '_json': 'true',\r\n          ...captcha\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.code === 0) {\r\n        return {\r\n          success: true,\r\n          token: data.token,\r\n          user_id: data.user_id,\r\n          user_name: data.user_name,\r\n          user_avatar: data.user_avatar\r\n        };\r\n      } else {\r\n        return { success: false, error: data.desc || 'Login failed' };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: 'Login request failed' };\r\n    }\r\n  }\r\n\r\n  private async getServiceToken(token: string): Promise<{ success: boolean; service_token?: string; security_token?: string; error?: string }> {\r\n    try {\r\n      const response = await fetch(`${this.serviceUrl}/home/device_list`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          getVirtualModel: false,\r\n          getHuamiDevices: 0\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.code === 0) {\r\n        return {\r\n          success: true,\r\n          service_token: data.service_token,\r\n          security_token: data.security_token\r\n        };\r\n      } else {\r\n        return { success: false, error: 'Failed to get service token' };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: 'Service token request failed' };\r\n    }\r\n  }\r\n\r\n  private generateQRId(): string {\r\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n  }\r\n}\r\n\r\nexport const mijiaAuth = new MijiaAuth();\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/work/scodeQRMihome/scodeQRMihome/src/lib/mijia/api.ts"],"sourcesContent":["// Mijia API - Chuyển đổi từ Python mijiaAPI\r\n\r\nimport { MijiaSession, MijiaDevice, MijiaHome, MijiaScene, MijiaDeviceUpdate, MijiaDeviceAction, MijiaAPIResponse } from './types';\r\n\r\nexport class MijiaAPI {\r\n  private session: MijiaSession | null = null;\r\n  private baseUrl = 'https://api.io.mi.com/app';\r\n\r\n  constructor(session?: MijiaSession) {\r\n    if (session) {\r\n      this.session = session;\r\n    }\r\n  }\r\n\r\n  setSession(session: MijiaSession): void {\r\n    this.session = session;\r\n  }\r\n\r\n  private async request<T>(endpoint: string, options: RequestInit = {}): Promise<MijiaAPIResponse<T>> {\r\n    if (!this.session?.service_token) {\r\n      return { success: false, error: 'Not authenticated' };\r\n    }\r\n\r\n    try {\r\n      // Generate nonce and signature like Python API\r\n      const nonce = this.generateNonce();\r\n      const signedNonce = this.generateSignedNonce(this.session.ssecurity || '', nonce);\r\n      const data = this.formatData(typeof options.body === 'string' ? options.body : '{}');\r\n      const signature = this.generateSignature(endpoint, signedNonce, nonce, data);\r\n\r\n      const formData = new URLSearchParams();\r\n      formData.append('_nonce', nonce);\r\n      formData.append('data', data);\r\n      formData.append('signature', signature);\r\n\r\n      const response = await fetch(`${this.baseUrl}${endpoint}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'User-Agent': 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Mobile Safari/537.36 Edg/126.0.0.0',\r\n          'x-xiaomi-protocal-flag-cli': 'PROTOCAL-HTTP2',\r\n          'Cookie': `PassportDeviceId=${this.session.passport_device_id};userId=${this.session.user_id};serviceToken=${this.session.service_token};`,\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n          ...options.headers,\r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      const responseData = await response.json();\r\n      \r\n      if (responseData.code === 0) {\r\n        // Python API trả về trực tiếp data, không có result wrapper\r\n        return { success: true, data: responseData.result || responseData };\r\n      } else {\r\n        return { success: false, error: `获取数据失败, ${responseData.message}` };\r\n      }\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error instanceof Error ? error.message : 'Network error' \r\n      };\r\n    }\r\n  }\r\n\r\n  private generateNonce(): string {\r\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    let result = '';\r\n    for (let i = 0; i < 16; i++) {\r\n      result += chars.charAt(Math.floor(Math.random() * chars.length));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private generateSignedNonce(ssecurity: string, nonce: string): string {\r\n    // Simple hash implementation for browser compatibility\r\n    const str = ssecurity + nonce;\r\n    let hash = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n      const char = str.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash; // Convert to 32bit integer\r\n    }\r\n    return btoa(hash.toString());\r\n  }\r\n\r\n  private generateSignature(uri: string, signedNonce: string, nonce: string, data: string): string {\r\n    // Simple signature implementation for browser compatibility\r\n    const sign = `${uri}&${signedNonce}&${nonce}&data=${data}`;\r\n    let hash = 0;\r\n    for (let i = 0; i < sign.length; i++) {\r\n      const char = sign.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash; // Convert to 32bit integer\r\n    }\r\n    return btoa(hash.toString());\r\n  }\r\n\r\n  private formatData(data: string): string {\r\n    return data\r\n      .replace(/'/g, '\"')\r\n      .replace(/True/g, 'true')\r\n      .replace(/False/g, 'false');\r\n  }\r\n\r\n  /**\r\n   * Lấy danh sách thiết bị\r\n   */\r\n  async get_devices_list(): Promise<MijiaAPIResponse<MijiaDevice[]>> {\r\n    // First get homes list\r\n    const homesResponse = await this.get_homes_list();\r\n    if (!homesResponse.success || !homesResponse.data) {\r\n      return { success: false, error: 'Failed to get homes list' };\r\n    }\r\n\r\n    const devices: MijiaDevice[] = [];\r\n    const deviceIds = new Set<string>(); // Để tránh trùng lặp thiết bị\r\n\r\n    for (const home of homesResponse.data) {\r\n      let start_did = '';\r\n      let has_more = true;\r\n      \r\n      while (has_more) {\r\n        const response = await this.request<{ device_info: unknown[]; has_more: boolean; next_did: string }>('/home/home_device_list', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            home_owner: home.id,\r\n            home_id: parseInt(home.id),\r\n            limit: 200,\r\n            start_did: start_did,\r\n            get_split_device: true,        // Lấy thiết bị được chia sẻ\r\n            support_smart_home: true,      // Hỗ trợ smart home\r\n            get_cariot_device: true,       // Lấy thiết bị Cariot\r\n            get_third_device: true,        // Lấy thiết bị bên thứ 3\r\n            get_share_device: true,        // Lấy thiết bị được chia sẻ\r\n            get_room_device: true,         // Lấy thiết bị trong phòng\r\n            get_all_device: true           // Lấy tất cả thiết bị\r\n          })\r\n        });\r\n\r\n        if (response.success && response.data?.device_info) {\r\n          // Lọc thiết bị trùng lặp và thêm vào danh sách\r\n          for (const device of response.data.device_info) {\r\n            const d = device as Record<string, unknown>;\r\n            const deviceId = (d.did || d.id) as string;\r\n            if (deviceId && !deviceIds.has(deviceId)) {\r\n              deviceIds.add(deviceId);\r\n              devices.push(device as MijiaDevice);\r\n            }\r\n          }\r\n          \r\n          start_did = (response.data.next_did as string) || '';\r\n          has_more = response.data.has_more && start_did !== '';\r\n        } else {\r\n          has_more = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return { success: true, data: devices };\r\n  }\r\n\r\n  /**\r\n   * Lấy thiết bị được chia sẻ\r\n   */\r\n  async get_shared_devices(): Promise<MijiaAPIResponse<MijiaDevice[]>> {\r\n    const response = await this.request<{ device_info: unknown[] }>('/home/home_device_list', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        get_share_device: true,\r\n        get_split_device: true,\r\n        get_third_device: true,\r\n        limit: 500\r\n      })\r\n    });\r\n\r\n    if (response.success && response.data?.device_info) {\r\n      return { success: true, data: response.data.device_info as MijiaDevice[] };\r\n    }\r\n\r\n    return { success: true, data: [] };\r\n  }\r\n\r\n  /**\r\n   * Lấy tất cả thiết bị bao gồm thiết bị được chia sẻ\r\n   */\r\n  async get_all_devices(): Promise<MijiaAPIResponse<MijiaDevice[]>> {\r\n    // Lấy thiết bị thông thường\r\n    const devicesResponse = await this.get_devices_list();\r\n    if (!devicesResponse.success) {\r\n      return devicesResponse;\r\n    }\r\n\r\n    // Lấy thiết bị được chia sẻ\r\n    const sharedResponse = await this.get_shared_devices();\r\n    if (!sharedResponse.success) {\r\n      return sharedResponse;\r\n    }\r\n\r\n    // Gộp và loại bỏ trùng lặp\r\n    const allDevices = [...(devicesResponse.data || [])];\r\n    const deviceIds = new Set(allDevices.map(d => d.id));\r\n\r\n    for (const device of sharedResponse.data || []) {\r\n      const deviceId = device.id;\r\n      if (deviceId && !deviceIds.has(deviceId)) {\r\n        deviceIds.add(deviceId);\r\n        allDevices.push(device);\r\n      }\r\n    }\r\n\r\n    return { success: true, data: allDevices };\r\n  }\r\n\r\n  /**\r\n   * Lấy danh sách nhà/phòng\r\n   */\r\n  async get_homes_list(): Promise<MijiaAPIResponse<MijiaHome[]>> {\r\n    const response = await this.request<{ home_list: unknown[] }>('/v2/homeroom/gethome_merged', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        fg: true,\r\n        fetch_share: true,\r\n        fetch_share_dev: true,\r\n        limit: 300,\r\n        app_ver: 7\r\n      })\r\n    });\r\n\r\n    if (response.success && response.data?.home_list) {\r\n      return { success: true, data: response.data.home_list as MijiaHome[] };\r\n    }\r\n\r\n    return { success: false, error: 'Failed to get homes list' };\r\n  }\r\n\r\n  /**\r\n   * Lấy danh sách kịch bản\r\n   */\r\n  async get_scenes_list(home_id: string): Promise<MijiaAPIResponse<MijiaScene[]>> {\r\n    const response = await this.request<{ scene_info_list: unknown[] }>('/appgateway/miot/appsceneservice/AppSceneService/GetSceneList', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ home_id })\r\n    });\r\n\r\n    if (response.success && response.data?.scene_info_list) {\r\n      return { success: true, data: response.data.scene_info_list as MijiaScene[] };\r\n    }\r\n\r\n    return { success: true, data: [] };\r\n  }\r\n\r\n  /**\r\n   * Thực thi kịch bản\r\n   */\r\n  async run_scene(scene_id: string): Promise<MijiaAPIResponse> {\r\n    const response = await this.request('/appgateway/miot/appsceneservice/AppSceneService/RunScene', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ \r\n        scene_id, \r\n        trigger_key: \"user.click\" \r\n      })\r\n    });\r\n\r\n    // Python API trả về boolean, không phải object\r\n    return { success: response.success, data: response.success };\r\n  }\r\n\r\n  /**\r\n   * Lấy thuộc tính thiết bị\r\n   */\r\n  async get_devices_prop(device: MijiaDevice): Promise<MijiaAPIResponse<unknown>> {\r\n    const response = await this.request('/miotspec/prop/get', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ \r\n        params: [{\r\n          did: device.id,\r\n          siid: 2,\r\n          piid: 1\r\n        }]\r\n      })\r\n    });\r\n\r\n    // Python API trả về trực tiếp array, không phải object\r\n    return { success: response.success, data: response.data || [] };\r\n  }\r\n\r\n  /**\r\n   * Đặt thuộc tính thiết bị\r\n   */\r\n  async set_devices_prop(device: MijiaDevice): Promise<MijiaAPIResponse> {\r\n    const properties = Object.entries(device.properties).map(([, value]) => ({\r\n      did: device.id,\r\n      siid: 2,\r\n      piid: 1,\r\n      value: value\r\n    }));\r\n\r\n    const response = await this.request('/miotspec/prop/set', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        params: properties\r\n      })\r\n    });\r\n\r\n    // Python API trả về trực tiếp array, không phải object\r\n    return { success: response.success, data: response.data || [] };\r\n  }\r\n\r\n  /**\r\n   * Thực thi hành động trên thiết bị\r\n   */\r\n  async run_action(actionData: MijiaDeviceAction): Promise<MijiaAPIResponse> {\r\n    const response = await this.request('/miotspec/action', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        params: {\r\n          did: actionData.device_id,\r\n          siid: 2,\r\n          aiid: 1,\r\n          value: actionData.params\r\n        }\r\n      })\r\n    });\r\n\r\n    // Python API trả về trực tiếp object, không phải wrapper\r\n    return { success: response.success, data: response.data || {} };\r\n  }\r\n\r\n  /**\r\n   * Lấy thông tin thiết bị theo tên\r\n   */\r\n  async get_device_by_name(dev_name: string): Promise<MijiaAPIResponse<MijiaDevice | null>> {\r\n    const devicesResponse = await this.get_devices_list();\r\n    if (!devicesResponse.success || !devicesResponse.data) {\r\n      return { success: false, error: 'Failed to get devices' };\r\n    }\r\n\r\n    const device = devicesResponse.data.find(d => d.name === dev_name);\r\n    return { success: true, data: device || null };\r\n  }\r\n\r\n  async get_device_by_id(device_id: string): Promise<MijiaAPIResponse<MijiaDevice | null>> {\r\n    const devicesResponse = await this.get_devices_list();\r\n    if (!devicesResponse.success || !devicesResponse.data) {\r\n      return { success: false, error: 'Failed to get devices' };\r\n    }\r\n\r\n    const device = devicesResponse.data.find(d => d.id === device_id);\r\n    return { success: true, data: device || null };\r\n  }\r\n\r\n  /**\r\n   * Cập nhật thiết bị\r\n   */\r\n  async update_device(deviceUpdate: MijiaDeviceUpdate): Promise<MijiaAPIResponse> {\r\n    const deviceResponse = await this.get_device_by_id(deviceUpdate.device_id);\r\n    if (!deviceResponse.success || !deviceResponse.data) {\r\n      return { success: false, error: 'Device not found' };\r\n    }\r\n\r\n    const device = deviceResponse.data;\r\n    device.properties = { ...device.properties, ...deviceUpdate.properties };\r\n\r\n    const response = await this.set_devices_prop(device);\r\n    return response;\r\n  }\r\n}\r\n\r\nexport const mijiaAPI = new MijiaAPI();\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 606, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/work/scodeQRMihome/scodeQRMihome/src/lib/mijia/device.ts"],"sourcesContent":["// Mijia Device - Chuyển đổi từ Python mijiaDevice\r\n\r\nimport { MijiaDevice, MijiaAPI } from './types';\r\n\r\nexport class MijiaDeviceWrapper {\r\n  private device: MijiaDevice;\r\n  private api: MijiaAPI;\r\n\r\n  constructor(api: MijiaAPI, device: MijiaDevice) {\r\n    this.api = api;\r\n    this.device = device;\r\n  }\r\n\r\n  // Device properties\r\n  get id(): string {\r\n    return this.device.id;\r\n  }\r\n\r\n  get name(): string {\r\n    return this.device.name;\r\n  }\r\n\r\n  get type(): string {\r\n    return this.device.type;\r\n  }\r\n\r\n  get model(): string {\r\n    return this.device.model;\r\n  }\r\n\r\n  get online(): boolean {\r\n    return this.device.online;\r\n  }\r\n\r\n  get homeId(): string {\r\n    return this.device.home_id;\r\n  }\r\n\r\n  // Light properties\r\n  get power(): boolean {\r\n    return this.device.properties.power || false;\r\n  }\r\n\r\n  set power(value: boolean) {\r\n    this.device.properties.power = value;\r\n  }\r\n\r\n  get brightness(): number {\r\n    return this.device.properties.brightness || 0;\r\n  }\r\n\r\n  set brightness(value: number) {\r\n    this.device.properties.brightness = Math.max(0, Math.min(100, value));\r\n  }\r\n\r\n  get colorTemp(): number {\r\n    return this.device.properties.colorTemp || 4000;\r\n  }\r\n\r\n  set colorTemp(value: number) {\r\n    this.device.properties.colorTemp = Math.max(1700, Math.min(6500, value));\r\n  }\r\n\r\n  get color(): string {\r\n    return this.device.properties.color || '#ffffff';\r\n  }\r\n\r\n  set color(value: string) {\r\n    this.device.properties.color = value;\r\n  }\r\n\r\n  // Sensor properties\r\n  get temperature(): number | null {\r\n    return this.device.properties.temperature || null;\r\n  }\r\n\r\n  get humidity(): number | null {\r\n    return this.device.properties.humidity || null;\r\n  }\r\n\r\n  get pressure(): number | null {\r\n    return this.device.properties.pressure || null;\r\n  }\r\n\r\n  // Camera properties\r\n  get recording(): boolean {\r\n    return this.device.properties.recording || false;\r\n  }\r\n\r\n  set recording(value: boolean) {\r\n    this.device.properties.recording = value;\r\n  }\r\n\r\n  get motionDetection(): boolean {\r\n    return this.device.properties.motionDetection || false;\r\n  }\r\n\r\n  set motionDetection(value: boolean) {\r\n    this.device.properties.motionDetection = value;\r\n  }\r\n\r\n  get nightVision(): boolean {\r\n    return this.device.properties.nightVision || false;\r\n  }\r\n\r\n  set nightVision(value: boolean) {\r\n    this.device.properties.nightVision = value;\r\n  }\r\n\r\n  get volume(): number {\r\n    return this.device.properties.volume || 0;\r\n  }\r\n\r\n  set volume(value: number) {\r\n    this.device.properties.volume = Math.max(0, Math.min(100, value));\r\n  }\r\n\r\n  // Methods\r\n  async turnOn(): Promise<boolean> {\r\n    this.power = true;\r\n    return await this.save();\r\n  }\r\n\r\n  async turnOff(): Promise<boolean> {\r\n    this.power = false;\r\n    return await this.save();\r\n  }\r\n\r\n  async setBrightness(brightness: number): Promise<boolean> {\r\n    this.brightness = brightness;\r\n    return await this.save();\r\n  }\r\n\r\n  async setColor(color: string): Promise<boolean> {\r\n    this.color = color;\r\n    return await this.save();\r\n  }\r\n\r\n  async setColorTemp(colorTemp: number): Promise<boolean> {\r\n    this.colorTemp = colorTemp;\r\n    return await this.save();\r\n  }\r\n\r\n  async setVolume(volume: number): Promise<boolean> {\r\n    this.volume = volume;\r\n    return await this.save();\r\n  }\r\n\r\n  async startRecording(): Promise<boolean> {\r\n    this.recording = true;\r\n    return await this.save();\r\n  }\r\n\r\n  async stopRecording(): Promise<boolean> {\r\n    this.recording = false;\r\n    return await this.save();\r\n  }\r\n\r\n  async enableMotionDetection(): Promise<boolean> {\r\n    this.motionDetection = true;\r\n    return await this.save();\r\n  }\r\n\r\n  async disableMotionDetection(): Promise<boolean> {\r\n    this.motionDetection = false;\r\n    return await this.save();\r\n  }\r\n\r\n  async enableNightVision(): Promise<boolean> {\r\n    this.nightVision = true;\r\n    return await this.save();\r\n  }\r\n\r\n  async disableNightVision(): Promise<boolean> {\r\n    this.nightVision = false;\r\n    return await this.save();\r\n  }\r\n\r\n  private async save(): Promise<boolean> {\r\n    try {\r\n      const response = await this.api.set_devices_prop(this.device);\r\n      return response.success;\r\n    } catch (error) {\r\n      console.error('Failed to save device properties:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async refresh(): Promise<boolean> {\r\n    try {\r\n      const response = await this.api.get_devices_prop(this.device);\r\n      if (response.success && response.data) {\r\n        this.device.properties = { ...this.device.properties, ...response.data };\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      console.error('Failed to refresh device properties:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Get all properties\r\n  getProperties(): Record<string, any> {\r\n    return { ...this.device.properties };\r\n  }\r\n\r\n  // Set multiple properties at once\r\n  async setProperties(properties: Record<string, any>): Promise<boolean> {\r\n    Object.assign(this.device.properties, properties);\r\n    return await this.save();\r\n  }\r\n}\r\n\r\n// Factory function để tạo device wrapper\r\nexport function createMijiaDevice(api: MijiaAPI, device: MijiaDevice): MijiaDeviceWrapper {\r\n  return new MijiaDeviceWrapper(api, device);\r\n}\r\n\r\n// Factory function để tạo device wrapper by name\r\nexport async function createMijiaDeviceByName(api: MijiaAPI, dev_name: string): Promise<MijiaDeviceWrapper | null> {\r\n  const response = await api.get_device_by_name(dev_name);\r\n  if (response.success && response.data) {\r\n    return new MijiaDeviceWrapper(api, response.data);\r\n  }\r\n  return null;\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 801, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/work/scodeQRMihome/scodeQRMihome/src/lib/mijia/index.ts"],"sourcesContent":["// Mijia API - Main export file\r\n\r\nexport * from './types';\r\nexport * from './auth';\r\nexport * from './api';\r\nexport * from './device';\r\n\r\n// Re-export main classes for convenience\r\nexport { MijiaAuth, mijiaAuth } from './auth';\r\nexport { MijiaAPI, mijiaAPI } from './api';\r\nexport { MijiaDeviceWrapper, createMijiaDevice, createMijiaDeviceByName } from './device';\r\n"],"names":[],"mappings":"AAAA,+BAA+B;;AAE/B;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 818, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/work/scodeQRMihome/scodeQRMihome/src/lib/api.ts"],"sourcesContent":["import { ApiResponse, QRLoginResponse, QRStatusResponse, Device, DeviceAction } from '@/types';\nimport { mijiaAPI, mijiaAuth } from '@/lib/mijia';\n\nconst API_BASE = process.env.NODE_ENV === 'production' ? '' : '';\n\nclass ApiClient {\n  private async request<T>(\n    endpoint: string,\n    options: RequestInit = {}\n  ): Promise<ApiResponse<T>> {\n    try {\n      console.log('🌐 API Client: Making request to:', `${API_BASE}/api${endpoint}`);\n      console.log('📤 API Client: Request options:', {\n        method: options.method || 'GET',\n        headers: options.headers\n      });\n      \n      const response = await fetch(`${API_BASE}/api${endpoint}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...options.headers,\n        },\n        ...options,\n      });\n\n      console.log('📥 API Client: Response received:', {\n        status: response.status,\n        ok: response.ok,\n        statusText: response.statusText\n      });\n\n      const data = await response.json();\n      console.log('📊 API Client: Response data:', {\n        success: data.success,\n        hasData: !!data.data,\n        error: data.error\n      });\n      \n      return data;\n    } catch (error) {\n      console.error('❌ API Client: Request error:', error);\n      console.error('🔍 Error details:', {\n        message: error instanceof Error ? error.message : 'Unknown error',\n        stack: error instanceof Error ? error.stack : undefined\n      });\n      return {\n        success: false,\n        error: 'Network error occurred'\n      };\n    }\n  }\n\n\n  // Auth methods\n  async generateQR(): Promise<ApiResponse<QRLoginResponse>> {\n    console.log('🌐 API Client: Generating QR code...');\n    try {\n      const result = await this.request<QRLoginResponse>('/auth/qr', {\n      method: 'POST',\n    });\n      console.log('✅ API Client: QR generation result:', {\n        success: result.success,\n        hasData: !!result.data,\n        error: result.error\n      });\n      return result;\n    } catch (error) {\n      console.error('❌ API Client: QR generation error:', error);\n      return {\n        success: false,\n        error: 'Failed to generate QR code'\n      };\n    }\n  }\n\n  async checkQRStatus(qrId: string): Promise<ApiResponse<QRStatusResponse>> {\n    console.log('🔍 API Client: Checking QR status for ID:', qrId);\n    try {\n      const result = await this.request<QRStatusResponse>(`/auth/qr?qr_id=${qrId}`);\n      console.log('📥 API Client: QR status result:', {\n        success: result.success,\n        status: result.data?.status,\n        hasToken: !!result.data?.token,\n        hasUser: !!result.data?.user,\n        error: result.error\n      });\n      return result;\n    } catch (error) {\n      console.error('❌ API Client: QR status check error:', error);\n      return {\n        success: false,\n        error: 'Failed to check QR status'\n      };\n    }\n  }\n\n  // Device methods - sử dụng Mijia TypeScript API\n  async getDevices(): Promise<ApiResponse<Device[]>> {\n    try {\n      // Gọi Mijia API để lấy tất cả thiết bị bao gồm thiết bị được chia sẻ\n      const response = await mijiaAPI.get_all_devices();\n      \n      if (response.success && response.data) {\n        // Chuyển đổi dữ liệu từ Mijia API sang format của ứng dụng\n        const devices: Device[] = response.data.map((device: any) => ({\n          id: device.did || device.id,\n          name: device.name || 'Unknown Device',\n          type: this.mapDeviceType(device.model),\n          model: device.model || 'unknown',\n          online: device.is_online || false,\n          properties: device.properties || {},\n          room: device.room_name || 'Unknown Room'\n        }));\n        \n        return {\n          success: true,\n          data: devices\n        };\n      } else {\n        // Fallback to mock data if Mijia API fails\n        const mockDevices: Device[] = [\n          {\n            id: 'mock-device-1',\n            name: 'Mock Light',\n            type: 'light',\n            model: 'yeelink.light.lamp4',\n            online: true,\n            properties: {\n              on: true,\n              brightness: 80,\n              colorTemperature: 4000\n            },\n            room: 'Living Room'\n          },\n          {\n            id: 'mock-device-2', \n            name: 'Mock Sensor',\n            type: 'sensor',\n            model: 'miaomiaoce.sensor_ht.t1',\n            online: true,\n            properties: {\n              temperature: 25.5,\n              humidity: 60\n            },\n            room: 'Bedroom'\n          }\n        ];\n        \n        return {\n          success: true,\n          data: mockDevices\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Failed to get devices'\n      };\n    }\n  }\n\n  private mapDeviceType(model: string): string {\n    if (!model) return 'unknown';\n    \n    const modelLower = model.toLowerCase();\n    if (modelLower.includes('light') || modelLower.includes('lamp')) return 'light';\n    if (modelLower.includes('sensor') || modelLower.includes('ht')) return 'sensor';\n    if (modelLower.includes('camera')) return 'camera';\n    if (modelLower.includes('speaker')) return 'speaker';\n    if (modelLower.includes('switch')) return 'switch';\n    if (modelLower.includes('plug')) return 'plug';\n    \n    return 'unknown';\n  }\n\n  async getHomes(): Promise<ApiResponse<any[]>> {\n    console.log('🔍 API Client: Getting homes from Mijia API...');\n    try {\n      const response = await mijiaAPI.get_homes_list();\n      console.log('📥 Mijia API homes response:', response);\n      \n      if (response.success && response.data) {\n        return {\n          success: true,\n          data: response.data\n        };\n      } else {\n        console.log('⚠️ Mijia API failed, using mock data');\n        const mockHomes = [\n          {\n            id: 'mock-home-1',\n            name: 'My Home',\n            address: '123 Main St',\n            roomlist: [\n              { id: 'room-1', name: 'Living Room', dids: ['mock-device-1'] },\n              { id: 'room-2', name: 'Bedroom', dids: ['mock-device-2'] }\n            ]\n          }\n        ];\n        \n        return {\n          success: true,\n          data: mockHomes\n        };\n      }\n    } catch (error) {\n      console.error('❌ API Client: Get homes error:', error);\n      return {\n        success: false,\n        error: 'Failed to get homes'\n      };\n    }\n  }\n\n  async getScenes(homeId: string): Promise<ApiResponse<any[]>> {\n    console.log('🔍 API Client: Getting scenes for home:', homeId);\n    try {\n      const response = await mijiaAPI.get_scenes_list(homeId);\n      console.log('📥 Mijia API scenes response:', response);\n      \n      if (response.success && response.data) {\n        return {\n          success: true,\n          data: response.data\n        };\n      } else {\n        console.log('⚠️ Mijia API failed, using mock data');\n        const mockScenes = [\n          {\n            id: 'scene-1',\n            name: 'Good Morning',\n            description: 'Turn on lights and open curtains',\n            enabled: true,\n            homeId: homeId\n          },\n          {\n            id: 'scene-2', \n            name: 'Good Night',\n            description: 'Turn off all lights',\n            enabled: true,\n            homeId: homeId\n          }\n        ];\n        \n        return {\n          success: true,\n          data: mockScenes\n        };\n      }\n    } catch (error) {\n      console.error('❌ API Client: Get scenes error:', error);\n      return {\n        success: false,\n        error: 'Failed to get scenes'\n      };\n    }\n  }\n\n  async runScene(sceneId: string): Promise<ApiResponse> {\n    console.log('🔍 API Client: Running scene:', sceneId);\n    try {\n      const response = await mijiaAPI.run_scene(sceneId);\n      console.log('📥 Mijia API run scene response:', response);\n      \n      if (response.success) {\n        return {\n          success: true,\n          data: { message: `Scene ${sceneId} executed successfully` }\n        };\n      } else {\n        return {\n          success: false,\n          error: response.error || 'Failed to run scene'\n        };\n      }\n    } catch (error) {\n      console.error('❌ API Client: Run scene error:', error);\n      return {\n        success: false,\n        error: 'Failed to run scene'\n      };\n    }\n  }\n\n  async getDeviceProperties(deviceId: string): Promise<ApiResponse<any>> {\n    console.log('🔍 API Client: Getting device properties for:', deviceId);\n    try {\n      const response = await mijiaAPI.get_devices_prop({ did: deviceId });\n      console.log('📥 Mijia API device properties response:', response);\n      \n      if (response.success && response.data) {\n        return {\n          success: true,\n          data: response.data\n        };\n      } else {\n        console.log('⚠️ Mijia API failed, using mock data');\n        const mockProperties = {\n          on: true,\n          brightness: 80,\n          colorTemperature: 4000,\n          temperature: 25.5,\n          humidity: 60\n        };\n        \n        return {\n          success: true,\n          data: mockProperties\n        };\n      }\n    } catch (error) {\n      console.error('❌ API Client: Get device properties error:', error);\n      return {\n        success: false,\n        error: 'Failed to get device properties'\n      };\n    }\n  }\n\n  async updateDevice(deviceId: string, properties: Record<string, any>): Promise<ApiResponse> {\n    console.log('🔍 API Client: Updating device:', deviceId, properties);\n    try {\n      const response = await mijiaAPI.update_device({\n        device_id: deviceId,\n        properties: properties\n      });\n      console.log('📥 Mijia API update device response:', response);\n      \n      if (response.success) {\n        return {\n          success: true,\n          data: { message: `Device ${deviceId} updated successfully` }\n        };\n      } else {\n        return {\n          success: false,\n          error: response.error || 'Failed to update device'\n        };\n      }\n    } catch (error) {\n      console.error('❌ API Client: Update device error:', error);\n      return {\n        success: false,\n        error: 'Failed to update device'\n      };\n    }\n  }\n\n  async executeDeviceAction(deviceId: string, action: DeviceAction): Promise<ApiResponse> {\n    console.log('🔍 API Client: Executing device action:', deviceId, action);\n    try {\n      const response = await mijiaAPI.run_action({\n        device_id: deviceId,\n        action: action.action || 'set_property',\n        params: action.params || []\n      });\n      console.log('📥 Mijia API execute action response:', response);\n      \n      if (response.success) {\n        return {\n          success: true,\n          data: { message: `Action ${action.action} executed successfully on device ${deviceId}` }\n        };\n      } else {\n        return {\n          success: false,\n          error: response.error || 'Failed to execute device action'\n        };\n      }\n    } catch (error) {\n      console.error('❌ API Client: Execute device action error:', error);\n      return {\n        success: false,\n        error: 'Failed to execute device action'\n      };\n    }\n  }\n\n  // Mijia login methods\n  async loginWithCredentials(username: string, password: string): Promise<ApiResponse> {\n    console.log('🔍 API Client: Login with credentials:', username);\n    try {\n      const response = await mijiaAuth.login(username, password);\n      console.log('📥 Mijia Auth login response:', response);\n      \n      if (response.success) {\n        // Set session for mijiaAPI\n        mijiaAPI.setSession(response.data);\n        return {\n          success: true,\n          data: response.data\n        };\n      } else {\n        return {\n          success: false,\n          error: response.error || 'Login failed'\n        };\n      }\n    } catch (error) {\n      console.error('❌ API Client: Login with credentials error:', error);\n      return {\n        success: false,\n        error: 'Login failed'\n      };\n    }\n  }\n\n  async loginWithQR(): Promise<ApiResponse> {\n    console.log('🔍 API Client: Login with QR');\n    try {\n      const response = await mijiaAuth.QRlogin();\n      console.log('📥 Mijia Auth QR login response:', response);\n      \n      if (response.success) {\n        // Set session for mijiaAPI\n        mijiaAPI.setSession(response.data);\n        return {\n          success: true,\n          data: response.data\n        };\n      } else {\n        return {\n          success: false,\n          error: response.error || 'QR Login failed'\n        };\n      }\n    } catch (error) {\n      console.error('❌ API Client: Login with QR error:', error);\n      return {\n        success: false,\n        error: 'QR Login failed'\n      };\n    }\n  }\n}\n\nexport const apiClient = new ApiClient();\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1246, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/work/scodeQRMihome/scodeQRMihome/src/lib/store.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { User, Device } from '@/types';\nimport { apiClient } from './api';\nimport { mijiaAPI } from './mijia';\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  mijiaSession: any | null;\n  login: (token: string, user: User, mijiaSession?: any) => void;\n  logout: () => void;\n}\n\ninterface DeviceState {\n  devices: Device[];\n  loading: boolean;\n  error: string | null;\n  fetchDevices: () => Promise<void>;\n  updateDevice: (deviceId: string, properties: Record<string, any>) => Promise<void>;\n  setError: (error: string | null) => void;\n}\n\nexport const useAuthStore = create<AuthState>()(\n  persist(\n    (set) => ({\n      user: null,\n      token: null,\n      isAuthenticated: false,\n      mijiaSession: null,\n      login: (token: string, user: User, mijiaSession?: any) => {\n        const userWithSession = { ...user, mijiaSession };\n        set({ token, user: userWithSession, isAuthenticated: true, mijiaSession });\n        // Set session for Mijia API\n        if (mijiaSession) {\n          mijiaAPI.setSession(mijiaSession);\n        }\n      },\n      logout: () => {\n        set({ token: null, user: null, isAuthenticated: false, mijiaSession: null });\n        // Clear Mijia API session\n        mijiaAPI.setSession(null);\n      },\n    }),\n    {\n      name: 'auth-storage',\n    }\n  )\n);\n\nexport const useDeviceStore = create<DeviceState>()((set, get) => ({\n  devices: [],\n  loading: false,\n  error: null,\n  \n  fetchDevices: async () => {\n    set({ loading: true, error: null });\n    try {\n      const response = await apiClient.getDevices();\n      if (response.success && response.data) {\n        set({ devices: response.data, loading: false });\n      } else {\n        set({ error: response.error || 'Failed to fetch devices', loading: false });\n      }\n    } catch (error) {\n      set({ error: 'Network error', loading: false });\n    }\n  },\n  \n  updateDevice: async (deviceId: string, properties: Record<string, any>) => {\n    try {\n      const response = await apiClient.updateDevice(deviceId, properties);\n      if (response.success) {\n        // Update local state\n        const devices = get().devices.map(device => \n          device.id === deviceId \n            ? { ...device, properties: { ...device.properties, ...properties } }\n            : device\n        );\n        set({ devices });\n      } else {\n        set({ error: response.error || 'Failed to update device' });\n      }\n    } catch (error) {\n      set({ error: 'Network error' });\n    }\n  },\n  \n  setError: (error: string | null) => {\n    set({ error });\n  },\n}));\n\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;AACA;AAAA;;;;;AAoBO,MAAM,eAAe,IAAA,kJAAM,IAChC,IAAA,wJAAO,EACL,CAAC,MAAQ,CAAC;QACR,MAAM;QACN,OAAO;QACP,iBAAiB;QACjB,cAAc;QACd,OAAO,CAAC,OAAe,MAAY;YACjC,MAAM,kBAAkB;gBAAE,GAAG,IAAI;gBAAE;YAAa;YAChD,IAAI;gBAAE;gBAAO,MAAM;gBAAiB,iBAAiB;gBAAM;YAAa;YACxE,4BAA4B;YAC5B,IAAI,cAAc;gBAChB,sIAAQ,CAAC,UAAU,CAAC;YACtB;QACF;QACA,QAAQ;YACN,IAAI;gBAAE,OAAO;gBAAM,MAAM;gBAAM,iBAAiB;gBAAO,cAAc;YAAK;YAC1E,0BAA0B;YAC1B,sIAAQ,CAAC,UAAU,CAAC;QACtB;IACF,CAAC,GACD;IACE,MAAM;AACR;AAIG,MAAM,iBAAiB,IAAA,kJAAM,IAAgB,CAAC,KAAK,MAAQ,CAAC;QACjE,SAAS,EAAE;QACX,SAAS;QACT,OAAO;QAEP,cAAc;YACZ,IAAI;gBAAE,SAAS;gBAAM,OAAO;YAAK;YACjC,IAAI;gBACF,MAAM,WAAW,MAAM,8HAAS,CAAC,UAAU;gBAC3C,IAAI,SAAS,OAAO,IAAI,SAAS,IAAI,EAAE;oBACrC,IAAI;wBAAE,SAAS,SAAS,IAAI;wBAAE,SAAS;oBAAM;gBAC/C,OAAO;oBACL,IAAI;wBAAE,OAAO,SAAS,KAAK,IAAI;wBAA2B,SAAS;oBAAM;gBAC3E;YACF,EAAE,OAAO,OAAO;gBACd,IAAI;oBAAE,OAAO;oBAAiB,SAAS;gBAAM;YAC/C;QACF;QAEA,cAAc,OAAO,UAAkB;YACrC,IAAI;gBACF,MAAM,WAAW,MAAM,8HAAS,CAAC,YAAY,CAAC,UAAU;gBACxD,IAAI,SAAS,OAAO,EAAE;oBACpB,qBAAqB;oBACrB,MAAM,UAAU,MAAM,OAAO,CAAC,GAAG,CAAC,CAAA,SAChC,OAAO,EAAE,KAAK,WACV;4BAAE,GAAG,MAAM;4BAAE,YAAY;gCAAE,GAAG,OAAO,UAAU;gCAAE,GAAG,UAAU;4BAAC;wBAAE,IACjE;oBAEN,IAAI;wBAAE;oBAAQ;gBAChB,OAAO;oBACL,IAAI;wBAAE,OAAO,SAAS,KAAK,IAAI;oBAA0B;gBAC3D;YACF,EAAE,OAAO,OAAO;gBACd,IAAI;oBAAE,OAAO;gBAAgB;YAC/B;QACF;QAEA,UAAU,CAAC;YACT,IAAI;gBAAE;YAAM;QACd;IACF,CAAC","debugId":null}},
    {"offset": {"line": 1360, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/work/scodeQRMihome/scodeQRMihome/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 1375, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/work/scodeQRMihome/scodeQRMihome/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,mNAAgB,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,mNAAgB,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1460, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/work/scodeQRMihome/scodeQRMihome/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,IAAA,uKAAG,EACxB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,mNAAgB,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,wKAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,IAAA,yHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1520, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/work/scodeQRMihome/scodeQRMihome/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,mNAAgB,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,IAAA,yHAAE,EACX,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1548, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/work/scodeQRMihome/scodeQRMihome/src/components/ui/label.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<React.ElementRef<typeof LabelPrimitive.Root>, React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> & VariantProps<typeof labelVariants>>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,gBAAgB,IAAA,uKAAG,EACvB;AAGF,MAAM,sBAAQ,mNAAgB,CAAgJ,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACtM,8OAAC,yKAAmB;QAClB,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,yKAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1578, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/work/scodeQRMihome/scodeQRMihome/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,wKAAkB;AAE/B,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,wKAAkB;QACjB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,6FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,wKAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAqB;QACpB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,kYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,2KAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAqB;QACpB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,2KAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1633, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/work/scodeQRMihome/scodeQRMihome/src/app/login/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useAuthStore } from '@/lib/store';\r\nimport { toast } from 'sonner';\r\nimport { apiClient } from '@/lib/api';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport {\r\n  QrCode,\r\n  User,\r\n  Lock,\r\n  Smartphone,\r\n  Wifi,\r\n  Shield,\r\n  CheckCircle,\r\n  XCircle,\r\n  RefreshCw\r\n} from 'lucide-react';\r\n\r\nconst LoginPage = () => {\r\n  const router = useRouter();\r\n  const { isAuthenticated, login } = useAuthStore();\r\n  const [qrCode, setQrCode] = useState<string>('');\r\n  const [qrStatus, setQrStatus] = useState<'idle' | 'loading' | 'success' | 'error'>('idle');\r\n  const [loginMethod, setLoginMethod] = useState<'qr' | 'credentials'>('qr');\r\n  const [credentials, setCredentials] = useState({\r\n    username: '',\r\n    password: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      router.push('/dashboard');\r\n    }\r\n  }, [isAuthenticated, router]);\r\n\r\n  const generateQR = async () => {\r\n    setQrStatus('loading');\r\n    try {\r\n      const response = await apiClient.generateQR();\r\n      if (response.success && response.data?.qrUrl) {\r\n        setQrCode(response.data.qrUrl);\r\n        setQrStatus('idle');\r\n        checkQRStatus();\r\n      } else {\r\n        setQrStatus('error');\r\n        toast.error('Không thể tạo mã QR');\r\n      }\r\n    } catch {\r\n      setQrStatus('error');\r\n      toast.error('Lỗi khi tạo mã QR');\r\n    }\r\n  };\r\n\r\n  const checkQRStatus = async () => {\r\n    try {\r\n      const response = await apiClient.checkQRStatus('');\r\n      if (response.success) {\r\n        if (response.data?.status === 'confirmed') {\r\n          setQrStatus('success');\r\n          toast.success('Đăng nhập thành công!');\r\n          if (response.data.token && response.data.user) {\r\n            await login(response.data.token, response.data.user);\r\n          }\r\n          router.push('/dashboard');\r\n        } else if (response.data?.status === 'expired') {\r\n          setQrStatus('error');\r\n          toast.error('Mã QR đã hết hạn');\r\n        } else {\r\n          // Continue checking\r\n          setTimeout(checkQRStatus, 2000);\r\n        }\r\n      }\r\n    } catch {\r\n      setQrStatus('error');\r\n      toast.error('Lỗi khi kiểm tra trạng thái QR');\r\n    }\r\n  };\r\n\r\n  const handleCredentialLogin = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n  \r\n    try {\r\n      const response = await apiClient.loginWithCredentials(credentials.username, credentials.password);\r\n      if (\r\n        response.success &&\r\n        response.data &&\r\n        typeof response.data === 'object' &&\r\n        'token' in response.data &&\r\n        'user' in response.data\r\n      ) {\r\n        toast.success('Đăng nhập thành công!');\r\n        await login(\r\n          response.data.token,\r\n          response.data.user,\r\n          response.data.mijiaSession // Now properly typed\r\n        );\r\n        router.push('/dashboard');\r\n      } else {\r\n        toast.error(response.error || 'Đăng nhập thất bại');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      toast.error('Lỗi khi đăng nhập');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-pink-900 to-red-900 flex items-center justify-center p-4 relative overflow-hidden\">\r\n      {/* Animated background */}\r\n      <div className=\"absolute inset-0 overflow-hidden\">\r\n        {/* Floating orbs */}\r\n        <div className=\"absolute -top-40 -right-40 w-96 h-96 bg-gradient-to-r from-pink-500 to-purple-500 rounded-full blur-3xl animate-pulse\"></div>\r\n        <div className=\"absolute -bottom-40 -left-40 w-96 h-96 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-full blur-3xl animate-pulse delay-1000\"></div>\r\n        <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-80 h-80 bg-gradient-to-r from-yellow-500 to-orange-500 rounded-full blur-3xl animate-pulse delay-500\"></div>\r\n      \r\n        {/* Moving particles */}\r\n        <div className=\"absolute top-1/4 left-1/4 w-2 h-2 bg-white rounded-full animate-bounce delay-300\"></div>\r\n        <div className=\"absolute top-3/4 right-1/4 w-3 h-3 bg-pink-300 rounded-full animate-bounce delay-700\"></div>\r\n        <div className=\"absolute top-1/2 right-1/3 w-1 h-1 bg-blue-300 rounded-full animate-bounce delay-1000\"></div>\r\n        <div className=\"absolute bottom-1/4 left-1/3 w-2 h-2 bg-yellow-300 rounded-full animate-bounce delay-500\"></div>\r\n      \r\n        {/* Grid pattern */}\r\n        <div className=\"absolute inset-0 opacity-30\" style={{\r\n          backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Ccircle cx='30' cy='30' r='1'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")`\r\n        }}></div>\r\n      </div>\r\n\r\n      <div className=\"relative w-full max-w-md\">\r\n        {/* Logo */}\r\n        <div className=\"text-center mb-8 animate-fade-in\">\r\n          <div className=\"inline-flex items-center justify-center w-20 h-20 bg-gradient-to-r from-pink-500 via-purple-500 to-blue-500 rounded-3xl shadow-2xl mb-6 relative group hover:scale-110 transition-transform duration-300\">\r\n            <div className=\"absolute inset-0 bg-gradient-to-r from-pink-500 via-purple-500 to-blue-500 rounded-3xl blur-lg opacity-75 group-hover:opacity-100 transition-opacity duration-300\"></div>\r\n            <Wifi className=\"h-10 w-10 text-white relative z-10 animate-pulse\" />\r\n          </div>\r\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-pink-400 via-purple-400 to-blue-400 bg-clip-text text-transparent mb-3 animate-slide-up\">\r\n            Smart Control\r\n          </h1>\r\n          <p className=\"text-pink-200 text-lg animate-slide-up delay-200\">✨ Quản lý thiết bị thông minh ✨</p>\r\n        </div>\r\n\r\n        <Card className=\"backdrop-blur-xl bg-white/20 border-white/30 shadow-2xl relative overflow-hidden group hover:bg-white/25 transition-all duration-500\">\r\n          {/* Card glow effect */}\r\n          <div className=\"absolute inset-0 bg-gradient-to-r from-pink-500/20 via-purple-500/20 to-blue-500/20 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-500\"></div>\r\n        \r\n          <CardHeader className=\"text-center pb-4 relative z-10\">\r\n            <CardTitle className=\"text-3xl font-bold bg-gradient-to-r from-pink-300 via-purple-300 to-blue-300 bg-clip-text text-transparent animate-pulse\">\r\n              🚀 Đăng nhập\r\n            </CardTitle>\r\n            <CardDescription className=\"text-pink-200 text-lg\">\r\n              Chọn phương thức đăng nhập của bạn\r\n            </CardDescription>\r\n          </CardHeader>\r\n\r\n          <CardContent>\r\n            <Tabs value={loginMethod} onValueChange={(value) => setLoginMethod(value as 'qr' | 'credentials')}>\r\n              <TabsList className=\"grid w-full grid-cols-2 bg-gradient-to-r from-pink-500/20 to-purple-500/20 border border-white/20 backdrop-blur-sm\">\r\n                <TabsTrigger \r\n                  value=\"qr\" \r\n                  className=\"text-white data-[state=active]:bg-gradient-to-r data-[state=active]:from-pink-500 data-[state=active]:to-purple-500 data-[state=active]:text-white transition-all duration-300 hover:bg-white/10\"\r\n                >\r\n                  <QrCode className=\"h-4 w-4 mr-2\" />\r\n                  📱 QR Code\r\n                </TabsTrigger>\r\n                <TabsTrigger \r\n                  value=\"credentials\" \r\n                  className=\"text-white data-[state=active]:bg-gradient-to-r data-[state=active]:from-purple-500 data-[state=active]:to-blue-500 data-[state=active]:text-white transition-all duration-300 hover:bg-white/10\"\r\n                >\r\n                  <User className=\"h-4 w-4 mr-2\" />\r\n                  👤 Tài khoản\r\n                </TabsTrigger>\r\n              </TabsList>\r\n\r\n              {/* QR Code Login */}\r\n              <TabsContent value=\"qr\" className=\"space-y-6 mt-6\">\r\n                <div className=\"text-center\">\r\n                  <div className=\"inline-flex items-center justify-center w-16 h-16 bg-white/10 rounded-2xl mb-4\">\r\n                    <Smartphone className=\"h-8 w-8 text-white\" />\r\n                  </div>\r\n                  <h3 className=\"text-lg font-semibold text-white mb-2\">\r\n                    Đăng nhập bằng QR Code</h3>\r\n                  <p className=\"text-slate-300 text-sm mb-6\">\r\n                    Quét mã QR bằng ứng dụng Mi Home để đăng nhập\r\n                  </p>\r\n                </div>\r\n\r\n                {qrStatus === 'idle' && !qrCode && (\r\n                  <Button \r\n                    onClick={generateQR}\r\n                    className=\"w-full bg-gradient-to-r from-pink-500 via-purple-500 to-blue-500 hover:from-pink-600 hover:via-purple-600 hover:to-blue-600 text-white font-semibold py-3 rounded-xl shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300 relative overflow-hidden group\"\r\n                  >\r\n                    <div className=\"absolute inset-0 bg-gradient-to-r from-pink-400 via-purple-400 to-blue-400 opacity-0 group-hover:opacity-20 transition-opacity duration-300\"></div>\r\n                    <QrCode className=\"h-5 w-5 mr-2 relative z-10\" />\r\n                    <span className=\"relative z-10\">✨ Tạo mã QR ✨</span>\r\n                  </Button>\r\n                )}\r\n\r\n                {qrStatus === 'loading' && (\r\n                  <div className=\"text-center\">\r\n                    <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-white mx-auto mb-4\"></div>\r\n                    <p className=\"text-slate-300\">\r\n                      Đang tạo mã QR...</p>\r\n                  </div>\r\n                )}\r\n\r\n                {qrCode && qrStatus === 'idle' && (\r\n                  <div className=\"text-center space-y-4\">\r\n                    <div className=\"bg-white p-4 rounded-2xl inline-block\">\r\n                      <img \r\n                        src={qrCode} \r\n                        alt=\"QR Code\" \r\n                        className=\"w-48 h-48\"\r\n                      />\r\n                    </div>\r\n                    <p className=\"text-slate-300 text-sm\">\r\n                      Quét mã QR bằng ứng dụng Mi Home\r\n                    </p>\r\n                    <Button \r\n                      variant=\"outline\" \r\n                      onClick={generateQR}\r\n                      className=\"text-white border-white/30 hover:bg-white/10\"\r\n                    >\r\n                      <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n                      Tạo mã mới\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n\r\n                {qrStatus === 'success' && (\r\n                  <div className=\"text-center\">\r\n                    <CheckCircle className=\"h-12 w-12 text-green-400 mx-auto mb-4\" />\r\n                    <p className=\"text-green-400 font-medium\">\r\n                      Đăng nhập thành công!</p>\r\n                  </div>\r\n                )}\r\n\r\n                {qrStatus === 'error' && (\r\n                  <div className=\"text-center\">\r\n                    <XCircle className=\"h-12 w-12 text-red-400 mx-auto mb-4\" />\r\n                    <p className=\"text-red-400 font-medium mb-4\">Lỗi khi tạo mã QR</p>\r\n                    <Button \r\n                      onClick={generateQR}\r\n                      className=\"bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white\"\r\n                    >\r\n                      <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n                      Thử lại\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n              </TabsContent>\r\n\r\n              {/* Credentials Login */}\r\n              <TabsContent value=\"credentials\" className=\"space-y-6 mt-6\">\r\n                <form onSubmit={handleCredentialLogin} className=\"space-y-4\">\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"username\" className=\"text-white\">Tên đăng nhập</Label>\r\n                    <div className=\"relative\">\r\n                      <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-slate-400\" />\r\n                      <Input\r\n                        id=\"username\"\r\n                        type=\"text\"\r\n                        placeholder=\"Nhập tên đăng nhập\"\r\n                        value={credentials.username}\r\n                        onChange={(e) => setCredentials({...credentials, username: e.target.value})}\r\n                        className=\"pl-10 bg-white/10 border-white/30 text-white placeholder:text-slate-400 focus:bg-white/20\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"password\" className=\"text-white\">Mật khẩu</Label>\r\n                    <div className=\"relative\">\r\n                      <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-slate-400\" />\r\n                      <Input\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Nhập mật khẩu\"\r\n                        value={credentials.password}\r\n                        onChange={(e) => setCredentials({...credentials, password: e.target.value})}\r\n                        className=\"pl-10 bg-white/10 border-white/30 text-white placeholder:text-slate-400 focus:bg-white/20\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <Button \r\n                    type=\"submit\" \r\n                    className=\"w-full bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white\"\r\n                    disabled={loading}\r\n                  >\r\n                    {loading ? (\r\n                      <>\r\n                        <RefreshCw className=\"h-4 w-4 mr-2 animate-spin\" />\r\n                        Đang đăng nhập...\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Shield className=\"h-4 w-4 mr-2\" />\r\n                        Đăng nhập\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                </form>\r\n              </TabsContent>\r\n            </Tabs>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Footer */}\r\n        <div className=\"text-center mt-8\">\r\n          <p className=\"text-slate-400 text-sm\">\r\n            © 2024 Smart Control. Được phát triển bởi ScodeVN\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}